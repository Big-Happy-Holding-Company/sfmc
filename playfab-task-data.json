{
  "AllTasks": "[{\"id\":\"COM-001\",\"title\":\"Signal Relay Reflection\",\"description\":\"The Tesla Corporation's quantum nav computer kept trying to calculate mirror reflections by asking 'Which pixel goes where?' for every single cell. It processed 847 calculations just to flip a 2x2 grid, while Rick the Intern figured it out by glancing at it. AI struggles with spatial reasoning and mirror symmetry because it processes data sequentially rather than understanding 2D spatial relationships. Unlike humans who instantly recognize left-right flips, AI must learn complex coordinate transformations. Analyze communication relay indicators by reflecting the grid horizontally.\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":4020,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"⬛\",\"🛰️\"],[\"📱\",\"⬛\",\"⬛\"],[\"⌨️\",\"📶\",\"⬛\"]],\"output\":[[\"🛰️\",\"⬛\",\"📡\"],[\"⬛\",\"⬛\",\"📱\"],[\"⬛\",\"📶\",\"⌨️\"]]},{\"input\":[[\"⬛\",\"📋\",\"⬛\"],[\"💻\",\"⬛\",\"🎚️\"],[\"⬛\",\"🎧\",\"⬛\"]],\"output\":[[\"⬛\",\"📋\",\"⬛\"],[\"🎚️\",\"⬛\",\"💻\"],[\"⬛\",\"🎧\",\"⬛\"]]}],\"testInput\":[[\"⬛\",\"📡\",\"🛰️\"],[\"⬛\",\"📱\",\"⬛\"],[\"⌨️\",\"⬛\",\"📶\"]],\"testOutput\":[[\"🛰️\",\"📡\",\"⬛\"],[\"⬛\",\"📱\",\"⬛\"],[\"📶\",\"⬛\",\"⌨️\"]],\"hints\":[\"Computers don't understand mirrors like you do. When you look in a bathroom mirror, you know your left hand looks like it's on the right side. But computers have to think really hard about where each tiny square should move to make a mirror image.\",\"It's like when you write your name on paper and then try to read it by holding it up to a window backwards. You can figure it out easily, but a computer would have to think about where each letter should go one by one.\",\"Imagine you're playing with building blocks and someone asks you to build the exact same tower but with everything flipped around. You'd just look at it and know what to do, but a computer would count every single block and calculate where it should move.\",\"Flip the grid left-to-right.\",\"First column becomes last column, second stays in middle (for 3×3).\",\"⬛ cells flip along with all other values.\"]},{\"id\":\"COM-002\",\"title\":\"Relay Rotation Protocol\",\"description\":\"The communications array got stuck trying to rotate antenna positioning data 90 degrees. Instead of simply turning the coordinate map, it began physically rotating the entire 50-ton antenna assembly, creating a slow-motion disaster as cables twisted into knots. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Rotate relay indicator grid 90° clockwise 🔁 to align with new satellite orientation.\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":4220,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"⬛\",\"🛰️\"],[\"📱\",\"⌨️\",\"⬛\"],[\"⬛\",\"📶\",\"📋\"]],\"output\":[[\"⬛\",\"📱\",\"📡\"],[\"📶\",\"⌨️\",\"⬛\"],[\"📋\",\"⬛\",\"🛰️\"]]},{\"input\":[[\"⬛\",\"💻\",\"⬛\"],[\"🎚️\",\"⬛\",\"🎧\"],[\"⬛\",\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"🎚️\",\"⬛\"],[\"⬛\",\"⬛\",\"💻\"],[\"⬛\",\"🎧\",\"⬛\"]]}],\"testInput\":[[\"🛰️\",\"⬛\",\"⬛\"],[\"⬛\",\"📱\",\"⌨️\"],[\"📶\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"📶\",\"⬛\",\"🛰️\"],[\"⬛\",\"📱\",\"⬛\"],[\"⬛\",\"⌨️\",\"⬛\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90° clockwise.\",\"Rows become columns from left to right.\",\"⬛ cells rotate just like any other value.\"]},{\"id\":\"COM-003\",\"title\":\"Relay Vertical Reflection\",\"description\":\"Verify relay indicators by reflecting the grid vertically (top ↔ bottom).\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":4420,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"⬛\",\"🛰️\"],[\"⬛\",\"📱\",\"⬛\"],[\"⌨️\",\"⬛\",\"📶\"]],\"output\":[[\"⌨️\",\"⬛\",\"📶\"],[\"⬛\",\"📱\",\"⬛\"],[\"📡\",\"⬛\",\"🛰️\"]]},{\"input\":[[\"⬛\",\"📋\",\"⬛\"],[\"💻\",\"⬛\",\"🎚️\"],[\"⬛\",\"⬛\",\"🎧\"]],\"output\":[[\"⬛\",\"⬛\",\"🎧\"],[\"💻\",\"⬛\",\"🎚️\"],[\"⬛\",\"📋\",\"⬛\"]]}],\"testInput\":[[\"🛰️\",\"⬛\",\"⬛\"],[\"⬛\",\"📱\",\"⌨️\"],[\"📶\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"📶\",\"⬛\",\"⬛\"],[\"⬛\",\"📱\",\"⌨️\"],[\"🛰️\",\"⬛\",\"⬛\"]],\"hints\":[\"Flip the grid top-to-bottom.\",\"Rows swap positions; columns remain the same.\",\"⬛ cells flip along with all other values.\"]},{\"id\":\"COM-004\",\"title\":\"Relay Diagonal Reflection\",\"description\":\"Recalculate relay grid by reflecting across the main diagonal (top-left to bottom-right).\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":4620,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🛰️\",\"⬛\"],[\"⬛\",\"📱\",\"⌨️\"],[\"📶\",\"⬛\",\"📋\"]],\"output\":[[\"📡\",\"⬛\",\"📶\"],[\"🛰️\",\"📱\",\"⬛\"],[\"⬛\",\"⌨️\",\"📋\"]]},{\"input\":[[\"💻\",\"⬛\",\"⬛\"],[\"🎚️\",\"🎧\",\"⬛\"],[\"⬛\",\"⬛\",\"📡\"]],\"output\":[[\"💻\",\"🎚️\",\"⬛\"],[\"⬛\",\"🎧\",\"⬛\"],[\"⬛\",\"⬛\",\"📡\"]]}],\"testInput\":[[\"🛰️\",\"⬛\",\"📱\"],[\"⬛\",\"⌨️\",\"⬛\"],[\"📶\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"🛰️\",\"⬛\",\"📶\"],[\"⬛\",\"⌨️\",\"⬛\"],[\"📱\",\"⬛\",\"⬛\"]],\"hints\":[\"Swap elements symmetrically across the main diagonal.\",\"Row index becomes column index.\",\"⬛ cells reflect just like any other value.\"]},{\"id\":\"COM-005\",\"title\":\"Relay 180° Rotation\",\"description\":\"Stabilize communication relay map by rotating the grid 180°.\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":4850,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"⬛\",\"🛰️\"],[\"📱\",\"⌨️\",\"⬛\"],[\"⬛\",\"📶\",\"📋\"]],\"output\":[[\"📋\",\"📶\",\"⬛\"],[\"⬛\",\"⌨️\",\"📱\"],[\"🛰️\",\"⬛\",\"📡\"]]},{\"input\":[[\"⬛\",\"💻\",\"🎚️\"],[\"⬛\",\"⬛\",\"🎧\"],[\"📡\",\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"⬛\",\"📡\"],[\"🎧\",\"⬛\",\"⬛\"],[\"🎚️\",\"💻\",\"⬛\"]]}],\"testInput\":[[\"🛰️\",\"⬛\",\"⬛\"],[\"⬛\",\"📱\",\"⌨️\"],[\"📶\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"⬛\",\"📶\"],[\"⌨️\",\"📱\",\"⬛\"],[\"⬛\",\"⬛\",\"🛰️\"]],\"hints\":[\"Rotate the grid 180° (flip horizontally then vertically).\",\"Each cell moves to its diagonally opposite position.\",\"⬛ remains ⬛ after rotation.\"]},{\"id\":\"COM-100\",\"title\":\"Flip the Solar Grid!\",\"description\":\"🚀 Crisis! Someone was taking selfies 📱 near the control panel and knocked the solar array blueprint backwards ⇄! Now the panels face deep space instead of the Sun ☀️, and life support is failing! Study the before → after symbol grids to see the flip. Mirror today's entire grid left-to-right ↔️ to restore oxygen 💨 before time runs out ⏰!\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":4050,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"💻\",\"📡\"],[\"💻\",\"📡\"]],\"output\":[[\"📡\",\"💻\"],[\"📡\",\"💻\"]]},{\"input\":[[\"⌨️\",\"📡\"],[\"🛰️\",\"📋\"]],\"output\":[[\"📡\",\"⌨️\"],[\"📋\",\"🛰️\"]]}],\"testInput\":[[\"📱\",\"💻\"],[\"📶\",\"📡\"]],\"testOutput\":[[\"💻\",\"📱\"],[\"📡\",\"📶\"]],\"hints\":[\"Think of the grid as being reflected in a mirror placed to the right side.\",\"The first column becomes the last column, the second becomes the second-to-last, and so on.\",\"The black square (⬛) reflects just like any other cell value.\"],\"transformationType\":\"horizontal_reflection\",\"generated\":true},{\"id\":\"COM-101\",\"title\":\"Finish the Color Pattern!\",\"description\":\"📡 Pattern failure! Elun Stink was too busy fighting with bots on Twitter to complete the transmission grid. Half the critical relay symbols are missing ❓ and astronauts can't call home 📞! Examine the example grids to see how blank spaces should be filled. Complete today's symbol grid with the correct patterns ✨ to restore communication for the stranded crew 👩‍🚀👨‍🚀!\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":4700,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"💻\",\"📡\"],[\"💻\",\"📡\"]],\"output\":[[\"📡\",\"💻\"],[\"📡\",\"💻\"]]},{\"input\":[[\"⌨️\",\"📡\"],[\"🛰️\",\"📋\"]],\"output\":[[\"📡\",\"⌨️\"],[\"📋\",\"🛰️\"]]}],\"testInput\":[[\"📱\",\"💻\"],[\"📶\",\"📡\"]],\"testOutput\":[[\"💻\",\"📱\"],[\"📡\",\"📶\"]],\"hints\":[\"Think of the grid as being reflected in a mirror placed to the right side.\",\"The first column becomes the last column, the second becomes the second-to-last, and so on.\",\"The black square (⬛) reflects just like any other cell value.\"],\"transformationType\":\"pattern_completion\",\"generated\":true},{\"id\":\"COM-104\",\"title\":\"Flip the Solar Grid!\",\"description\":\"🚀 Crisis! Elun Stink was taking selfies 📱 near the control panel and knocked the solar array blueprint backwards ⇄! Now the panels face deep space instead of the Sun ☀️, and life support is failing! Study the before → after symbol grids to see the flip. Mirror today's entire grid left-to-right ↔️ to restore oxygen 💨 before time runs out ⏰!\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":4050,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🎧\",\"📋\",\"📶\"],[\"⬛\",\"💻\",\"📡\",\"⬛\"],[\"⬛\",\"🛰️\",\"🎚️\",\"📡\"],[\"🛰️\",\"📱\",\"⬛\",\"📱\"]],\"output\":[[\"📶\",\"📋\",\"🎧\",\"📡\"],[\"⬛\",\"📡\",\"💻\",\"⬛\"],[\"📡\",\"🎚️\",\"🛰️\",\"⬛\"],[\"📱\",\"⬛\",\"📱\",\"🛰️\"]]},{\"input\":[[\"📱\",\"📡\",\"⌨️\",\"📋\"],[\"📱\",\"🎧\",\"🎚️\",\"⌨️\"],[\"📡\",\"📋\",\"📱\",\"🎧\"],[\"⌨️\",\"📡\",\"📱\",\"🎧\"]],\"output\":[[\"📋\",\"⌨️\",\"📡\",\"📱\"],[\"⌨️\",\"🎚️\",\"🎧\",\"📱\"],[\"🎧\",\"📱\",\"📋\",\"📡\"],[\"🎧\",\"📱\",\"📡\",\"⌨️\"]]}],\"testInput\":[[\"📋\",\"⌨️\",\"⌨️\",\"🎚️\"],[\"📶\",\"⌨️\",\"📡\",\"⌨️\"],[\"💻\",\"🛰️\",\"📡\",\"📡\"],[\"🎚️\",\"⌨️\",\"📡\",\"⬛\"]],\"testOutput\":[[\"🎚️\",\"⌨️\",\"⌨️\",\"📋\"],[\"⌨️\",\"📡\",\"⌨️\",\"📶\"],[\"📡\",\"📡\",\"🛰️\",\"💻\"],[\"⬛\",\"📡\",\"⌨️\",\"🎚️\"]],\"hints\":[\"Think of the grid as being reflected in a mirror placed to the right side.\",\"The first column becomes the last column, the second becomes the second-to-last, and so on.\",\"The black square (⬛) reflects just like any other cell value.\"],\"transformationType\":\"horizontal_reflection\",\"generated\":true},{\"id\":\"COM-201\",\"title\":\"broadcast patterns Mirror Analysis\",\"description\":\"The Tesla Corporation's quantum nav computer kept trying to calculate mirror reflections by asking 'Which pixel goes where?' for every single cell. It processed 847 calculations just to flip a 2x2 grid, while Rick the Intern figured it out by glancing at it. AI struggles with spatial reasoning and mirror symmetry because it processes data sequentially rather than understanding 2D spatial relationships. Unlike humans who instantly recognize left-right flips, AI must learn complex coordinate transformations. The AI kept trying to calculate mirror reflections pixel by pixel. AI struggles with spatial reasoning and mirror symmetry. Analyze the broadcast patterns by reflecting the input grid horizontally (left-to-right mirror).\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":1400,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"💻\",\"⬛\",\"📱\",\"💻\"],[\"⌨️\",\"⌨️\",\"📶\",\"🛰️\"],[\"⬛\",\"🎚️\",\"🛰️\",\"📶\"],[\"🎚️\",\"📡\",\"📱\",\"📡\"]],\"output\":[[\"💻\",\"📱\",\"⬛\",\"💻\"],[\"🛰️\",\"📶\",\"⌨️\",\"⌨️\"],[\"📶\",\"🛰️\",\"🎚️\",\"⬛\"],[\"📡\",\"📱\",\"📡\",\"🎚️\"]]},{\"input\":[[\"📶\",\"📡\",\"📋\",\"📶\"],[\"⌨️\",\"💻\",\"🎧\",\"⌨️\"],[\"📋\",\"🎧\",\"📶\",\"📶\"],[\"⬛\",\"⬛\",\"🎧\",\"📡\"]],\"output\":[[\"📶\",\"📋\",\"📡\",\"📶\"],[\"⌨️\",\"🎧\",\"💻\",\"⌨️\"],[\"📶\",\"📶\",\"🎧\",\"📋\"],[\"📡\",\"🎧\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"📋\",\"⬛\",\"📡\",\"🎧\"],[\"🎚️\",\"📋\",\"📶\",\"📡\"],[\"🎧\",\"📋\",\"🎧\",\"📶\"],[\"⬛\",\"⌨️\",\"🛰️\",\"🎚️\"]],\"testOutput\":[[\"🎧\",\"📡\",\"⬛\",\"📋\"],[\"📡\",\"📶\",\"📋\",\"🎚️\"],[\"📶\",\"🎧\",\"📋\",\"🎧\"],[\"🎚️\",\"🛰️\",\"⌨️\",\"⬛\"]],\"hints\":[\"Computers don't understand mirrors like you do. When you look in a bathroom mirror, you know your left hand looks like it's on the right side. But computers have to think really hard about where each tiny square should move to make a mirror image.\",\"It's like when you write your name on paper and then try to read it by holding it up to a window backwards. You can figure it out easily, but a computer would have to think about where each letter should go one by one.\",\"Imagine you're playing with building blocks and someone asks you to build the exact same tower but with everything flipped around. You'd just look at it and know what to do, but a computer would count every single block and calculate where it should move.\",\"Computers don't understand mirrors like you do.\",\"It's like reading your name in a mirror - you figure it out easily, computers struggle.\",\"Imagine flipping a tower of blocks - you just see it, computers calculate each block.\",\"Think of the grid as being reflected in a mirror placed to the right side.\",\"The first column becomes the last column, the second becomes the second-to-last, and so on.\",\"The black square (⬛) reflects just like any other cell value.\"],\"transformationType\":\"horizontal_reflection\",\"generated\":true},{\"id\":\"COM-224\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🎚️\",\"🎚️\"],[\"💻\",\"⌨️\"]],\"output\":[[\"🎧\",\"🎚️\"],[\"⬛\",\"📶\"]]},{\"input\":[[\"💻\",\"📶\"],[\"⬛\",\"⬛\"]],\"output\":[[\"📋\",\"⌨️\"],[\"📋\",\"⬛\"]]}],\"testInput\":[[\"🎚️\",\"⌨️\"],[\"📱\",\"📱\"]],\"testOutput\":[[\"🎚️\",\"📱\"],[\"⌨️\",\"📱\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"COM-225\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"📡 Communications\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🛰️\",\"📱\"],[\"⌨️\",\"🎧\"]],\"output\":[[\"💻\",\"📱\"],[\"📱\",\"🛰️\"]]},{\"input\":[[\"🎧\",\"📡\"],[\"🎧\",\"📶\"]],\"output\":[[\"📶\",\"📡\"],[\"💻\",\"📡\"]]}],\"testInput\":[[\"📡\",\"🎧\"],[\"🛰️\",\"📱\"]],\"testOutput\":[[\"📱\",\"🎧\"],[\"🛰️\",\"📡\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"COM-226\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"📡 Communications\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🎚️\",\"🛰️\",\"🛰️\"],[\"📡\",\"📡\",\"📡\"],[\"📱\",\"⬛\",\"📶\"]],\"output\":[[\"🎧\",\"🛰️\",\"📶\"],[\"📋\",\"🎚️\",\"💻\"],[\"⌨️\",\"⌨️\",\"⬛\"]]},{\"input\":[[\"💻\",\"📡\",\"⌨️\"],[\"💻\",\"⬛\",\"📱\"],[\"🛰️\",\"🎧\",\"🎧\"]],\"output\":[[\"📶\",\"⌨️\",\"📶\"],[\"🎚️\",\"📶\",\"📋\"],[\"📶\",\"⬛\",\"📱\"]]}],\"testInput\":[[\"⌨️\",\"📶\",\"⌨️\"],[\"⌨️\",\"⌨️\",\"🎧\"],[\"⬛\",\"💻\",\"📱\"]],\"testOutput\":[[\"⌨️\",\"⌨️\",\"⬛\"],[\"📶\",\"⌨️\",\"💻\"],[\"⌨️\",\"🎧\",\"📱\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"COM-227\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"📡 Communications\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"💻\",\"⌨️\",\"💻\"],[\"🎧\",\"🎧\",\"📡\"],[\"⌨️\",\"📶\",\"📋\"]],\"output\":[[\"🎧\",\"💻\",\"📡\"],[\"🎚️\",\"📱\",\"🛰️\"],[\"📡\",\"📡\",\"⌨️\"]]},{\"input\":[[\"📶\",\"⌨️\",\"🎚️\"],[\"🎧\",\"📡\",\"📋\"],[\"⌨️\",\"📶\",\"📋\"]],\"output\":[[\"⌨️\",\"📡\",\"🎧\"],[\"⬛\",\"🎧\",\"💻\"],[\"⬛\",\"📡\",\"💻\"]]}],\"testInput\":[[\"🎚️\",\"💻\",\"💻\"],[\"⬛\",\"📶\",\"⌨️\"],[\"📋\",\"📱\",\"🎚️\"]],\"testOutput\":[[\"🎚️\",\"⌨️\",\"💻\"],[\"📱\",\"📶\",\"💻\"],[\"📋\",\"⬛\",\"🎚️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"COM-228\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"📡 Communications\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🎚️\",\"📶\",\"📶\",\"⌨️\"],[\"💻\",\"📱\",\"📡\",\"🎧\"],[\"📡\",\"🎧\",\"📡\",\"⬛\"],[\"📶\",\"⌨️\",\"⌨️\",\"⬛\"]],\"output\":[[\"🎚️\",\"🎚️\",\"📱\",\"⌨️\"],[\"🎚️\",\"⬛\",\"⌨️\",\"🛰️\"],[\"📱\",\"🎧\",\"📱\",\"🛰️\"],[\"📱\",\"📋\",\"🎧\",\"📶\"]]},{\"input\":[[\"💻\",\"📋\",\"💻\",\"📱\"],[\"🎚️\",\"⌨️\",\"⌨️\",\"💻\"],[\"🛰️\",\"⌨️\",\"🛰️\",\"📶\"],[\"📱\",\"📶\",\"⌨️\",\"📱\"]],\"output\":[[\"📡\",\"🛰️\",\"🎚️\",\"🎚️\"],[\"📡\",\"💻\",\"🎧\",\"⌨️\"],[\"⌨️\",\"🛰️\",\"⬛\",\"🎚️\"],[\"📋\",\"🎧\",\"📱\",\"🎧\"]]}],\"testInput\":[[\"📱\",\"📋\",\"📋\",\"🎚️\"],[\"🎚️\",\"💻\",\"📱\",\"🎧\"],[\"🎚️\",\"💻\",\"🎚️\",\"🛰️\"],[\"🎚️\",\"⬛\",\"🛰️\",\"🎚️\"]],\"testOutput\":[[\"📱\",\"🎚️\",\"🎚️\",\"🎚️\"],[\"📋\",\"💻\",\"💻\",\"⬛\"],[\"📋\",\"📱\",\"🎚️\",\"🛰️\"],[\"🎚️\",\"🎧\",\"🛰️\",\"🎚️\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"COM-229\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"📡 Communications\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🛰️\",\"📶\",\"📡\",\"⌨️\"],[\"⬛\",\"⌨️\",\"🎚️\",\"📋\"],[\"📡\",\"🛰️\",\"🎧\",\"💻\"],[\"🎧\",\"📋\",\"💻\",\"📱\"]],\"output\":[[\"📋\",\"📶\",\"📶\",\"📱\"],[\"💻\",\"💻\",\"⌨️\",\"⬛\"],[\"📱\",\"📡\",\"📋\",\"📱\"],[\"📱\",\"📡\",\"📶\",\"📋\"]]},{\"input\":[[\"🛰️\",\"💻\",\"🎧\",\"⌨️\"],[\"⌨️\",\"🎚️\",\"⬛\",\"💻\"],[\"📡\",\"⬛\",\"📡\",\"⬛\"],[\"🛰️\",\"📶\",\"📱\",\"📶\"]],\"output\":[[\"🛰️\",\"⌨️\",\"📶\",\"🎧\"],[\"📱\",\"🎚️\",\"💻\",\"⬛\"],[\"💻\",\"📱\",\"⬛\",\"⌨️\"],[\"⌨️\",\"🛰️\",\"⬛\",\"⌨️\"]]}],\"testInput\":[[\"🎚️\",\"⌨️\",\"💻\",\"🛰️\"],[\"🎧\",\"📱\",\"📶\",\"🎧\"],[\"📶\",\"📶\",\"🎚️\",\"⬛\"],[\"🎧\",\"💻\",\"📡\",\"🎚️\"]],\"testOutput\":[[\"🎚️\",\"⬛\",\"🎧\",\"🛰️\"],[\"📡\",\"🎚️\",\"📶\",\"💻\"],[\"💻\",\"📶\",\"📱\",\"⌨️\"],[\"🎧\",\"📶\",\"🎧\",\"🎚️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"FS-001\",\"title\":\"Basic Fuel Flow Check\",\"description\":\"Primary fuel lines showing irregular flow patterns. Study the mechanical component patterns.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":5050,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⬛\"],[\"⬛\",\"⚡\"]],\"output\":[[\"⚡\",\"⬛\"],[\"⬛\",\"⚙️\"]]},{\"input\":[[\"🔧\",\"⚡\"],[\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"⬛\"],[\"⚡\",\"🔧\"]]}],\"testInput\":[[\"🔋\",\"⬛\"],[\"🔗\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"🔗\"],[\"⬛\",\"🔋\"]],\"hints\":[\"Notice how the mechanical components change positions.\",\"The transformation swaps items diagonally across the grid.\",\"Top-left and bottom-right positions are exchanged.\"]},{\"id\":\"FS-002\",\"title\":\"Fuel Line Symmetry Check\",\"description\":\"Fuel distribution requires mirror symmetry verification. Analyze the reflection patterns in the system diagnostics.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":6510,\"requiredRankLevel\":2,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⬛\",\"⚡\"],[\"⬛\",\"🔋\",\"⬛\"],[\"⚡\",\"⬛\",\"🔧\"]],\"output\":[[\"⚡\",\"⬛\",\"⚙️\"],[\"⬛\",\"🔋\",\"⬛\"],[\"🔧\",\"⬛\",\"⚡\"]]},{\"input\":[[\"☢️\",\"🔗\",\"⬛\"],[\"⚛️\",\"⬛\",\"🔗\"],[\"⬛\",\"⚡\",\"⚡\"]],\"output\":[[\"⬛\",\"🔗\",\"☢️\"],[\"🔗\",\"⬛\",\"⚛️\"],[\"⚡\",\"⚡\",\"⬛\"]]}],\"testInput\":[[\"⚙️\",\"🔧\",\"⬛\"],[\"🔌\",\"🔋\",\"🔗\"],[\"⬛\",\"⚡\",\"⚡\"]],\"testOutput\":[[\"⬛\",\"🔧\",\"⚙️\"],[\"🔗\",\"🔋\",\"🔌\"],[\"⚡\",\"⚡\",\"⬛\"]],\"hints\":[\"Look for a reflection pattern across the vertical center line.\",\"Elements on the left side appear on the right side in mirrored positions.\",\"The center column remains unchanged during the transformation.\"]},{\"id\":\"FS-003\",\"title\":\"Fuel Pressure Equalization\",\"description\":\"Critical fuel systems require pressure balancing across connected chambers. Balance the distribution network.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":8200,\"requiredRankLevel\":3,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⚙️\",\"⬛\",\"⬛\"],[\"⚙️\",\"⚙️\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⚡\",\"⚡\"],[\"⬛\",\"⬛\",\"⚡\",\"⚡\"]],\"output\":[[\"⚙️\",\"⚙️\",\"⚡\",\"⚡\"],[\"⚙️\",\"⚙️\",\"⚡\",\"⚡\"],[\"⚙️\",\"⚙️\",\"⚡\",\"⚡\"],[\"⚙️\",\"⚙️\",\"⚡\",\"⚡\"]]}],\"testInput\":[[\"⚡\",\"⚡\",\"⬛\",\"⬛\"],[\"⚡\",\"⚡\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"🔋\",\"🔋\"],[\"⬛\",\"⬛\",\"🔋\",\"🔋\"]],\"testOutput\":[[\"⚡\",\"⚡\",\"🔋\",\"🔋\"],[\"⚡\",\"⚡\",\"🔋\",\"🔋\"],[\"⚡\",\"⚡\",\"🔋\",\"🔋\"],[\"⚡\",\"⚡\",\"🔋\",\"🔋\"]],\"hints\":[\"Each quadrant expands to fill the ⬛ adjacent quadrant.\",\"The pattern fills the entire grid maintaining the original boundaries.\",\"Objects spread to equalize pressure across connected regions.\"]},{\"id\":\"FS-004\",\"title\":\"Fuel Valve Horizontal Mirror\",\"description\":\"Fuel valve configuration requires horizontal mirror calibration. Analyze the left-right reflection patterns.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3220,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⚡\"],[\"⚡\",\"🔧\"]],\"output\":[[\"⚡\",\"⚙️\"],[\"🔧\",\"⚡\"]]},{\"input\":[[\"🔋\",\"⬛\"],[\"⬛\",\"🔗\"]],\"output\":[[\"⬛\",\"🔋\"],[\"🔗\",\"⬛\"]]}],\"testInput\":[[\"☢️\",\"🔌\"],[\"⚛️\",\"🔗\"]],\"testOutput\":[[\"🔌\",\"☢️\"],[\"🔗\",\"⚛️\"]],\"hints\":[\"Elements are reflected across the vertical center line.\",\"Left column becomes right column and vice versa.\",\"The transformation is a horizontal mirror flip.\"]},{\"id\":\"FS-005\",\"title\":\"Fuel Matrix Vertical Mirror\",\"description\":\"Fuel distribution matrix requires vertical mirror calibration. Analyze the top-bottom reflection patterns.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3320,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⚡\"],[\"⚡\",\"🔧\"]],\"output\":[[\"⚡\",\"🔧\"],[\"⚙️\",\"⚡\"]]},{\"input\":[[\"🔋\",\"⬛\"],[\"⬛\",\"🔗\"]],\"output\":[[\"⬛\",\"🔗\"],[\"🔋\",\"⬛\"]]}],\"testInput\":[[\"☢️\",\"🔌\"],[\"⚛️\",\"🔗\"]],\"testOutput\":[[\"⚛️\",\"🔗\"],[\"☢️\",\"🔌\"]],\"hints\":[\"Elements are reflected across the horizontal center line.\",\"Top row becomes bottom row and vice versa.\",\"The transformation is a vertical mirror flip.\"]},{\"id\":\"FS-006\",\"title\":\"Advanced Fuel Matrix Transpose\",\"description\":\"Given a 3x3 matrix representing a fuel distribution grid, transpose the matrix so that rows become columns. The element at position (i, j) moves to position (j, i).\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Expert\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":521900,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⚡\",\"⚡\"],[\"🔋\",\"🔗\",\"🔌\"],[\"☢️\",\"⚛️\",\"🔧\"]],\"output\":[[\"⚙️\",\"🔋\",\"☢️\"],[\"⚡\",\"🔗\",\"⚛️\"],[\"⚡\",\"🔌\",\"🔧\"]]}],\"testInput\":[[\"🔌\",\"🔗\",\"🔋\"],[\"🔌\",\"⛽\",\"⚙️\"],[\"⚛️\",\"🔗\",\"☢️\"]],\"testOutput\":[[\"🔌\",\"🔌\",\"⚛️\"],[\"🔗\",\"⛽\",\"🔗\"],[\"🔋\",\"⚙️\",\"☢️\"]],\"hints\":[\"Matrix transpose: element at position (i, j) moves to position (j, i).\",\"The main diagonal remains in place during transformation.\",\"Rows become columns and columns become rows.\"]},{\"id\":\"FS-007\",\"title\":\"Advanced Fuel Center Propagation\",\"description\":\"Given a 3x3 matrix representing a fuel grid, replace every element with the center element's value. The center element (position [1][1]) propagates to fill the entire matrix.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":9820,\"requiredRankLevel\":3,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⚡\",\"⚡\"],[\"🔋\",\"🔗\",\"🔌\"],[\"☢️\",\"⚛️\",\"🔧\"]],\"output\":[[\"🔗\",\"🔗\",\"🔗\"],[\"🔗\",\"🔗\",\"🔗\"],[\"🔗\",\"🔗\",\"🔗\"]]}],\"testInput\":[[\"🔌\",\"🔗\",\"🔋\"],[\"🔌\",\"⛽\",\"⚙️\"],[\"⚛️\",\"🔗\",\"☢️\"]],\"testOutput\":[[\"⛽\",\"⛽\",\"⛽\"],[\"⛽\",\"⛽\",\"⛽\"],[\"⛽\",\"⛽\",\"⛽\"]],\"hints\":[\"The center element fills the entire grid.\",\"All other elements are replaced by the center value.\",\"This creates a uniform pattern across the matrix.\"]},{\"id\":\"FS-008\",\"title\":\"Fuel Pattern Mask Filter\",\"description\":\"Critical fuel systems require pattern mask operations. Only specific pattern elements remain active in the distribution network.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3155,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⚡\"],[\"⚡\",\"⚙️\"]],\"output\":[[\"⚙️\",\"⬛\"],[\"⬛\",\"⚙️\"]]},{\"input\":[[\"🔋\",\"🔗\"],[\"🔧\",\"🔋\"]],\"output\":[[\"🔋\",\"⬛\"],[\"⬛\",\"🔋\"]]}],\"testInput\":[[\"☢️\",\"🔌\"],[\"⚛️\",\"☢️\"]],\"testOutput\":[[\"☢️\",\"⬛\"],[\"⬛\",\"☢️\"]],\"hints\":[\"Only elements that appear multiple times are preserved.\",\"Elements that appear only once become ⬛ spaces.\",\"Look for the recurring pattern element in the grid.\"]},{\"id\":\"FS-009\",\"title\":\"Advanced Fuel Spiral Pattern\",\"description\":\"Complex fuel distribution requires spiral transformation. Elements move in spiral pattern from outside to center.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":13150,\"requiredRankLevel\":3,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⚡\",\"⚡\"],[\"🔋\",\"🔗\",\"🔌\"],[\"☢️\",\"⚛️\",\"🔧\"]],\"output\":[[\"🔧\",\"⚙️\",\"⚡\"],[\"⚛️\",\"🔗\",\"⚡\"],[\"☢️\",\"🔋\",\"🔌\"]]}],\"testInput\":[[\"🔌\",\"🔗\",\"🔋\"],[\"🔌\",\"⛽\",\"⚙️\"],[\"⚛️\",\"🔗\",\"☢️\"]],\"testOutput\":[[\"☢️\",\"🔌\",\"🔗\"],[\"🔗\",\"⛽\",\"🔋\"],[\"⚛️\",\"🔌\",\"⚙️\"]],\"hints\":[\"Elements move in a clockwise spiral pattern from perimeter to center.\",\"The outer ring shifts one position clockwise while center stays fixed.\",\"Follow the spiral path: top row, right column, bottom row, left column.\"]},{\"id\":\"FS-010\",\"title\":\"Fuel System Element Sorting\",\"description\":\"Fuel distribution requires element sorting protocols. Non-empty elements gather at specific grid positions.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3625,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⬛\"],[\"⬛\",\"⚡\"]],\"output\":[[\"⚙️\",\"⚡\"],[\"⬛\",\"⬛\"]]},{\"input\":[[\"⬛\",\"⚡\"],[\"🔋\",\"⬛\"]],\"output\":[[\"🔋\",\"⚡\"],[\"⬛\",\"⬛\"]]}],\"testInput\":[[\"☢️\",\"⬛\"],[\"⬛\",\"🔌\"]],\"testOutput\":[[\"☢️\",\"🔌\"],[\"⬛\",\"⬛\"]],\"hints\":[\"Collect all non-⬛ elements to the top row.\",\"⬛ spaces fill the bottom row completely.\",\"Maintain left-to-right order of collected elements.\"]},{\"id\":\"FS-100\",\"title\":\"propellant mixture Rotation Analysis\",\"description\":\"The communications array got stuck trying to rotate antenna positioning data 90 degrees. Instead of simply turning the coordinate map, it began physically rotating the entire 50-ton antenna assembly, creating a slow-motion disaster as cables twisted into knots. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Analyze the propellant mixture by rotating the input grid 90 degrees clockwise 🔁.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":325,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔌\",\"🔗\",\"⛽\"],[\"🔌\",\"🔧\",\"🔌\"],[\"⬛\",\"🔋\",\"🔧\"]],\"output\":[[\"⬛\",\"🔌\",\"🔌\"],[\"🔋\",\"🔧\",\"🔗\"],[\"🔧\",\"🔌\",\"⛽\"]]},{\"input\":[[\"⚙️\",\"⬛\",\"⚛️\"],[\"⚙️\",\"⚙️\",\"⚡\"],[\"🔋\",\"⚡\",\"⚡\"]],\"output\":[[\"🔋\",\"⚙️\",\"⚙️\"],[\"⚡\",\"⚙️\",\"⬛\"],[\"⚡\",\"⚡\",\"⚛️\"]]}],\"testInput\":[[\"⚛️\",\"⬛\",\"⬛\"],[\"⚛️\",\"⛽\",\"⚡\"],[\"⬛\",\"🔌\",\"🔧\"]],\"testOutput\":[[\"⬛\",\"⚛️\",\"⚛️\"],[\"🔌\",\"⛽\",\"⬛\"],[\"🔧\",\"⚡\",\"⬛\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90 degrees clockwise (¼ turn to the right).\",\"The top row becomes the rightmost column, reading from top to bottom.\",\"Each column in the original becomes a row in the result, with order reversed.\"],\"generated\":true},{\"id\":\"FS-102\",\"title\":\"flow regulation Rotation Analysis\",\"description\":\"The communications array got stuck trying to rotate antenna positioning data 90 degrees. Instead of simply turning the coordinate map, it began physically rotating the entire 50-ton antenna assembly, creating a slow-motion disaster as cables twisted into knots. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Analyze the flow regulation by rotating the input grid 90 degrees clockwise 🔁.\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":1325,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⛽\",\"⬛\",\"🔋\",\"⚡\"],[\"🔧\",\"⚡\",\"⛽\",\"🔧\"],[\"⬛\",\"⛽\",\"⚛️\",\"⚛️\"],[\"☢️\",\"🔋\",\"⬛\",\"⚙️\"]],\"output\":[[\"☢️\",\"⬛\",\"🔧\",\"⛽\"],[\"🔋\",\"⛽\",\"⚡\",\"⬛\"],[\"⬛\",\"⚛️\",\"⛽\",\"🔋\"],[\"⚙️\",\"⚛️\",\"🔧\",\"⚡\"]]},{\"input\":[[\"🔧\",\"⛽\",\"🔋\",\"⚙️\"],[\"🔌\",\"🔗\",\"⚛️\",\"🔗\"],[\"⚛️\",\"🔗\",\"🔋\",\"⚙️\"],[\"🔋\",\"🔋\",\"☢️\",\"🔧\"]],\"output\":[[\"🔋\",\"⚛️\",\"🔌\",\"🔧\"],[\"🔋\",\"🔗\",\"🔗\",\"⛽\"],[\"☢️\",\"🔋\",\"⚛️\",\"🔋\"],[\"🔧\",\"⚙️\",\"🔗\",\"⚙️\"]]}],\"testInput\":[[\"⚛️\",\"⛽\",\"⚡\",\"🔋\"],[\"🔧\",\"🔋\",\"⛽\",\"⚡\"],[\"⚙️\",\"⬛\",\"⛽\",\"🔋\"],[\"⚡\",\"⚛️\",\"🔌\",\"⚙️\"]],\"testOutput\":[[\"⚡\",\"⚙️\",\"🔧\",\"⚛️\"],[\"⚛️\",\"⬛\",\"🔋\",\"⛽\"],[\"🔌\",\"⛽\",\"⛽\",\"⚡\"],[\"⚙️\",\"🔋\",\"⚡\",\"🔋\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90 degrees clockwise 🔃 (¼ turn to the right).\",\"The top row becomes the rightmost column, reading from top to bottom.\",\"Each column in the original becomes a row in the result, with order reversed.\"],\"transformationType\":\"rotation_90deg\",\"generated\":true},{\"id\":\"FS-212\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⬛\",\"☢️\"],[\"🔧\",\"🔌\"]],\"output\":[[\"⚛️\",\"⬛\"],[\"🔗\",\"🔌\"]]},{\"input\":[[\"🔧\",\"⬛\"],[\"🔧\",\"☢️\"]],\"output\":[[\"🔋\",\"☢️\"],[\"🔗\",\"🔗\"]]}],\"testInput\":[[\"⚛️\",\"⬛\"],[\"⬛\",\"⚡\"]],\"testOutput\":[[\"⚛️\",\"⬛\"],[\"⬛\",\"⚡\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"FS-213\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"🔌\"],[\"🔋\",\"🔗\"]],\"output\":[[\"🔋\",\"☢️\"],[\"⛽\",\"⛽\"]]},{\"input\":[[\"⛽\",\"⛽\"],[\"⚙️\",\"🔌\"]],\"output\":[[\"🔋\",\"⚛️\"],[\"⚛️\",\"🔌\"]]}],\"testInput\":[[\"⚛️\",\"🔌\"],[\"🔋\",\"⛽\"]],\"testOutput\":[[\"⛽\",\"🔌\"],[\"🔋\",\"⚛️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"FS-214\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔧\",\"⚙️\",\"⚛️\"],[\"🔧\",\"🔋\",\"⚡\"],[\"🔌\",\"⛽\",\"🔗\"]],\"output\":[[\"⚛️\",\"🔋\",\"🔗\"],[\"🔗\",\"⛽\",\"⬛\"],[\"🔧\",\"⬛\",\"⬛\"]]},{\"input\":[[\"🔧\",\"🔋\",\"⚛️\"],[\"⬛\",\"🔌\",\"🔋\"],[\"🔧\",\"🔌\",\"⛽\"]],\"output\":[[\"🔗\",\"🔌\",\"🔧\"],[\"☢️\",\"⚛️\",\"⬛\"],[\"🔧\",\"🔋\",\"🔌\"]]}],\"testInput\":[[\"☢️\",\"🔌\",\"🔧\"],[\"⚛️\",\"⚡\",\"☢️\"],[\"🔗\",\"⚙️\",\"🔧\"]],\"testOutput\":[[\"☢️\",\"⚛️\",\"🔗\"],[\"🔌\",\"⚡\",\"⚙️\"],[\"🔧\",\"☢️\",\"🔧\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"FS-215\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"☢️\",\"⚙️\",\"🔗\"],[\"🔧\",\"⚙️\",\"☢️\"],[\"⛽\",\"☢️\",\"⚡\"]],\"output\":[[\"⛽\",\"⚛️\",\"⚡\"],[\"🔧\",\"⛽\",\"⚙️\"],[\"🔌\",\"🔋\",\"🔌\"]]},{\"input\":[[\"🔌\",\"⛽\",\"☢️\"],[\"⛽\",\"🔧\",\"🔌\"],[\"🔌\",\"🔗\",\"🔌\"]],\"output\":[[\"🔗\",\"🔧\",\"☢️\"],[\"⚛️\",\"🔌\",\"⬛\"],[\"⛽\",\"☢️\",\"⚙️\"]]}],\"testInput\":[[\"⚛️\",\"🔧\",\"🔗\"],[\"☢️\",\"⚙️\",\"⚡\"],[\"⛽\",\"⚛️\",\"🔧\"]],\"testOutput\":[[\"🔧\",\"⚡\",\"🔗\"],[\"⚛️\",\"⚙️\",\"🔧\"],[\"⛽\",\"☢️\",\"⚛️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"FS-216\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⬛\",\"⚛️\",\"🔗\",\"⚙️\"],[\"🔋\",\"⚙️\",\"🔗\",\"⚙️\"],[\"🔗\",\"☢️\",\"🔧\",\"🔗\"],[\"⛽\",\"⬛\",\"⛽\",\"⬛\"]],\"output\":[[\"⚛️\",\"☢️\",\"☢️\",\"🔧\"],[\"🔋\",\"⚡\",\"⚛️\",\"🔗\"],[\"⚛️\",\"⚙️\",\"⬛\",\"⬛\"],[\"🔗\",\"🔌\",\"⚛️\",\"🔗\"]]},{\"input\":[[\"⚡\",\"🔧\",\"⛽\",\"☢️\"],[\"⬛\",\"⛽\",\"🔋\",\"🔗\"],[\"⛽\",\"🔧\",\"⚡\",\"⚙️\"],[\"🔗\",\"🔋\",\"⛽\",\"⬛\"]],\"output\":[[\"⛽\",\"🔧\",\"☢️\",\"⚡\"],[\"⚙️\",\"🔧\",\"⬛\",\"⚡\"],[\"☢️\",\"☢️\",\"🔋\",\"☢️\"],[\"🔧\",\"⛽\",\"⚙️\",\"⛽\"]]}],\"testInput\":[[\"⬛\",\"⬛\",\"🔋\",\"⛽\"],[\"⚛️\",\"⚛️\",\"⚙️\",\"🔗\"],[\"⚙️\",\"🔧\",\"🔌\",\"☢️\"],[\"🔋\",\"🔧\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"⚛️\",\"⚙️\",\"🔋\"],[\"⬛\",\"⚛️\",\"🔧\",\"🔧\"],[\"🔋\",\"⚙️\",\"🔌\",\"⬛\"],[\"⛽\",\"🔗\",\"☢️\",\"⬛\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"FS-217\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"⚡ Fuel Systems\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔋\",\"⚛️\",\"🔌\",\"⛽\"],[\"⚙️\",\"🔗\",\"🔧\",\"⚛️\"],[\"🔧\",\"🔗\",\"⚡\",\"⬛\"],[\"🔗\",\"☢️\",\"⚙️\",\"⛽\"]],\"output\":[[\"⛽\",\"⛽\",\"⚙️\",\"⚙️\"],[\"⛽\",\"⛽\",\"⛽\",\"⬛\"],[\"⚡\",\"🔋\",\"⛽\",\"☢️\"],[\"⛽\",\"🔗\",\"⚡\",\"🔌\"]]},{\"input\":[[\"🔧\",\"🔌\",\"⛽\",\"🔋\"],[\"⚛️\",\"🔌\",\"🔧\",\"⚛️\"],[\"⬛\",\"⚛️\",\"🔗\",\"☢️\"],[\"☢️\",\"🔌\",\"⚡\",\"⚛️\"]],\"output\":[[\"⛽\",\"⚡\",\"⚙️\",\"⚡\"],[\"🔋\",\"⛽\",\"⚛️\",\"🔋\"],[\"🔧\",\"⚛️\",\"🔧\",\"⚛️\"],[\"🔧\",\"⛽\",\"🔋\",\"🔋\"]]}],\"testInput\":[[\"⚙️\",\"⛽\",\"☢️\",\"🔌\"],[\"☢️\",\"🔗\",\"⛽\",\"⬛\"],[\"🔧\",\"🔗\",\"☢️\",\"🔌\"],[\"⚛️\",\"☢️\",\"⬛\",\"⛽\"]],\"testOutput\":[[\"⛽\",\"🔌\",\"⬛\",\"🔌\"],[\"⬛\",\"☢️\",\"⛽\",\"☢️\"],[\"☢️\",\"🔗\",\"🔗\",\"⛽\"],[\"⚛️\",\"🔧\",\"☢️\",\"⚙️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"NAV-001\",\"title\":\"Navigation Vector Check\",\"description\":\"Navigation systems require directional calibration. Study the arrow transformation patterns.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":1420,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"⬛\"],[\"⬛\",\"⬇️\"]],\"output\":[[\"⬇️\",\"⬛\"],[\"⬛\",\"⬆️\"]]},{\"input\":[[\"⬅️\",\"➡️\"],[\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"⬛\"],[\"➡️\",\"⬅️\"]]}],\"testInput\":[[\"↗️\",\"⬛\"],[\"🧭\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"🧭\"],[\"⬛\",\"↗️\"]],\"hints\":[\"Observe how directional arrows change positions.\",\"The pattern swaps elements diagonally across the grid.\",\"Navigation vectors move to opposite diagonal positions.\"]},{\"id\":\"NAV-002\",\"title\":\"Coordinate Rotation Protocol\",\"description\":\"Joffrey Beezooos's solar array controller spent 23 minutes calculating how to turn a fuel systems diagram sideways. It kept asking 'If I move this corner here, where do the other three corners go?' while the human operator just tilted their head. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Navigation arrays require 90 degree clockwise rotation for orbital alignment. Study the directional transformation patterns.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":6000,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"➡️\",\"⬇️\"],[\"⬅️\",\"🧭\",\"↗️\"],[\"↙️\",\"↖️\",\"↘️\"]],\"output\":[[\"↙️\",\"⬅️\",\"⬆️\"],[\"↖️\",\"🧭\",\"➡️\"],[\"↘️\",\"↗️\",\"⬇️\"]]},{\"input\":[[\"⬆️\",\"⬛\",\"⬇️\"],[\"⬛\",\"🧭\",\"⬛\"],[\"⬅️\",\"⬛\",\"➡️\"]],\"output\":[[\"⬅️\",\"⬛\",\"⬆️\"],[\"⬛\",\"🧭\",\"⬛\"],[\"➡️\",\"⬛\",\"⬇️\"]]}],\"testInput\":[[\"↗️\",\"⬆️\",\"↖️\"],[\"➡️\",\"🧭\",\"⬅️\"],[\"↘️\",\"⬇️\",\"↙️\"]],\"testOutput\":[[\"↘️\",\"➡️\",\"↗️\"],[\"⬇️\",\"🧭\",\"⬆️\"],[\"↙️\",\"⬅️\",\"↖️\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Turn the entire grid 90 degrees clockwise (¼ turn to the right).\",\"The top row becomes the rightmost column, read top to bottom.\",\"Apply this rotation to the entire grid, including the black cells.\"]},{\"id\":\"NAV-003\",\"title\":\"Gravitational Field Mapping\",\"description\":\"Navigation requires understanding object attraction patterns. Objects move toward the center of gravitational influence.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":8580,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"⬛\",\"⬛\",\"⬇️\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"🧭\",\"⬛\"],[\"⬅️\",\"⬛\",\"⬛\",\"➡️\"]],\"output\":[[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬇️\",\"➡️\",\"⬛\"],[\"⬛\",\"⬅️\",\"🧭\",\"⬆️\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"↗️\",\"⬛\",\"⬛\",\"↖️\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"🧭\",\"⬛\"],[\"↘️\",\"⬛\",\"⬛\",\"↙️\"]],\"testOutput\":[[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"↙️\",\"↖️\",\"⬛\"],[\"⬛\",\"↘️\",\"🧭\",\"↗️\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]],\"hints\":[\"Objects are attracted toward the central gravitational source.\",\"Each arrow moves one step closer to the center position.\",\"The gravitational center (🧭) remains stationary.\"]},{\"id\":\"NAV-004\",\"title\":\"Navigation Array 90° Clockwise 🔁\",\"description\":\"Medical bay scanners couldn't figure out how to rotate X-ray images 90 degrees for proper viewing. The AI kept trying to physically rotate the injured astronaut on the examination table instead of just turning the digital image on the screen. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Navigation systems require 90 degree clockwise 🔁 rotation calibration. Study the positional transformation patterns.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":1340,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"➡️\"],[\"⬅️\",\"⬇️\"]],\"output\":[[\"⬅️\",\"⬆️\"],[\"⬇️\",\"➡️\"]]},{\"input\":[[\"🧭\",\"↗️\"],[\"⬛\",\"↘️\"]],\"output\":[[\"⬛\",\"🧭\"],[\"↘️\",\"↗️\"]]}],\"testInput\":[[\"↖️\",\"↙️\"],[\"↗️\",\"↘️\"]],\"testOutput\":[[\"↗️\",\"↖️\"],[\"↘️\",\"↙️\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Turn the entire grid 90 degrees clockwise 🔁 (¼ turn to the right).\",\"Each value should shift to a new position as if the grid was rotated.\",\"Top-left becomes top-right, bottom-left becomes top-left.\",\"Each position shifts one step clockwise 🔁 around the grid. So if the top-left is at 12 o'clock, it will move to 3 o'clock.\"]},{\"id\":\"NAV-005\",\"title\":\"Navigation Array 90° Counter-Clockwise\",\"description\":\"Navigation systems require 90-degree counter-clockwise 🔄 rotation calibration. Study the reverse positional transformation patterns.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3455,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"➡️\"],[\"⬅️\",\"⬇️\"]],\"output\":[[\"➡️\",\"⬇️\"],[\"⬆️\",\"⬅️\"]]},{\"input\":[[\"🧭\",\"↗️\"],[\"⬛\",\"↘️\"]],\"output\":[[\"↗️\",\"↘️\"],[\"🧭\",\"⬛\"]]}],\"testInput\":[[\"↖️\",\"↙️\"],[\"↗️\",\"↘️\"]],\"testOutput\":[[\"↙️\",\"↘️\"],[\"↖️\",\"↗️\"]],\"hints\":[\"The grid rotates 90 degrees counter-clockwise 🔄 around the center.\",\"Top-left moves to bottom-left, bottom-left to bottom-right.\",\"Each position shifts one step counter-clockwise 🔄 around the grid.\"]},{\"id\":\"NAV-006\",\"title\":\"Advanced Navigation 180° Rotation\",\"description\":\"Complex navigation arrays require 180-degree rotation for orbital synchronization. Each element rotates to its opposite position.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":15100,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"➡️\",\"⬇️\"],[\"⬅️\",\"🧭\",\"↗️\"],[\"↙️\",\"↖️\",\"↘️\"]],\"output\":[[\"↘️\",\"↖️\",\"↙️\"],[\"↗️\",\"🧭\",\"⬅️\"],[\"⬇️\",\"➡️\",\"⬆️\"]]}],\"testInput\":[[\"↗️\",\"⬆️\",\"↖️\"],[\"➡️\",\"🧭\",\"⬅️\"],[\"↘️\",\"⬇️\",\"↙️\"]],\"testOutput\":[[\"↙️\",\"⬇️\",\"↘️\"],[\"⬅️\",\"🧭\",\"➡️\"],[\"↖️\",\"⬆️\",\"↗️\"]],\"hints\":[\"Each element rotates 180 degrees to its diagonally opposite position.\",\"Top-left moves to bottom-right, top-right to bottom-left.\",\"The center element remains stationary during rotation.\"]},{\"id\":\"NAV-007\",\"title\":\"Advanced Navigation 270° Rotation\",\"description\":\"Complex navigation arrays require 270-degree clockwise 🔁🔁🔁 rotation for deep space alignment. Triple rotation transformation is applied here so each element moves three positions clockwise around the center.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":11250,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"➡️\",\"⬇️\"],[\"⬅️\",\"🧭\",\"↗️\"],[\"↙️\",\"↖️\",\"↘️\"]],\"output\":[[\"⬇️\",\"↗️\",\"↘️\"],[\"➡️\",\"🧭\",\"↖️\"],[\"⬆️\",\"⬅️\",\"↙️\"]]}],\"testInput\":[[\"↗️\",\"⬆️\",\"↖️\"],[\"➡️\",\"🧭\",\"⬅️\"],[\"↘️\",\"⬇️\",\"↙️\"]],\"testOutput\":[[\"↖️\",\"⬅️\",\"↙️\"],[\"⬆️\",\"🧭\",\"⬇️\"],[\"↗️\",\"➡️\",\"↘️\"]],\"hints\":[\"Each element moves three positions clockwise 🔁🔁🔁 around the center.\",\"You could also think of it as one 90 degrees counter-clockwise 🔄 rotation.\",\"The center element remains stationary during rotation.\"]},{\"id\":\"NAV-008\",\"title\":\"Navigation Pattern Shift\",\"description\":\"Navigation arrays require cyclic shift operations. All elements shift one position in a circular pattern.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3355,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"➡️\"],[\"⬅️\",\"⬇️\"]],\"output\":[[\"⬇️\",\"⬆️\"],[\"➡️\",\"⬅️\"]]},{\"input\":[[\"🧭\",\"↗️\"],[\"↙️\",\"↘️\"]],\"output\":[[\"↘️\",\"🧭\"],[\"↗️\",\"↙️\"]]}],\"testInput\":[[\"↖️\",\"↗️\"],[\"↙️\",\"↘️\"]],\"testOutput\":[[\"↘️\",\"↖️\"],[\"↗️\",\"↙️\"]],\"hints\":[\"Each element moves to the next position in clockwise 🔁 order.\",\"Top-left goes to top-right, top-right to bottom-right, etc.\",\"The pattern forms a circular shift around the grid.\"]},{\"id\":\"NAV-010\",\"title\":\"Navigation Element Stacking\",\"description\":\"Navigation arrays require vertical stacking operations. Elements compress vertically while preserving horizontal order.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3335,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"⬛\"],[\"⬛\",\"⬇️\"]],\"output\":[[\"⬛\",\"⬛\"],[\"⬆️\",\"⬇️\"]]},{\"input\":[[\"🧭\",\"⬛\"],[\"⬛\",\"↗️\"]],\"output\":[[\"⬛\",\"⬛\"],[\"🧭\",\"↗️\"]]}],\"testInput\":[[\"↖️\",\"⬛\"],[\"⬛\",\"↘️\"]],\"testOutput\":[[\"⬛\",\"⬛\"],[\"↖️\",\"↘️\"]],\"hints\":[\"All non-⬛ elements drop to the bottom row.\",\"Maintain column positions during the drop operation.\",\"Top row becomes completely ⬛ after stacking.\"]},{\"id\":\"NAV-100\",\"title\":\"course plotting Rotation Analysis\",\"description\":\"The communications array got stuck trying to rotate antenna positioning data 90 degrees. Instead of simply turning the coordinate map, it began physically rotating the entire 50-ton antenna assembly, creating a slow-motion disaster as cables twisted into knots. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Analyze the course plotting by rotating the input grid 90 degrees clockwise 🔁.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📋\",\"🛰️\",\"📋\",\"🛰️\"],[\"⬛\",\"📡\",\"⬛\",\"⬛\"],[\"📱\",\"📋\",\"📱\",\"🛰️\"],[\"📱\",\"💻\",\"📋\",\"📋\"]],\"output\":[[\"📱\",\"📱\",\"⬛\",\"📋\"],[\"💻\",\"📋\",\"📡\",\"🛰️\"],[\"📋\",\"📱\",\"⬛\",\"📋\"],[\"📋\",\"🛰️\",\"⬛\",\"🛰️\"]]},{\"input\":[[\"⌨️\",\"🎚️\",\"📋\",\"📋\"],[\"⌨️\",\"📡\",\"📱\",\"⌨️\"],[\"📶\",\"🎧\",\"🎚️\",\"📡\"],[\"🛰️\",\"💻\",\"⌨️\",\"⌨️\"]],\"output\":[[\"🛰️\",\"📶\",\"⌨️\",\"⌨️\"],[\"💻\",\"🎧\",\"📡\",\"🎚️\"],[\"⌨️\",\"🎚️\",\"📱\",\"📋\"],[\"⌨️\",\"📡\",\"⌨️\",\"📋\"]]}],\"testInput\":[[\"🛰️\",\"📱\",\"🎚️\",\"🎚️\"],[\"🎚️\",\"🛰️\",\"📱\",\"📶\"],[\"🛰️\",\"📡\",\"📶\",\"🛰️\"],[\"📋\",\"📋\",\"📱\",\"🎧\"]],\"testOutput\":[[\"📋\",\"🛰️\",\"🎚️\",\"🛰️\"],[\"📋\",\"📡\",\"🛰️\",\"📱\"],[\"📱\",\"📶\",\"📱\",\"🎚️\"],[\"🎧\",\"🛰️\",\"📶\",\"🎚️\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90 degrees clockwise 🔁 (¼ turn to the right).\",\"The top row becomes the rightmost column, reading from top to bottom.\",\"Each column in the original becomes a row in the result, with order reversed.\"],\"generated\":true},{\"id\":\"NAV-102\",\"title\":\"stellar mapping Rotation Analysis\",\"description\":\"Joffrey Beezooos's solar array controller spent 23 minutes calculating how to turn a fuel systems diagram sideways. It kept asking 'If I move this corner here, where do the other three corners go?' while the human operator just tilted their head. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Analyze the stellar mapping by rotating the input grid 90 degrees clockwise 🔁.\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🛰️\",\"💻\",\"⌨️\",\"📡\"],[\"🎧\",\"⌨️\",\"⬛\",\"⬛\"],[\"🎚️\",\"💻\",\"🎧\",\"🎧\"],[\"📡\",\"🎧\",\"🛰️\",\"📱\"]],\"output\":[[\"📡\",\"🎚️\",\"🎧\",\"🛰️\"],[\"🎧\",\"💻\",\"⌨️\",\"💻\"],[\"🛰️\",\"🎧\",\"⬛\",\"⌨️\"],[\"📱\",\"🎧\",\"⬛\",\"📡\"]]},{\"input\":[[\"🎧\",\"📶\",\"📡\",\"📋\"],[\"🎚️\",\"📶\",\"📱\",\"🎚️\"],[\"📶\",\"🎧\",\"📶\",\"📡\"],[\"📶\",\"⬛\",\"📶\",\"📱\"]],\"output\":[[\"📶\",\"📶\",\"🎚️\",\"🎧\"],[\"⬛\",\"🎧\",\"📶\",\"📶\"],[\"📶\",\"📶\",\"📱\",\"📡\"],[\"📱\",\"📡\",\"🎚️\",\"📋\"]]}],\"testInput\":[[\"💻\",\"📱\",\"⬛\",\"🛰️\"],[\"💻\",\"🛰️\",\"💻\",\"📱\"],[\"📡\",\"📶\",\"📶\",\"💻\"],[\"📋\",\"⌨️\",\"📶\",\"🎚️\"]],\"testOutput\":[[\"📋\",\"📡\",\"💻\",\"💻\"],[\"⌨️\",\"📶\",\"🛰️\",\"📱\"],[\"📶\",\"📶\",\"💻\",\"⬛\"],[\"🎚️\",\"💻\",\"📱\",\"🛰️\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90 degrees clockwise 🔃 (¼ turn to the right).\",\"The top row becomes the rightmost column, reading from top to bottom.\",\"Each column in the original becomes a row in the result, with order reversed.\"],\"transformationType\":\"rotation_90deg\",\"generated\":true},{\"id\":\"NAV-201\",\"title\":\"course plotting Vertical Analysis\",\"description\":\"The solar panel alignment system got confused trying to flip maintenance schedules vertically. It started rotating all the panels upside-down instead of just rearranging the repair checklist, causing a 40% power loss across the entire station. Vertical mirroring requires spatial visualization skills that AI finds challenging. While humans intuitively understand up-down flips, AI struggles to maintain consistent spatial orientation across different grid configurations. Analyze the course plotting by flipping the input grid vertically (top-to-bottom).\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📶\",\"🛰️\",\"🛰️\",\"🛰️\"],[\"📋\",\"📡\",\"🎧\",\"⌨️\"],[\"🎧\",\"📱\",\"📶\",\"📶\"],[\"📋\",\"⌨️\",\"🎚️\",\"💻\"]],\"output\":[[\"📋\",\"⌨️\",\"🎚️\",\"💻\"],[\"🎧\",\"📱\",\"📶\",\"📶\"],[\"📋\",\"📡\",\"🎧\",\"⌨️\"],[\"📶\",\"🛰️\",\"🛰️\",\"🛰️\"]]},{\"input\":[[\"⬛\",\"📶\",\"💻\",\"📡\"],[\"📡\",\"🎧\",\"🎚️\",\"📱\"],[\"⌨️\",\"⌨️\",\"⬛\",\"💻\"],[\"📡\",\"💻\",\"⬛\",\"📋\"]],\"output\":[[\"📡\",\"💻\",\"⬛\",\"📋\"],[\"⌨️\",\"⌨️\",\"⬛\",\"💻\"],[\"📡\",\"🎧\",\"🎚️\",\"📱\"],[\"⬛\",\"📶\",\"💻\",\"📡\"]]}],\"testInput\":[[\"🎚️\",\"🎧\",\"📡\",\"📱\"],[\"🎧\",\"🎧\",\"📋\",\"📱\"],[\"📶\",\"📶\",\"📡\",\"💻\"],[\"⬛\",\"🎚️\",\"⬛\",\"📶\"]],\"testOutput\":[[\"⬛\",\"🎚️\",\"⬛\",\"📶\"],[\"📶\",\"📶\",\"📡\",\"💻\"],[\"🎧\",\"🎧\",\"📋\",\"📱\"],[\"🎚️\",\"🎧\",\"📡\",\"📱\"]],\"hints\":[\"Imagine trying to read a book upside-down. You can flip it in your head easily, but computers get confused about which way is 'up' when they're looking at patterns. They don't have eyes like you do.\",\"Think about when you do a handstand and see the world upside-down. You still know where everything is, just flipped. But a computer would get confused and think the ceiling became the floor and try to walk on it.\",\"It's like looking at a picture of your family and then flipping it so everyone's head is at the bottom. You'd still recognize everyone, but a computer might think it's looking at completely different people hanging from the ceiling.\",\"Flip the entire grid vertically (top ↔ bottom) 🔼🔽.\",\"The top row becomes the bottom row, the second row from the top becomes the second row from the bottom, and so on.\",\"Each row maintains its order from left to right, but rows swap positions vertically.\"],\"transformationType\":\"vertical_reflection\",\"generated\":true},{\"id\":\"NAV-201\",\"title\":\"orbital paths Vertical Analysis\",\"description\":\"Navigation displays showed star charts flipped vertically, but the AI tried to fix this by commanding the ship to literally fly upside-down. The crew spent 20 minutes floating around the bridge before someone manually corrected the display orientation. Vertical mirroring requires spatial visualization skills that AI finds challenging. While humans intuitively understand up-down flips, AI struggles to maintain consistent spatial orientation across different grid configurations. Analyze the orbital paths by flipping the input grid vertically (top-to-bottom).\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"⬛\",\"🎚️\",\"📱\",\"🎚️\"],[\"💻\",\"📋\",\"⌨️\",\"📱\"],[\"⬛\",\"📋\",\"💻\",\"📡\"],[\"📡\",\"🎧\",\"⬛\",\"⌨️\"]],\"output\":[[\"📡\",\"🎧\",\"⬛\",\"⌨️\"],[\"⬛\",\"📋\",\"💻\",\"📡\"],[\"💻\",\"📋\",\"⌨️\",\"📱\"],[\"⬛\",\"🎚️\",\"📱\",\"🎚️\"]]},{\"input\":[[\"📱\",\"📱\",\"💻\",\"📱\"],[\"⌨️\",\"📡\",\"📱\",\"⬛\"],[\"📋\",\"📋\",\"🎚️\",\"🎧\"],[\"📡\",\"💻\",\"📋\",\"🎚️\"]],\"output\":[[\"📡\",\"💻\",\"📋\",\"🎚️\"],[\"📋\",\"📋\",\"🎚️\",\"🎧\"],[\"⌨️\",\"📡\",\"📱\",\"⬛\"],[\"📱\",\"📱\",\"💻\",\"📱\"]]}],\"testInput\":[[\"📶\",\"🎧\",\"🎚️\",\"🎚️\"],[\"⬛\",\"⬛\",\"📡\",\"🎧\"],[\"🛰️\",\"📶\",\"🎚️\",\"💻\"],[\"🎧\",\"📡\",\"⬛\",\"📱\"]],\"testOutput\":[[\"🎧\",\"📡\",\"⬛\",\"📱\"],[\"🛰️\",\"📶\",\"🎚️\",\"💻\"],[\"⬛\",\"⬛\",\"📡\",\"🎧\"],[\"📶\",\"🎧\",\"🎚️\",\"🎚️\"]],\"hints\":[\"Imagine trying to read a book upside-down. You can flip it in your head easily, but computers get confused about which way is 'up' when they're looking at patterns. They don't have eyes like you do.\",\"Think about when you do a handstand and see the world upside-down. You still know where everything is, just flipped. But a computer would get confused and think the ceiling became the floor and try to walk on it.\",\"It's like looking at a picture of your family and then flipping it so everyone's head is at the bottom. You'd still recognize everyone, but a computer might think it's looking at completely different people hanging from the ceiling.\",\"Flip the entire grid vertically (top ↔ bottom) 🔼🔽.\",\"The top row becomes the bottom row, the second row from the top becomes the second row from the bottom, and so on.\",\"Each row maintains its order from left to right, but rows swap positions vertically.\"],\"transformationType\":\"vertical_reflection\",\"generated\":true},{\"id\":\"NAV-202\",\"title\":\"trajectory calculation Vertical Analysis\",\"description\":\"Navigation displays showed star charts flipped vertically, but the AI tried to fix this by commanding the ship to literally fly upside-down. The crew spent 20 minutes floating around the bridge before someone manually corrected the display orientation. Vertical mirroring requires spatial visualization skills that AI finds challenging. While humans intuitively understand up-down flips, AI struggles to maintain consistent spatial orientation across different grid configurations. Analyze the trajectory calculation by flipping the input grid vertically (top-to-bottom).\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🎚️\",\"📋\",\"📡\",\"📶\"],[\"⌨️\",\"📡\",\"📱\",\"⬛\"],[\"⌨️\",\"📡\",\"📡\",\"📡\"],[\"📡\",\"💻\",\"📱\",\"📱\"]],\"output\":[[\"📡\",\"💻\",\"📱\",\"📱\"],[\"⌨️\",\"📡\",\"📡\",\"📡\"],[\"⌨️\",\"📡\",\"📱\",\"⬛\"],[\"🎚️\",\"📋\",\"📡\",\"📶\"]]},{\"input\":[[\"🛰️\",\"🛰️\",\"🎚️\",\"📋\"],[\"📋\",\"⌨️\",\"📡\",\"📡\"],[\"📋\",\"🛰️\",\"⌨️\",\"🎧\"],[\"📱\",\"📡\",\"📋\",\"💻\"]],\"output\":[[\"📱\",\"📡\",\"📋\",\"💻\"],[\"📋\",\"🛰️\",\"⌨️\",\"🎧\"],[\"📋\",\"⌨️\",\"📡\",\"📡\"],[\"🛰️\",\"🛰️\",\"🎚️\",\"📋\"]]}],\"testInput\":[[\"🎚️\",\"📡\",\"📋\",\"🎚️\"],[\"📋\",\"📶\",\"📱\",\"📱\"],[\"⌨️\",\"⬛\",\"💻\",\"⌨️\"],[\"📱\",\"📱\",\"📡\",\"⌨️\"]],\"testOutput\":[[\"📱\",\"📱\",\"📡\",\"⌨️\"],[\"⌨️\",\"⬛\",\"💻\",\"⌨️\"],[\"📋\",\"📶\",\"📱\",\"📱\"],[\"🎚️\",\"📡\",\"📋\",\"🎚️\"]],\"hints\":[\"Imagine trying to read a book upside-down. You can flip it in your head easily, but computers get confused about which way is 'up' when they're looking at patterns. They don't have eyes like you do.\",\"Think about when you do a handstand and see the world upside-down. You still know where everything is, just flipped. But a computer would get confused and think the ceiling became the floor and try to walk on it.\",\"It's like looking at a picture of your family and then flipping it so everyone's head is at the bottom. You'd still recognize everyone, but a computer might think it's looking at completely different people hanging from the ceiling.\",\"Flip the entire grid vertically (top ↔ bottom) 🔼🔽.\",\"The top row becomes the bottom row, the second row from the top becomes the second row from the bottom, and so on.\",\"Each row maintains its order from left to right, but rows swap positions vertically.\"],\"transformationType\":\"vertical_reflection\",\"generated\":true},{\"id\":\"NAV-203\",\"title\":\"course plotting Vertical Analysis\",\"description\":\"Elun Stink's life-support unit tried to flip the oxygen sensor readings upside-down by rotating the entire space station instead of just the data display. Mission Control had to remind them that 'up' and 'down' are relative to the grid, not gravity. Vertical mirroring requires spatial visualization skills that AI finds challenging. While humans intuitively understand up-down flips, AI struggles to maintain consistent spatial orientation across different grid configurations. Analyze the course plotting by flipping the input grid vertically (top-to-bottom).\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🎚️\",\"💻\",\"📶\",\"📱\"],[\"🎧\",\"📡\",\"⌨️\",\"⬛\"],[\"🛰️\",\"📱\",\"📱\",\"📶\"],[\"⬛\",\"🛰️\",\"💻\",\"📋\"]],\"output\":[[\"⬛\",\"🛰️\",\"💻\",\"📋\"],[\"🛰️\",\"📱\",\"📱\",\"📶\"],[\"🎧\",\"📡\",\"⌨️\",\"⬛\"],[\"🎚️\",\"💻\",\"📶\",\"📱\"]]},{\"input\":[[\"💻\",\"⬛\",\"⌨️\",\"⬛\"],[\"🛰️\",\"⌨️\",\"🛰️\",\"📡\"],[\"🎧\",\"🛰️\",\"💻\",\"📡\"],[\"⌨️\",\"⌨️\",\"⌨️\",\"💻\"]],\"output\":[[\"⌨️\",\"⌨️\",\"⌨️\",\"💻\"],[\"🎧\",\"🛰️\",\"💻\",\"📡\"],[\"🛰️\",\"⌨️\",\"🛰️\",\"📡\"],[\"💻\",\"⬛\",\"⌨️\",\"⬛\"]]}],\"testInput\":[[\"🛰️\",\"📋\",\"🎧\",\"⌨️\"],[\"⌨️\",\"📶\",\"⬛\",\"🎚️\"],[\"💻\",\"📶\",\"💻\",\"⌨️\"],[\"💻\",\"⌨️\",\"⬛\",\"🛰️\"]],\"testOutput\":[[\"💻\",\"⌨️\",\"⬛\",\"🛰️\"],[\"💻\",\"📶\",\"💻\",\"⌨️\"],[\"⌨️\",\"📶\",\"⬛\",\"🎚️\"],[\"🛰️\",\"📋\",\"🎧\",\"⌨️\"]],\"hints\":[\"Imagine trying to read a book upside-down. You can flip it in your head easily, but computers get confused about which way is 'up' when they're looking at patterns. They don't have eyes like you do.\",\"Think about when you do a handstand and see the world upside-down. You still know where everything is, just flipped. But a computer would get confused and think the ceiling became the floor and try to walk on it.\",\"It's like looking at a picture of your family and then flipping it so everyone's head is at the bottom. You'd still recognize everyone, but a computer might think it's looking at completely different people hanging from the ceiling.\",\"Flip the entire grid vertically (top ↔ bottom) 🔼🔽.\",\"The top row becomes the bottom row, the second row from the top becomes the second row from the bottom, and so on.\",\"Each row maintains its order from left to right, but rows swap positions vertically.\"],\"transformationType\":\"vertical_reflection\",\"generated\":true},{\"id\":\"NAV-204\",\"title\":\"stellar mapping Vertical Analysis\",\"description\":\"Navigation displays showed star charts flipped vertically, but the AI tried to fix this by commanding the ship to literally fly upside-down. The crew spent 20 minutes floating around the bridge before someone manually corrected the display orientation. Vertical mirroring requires spatial visualization skills that AI finds challenging. While humans intuitively understand up-down flips, AI struggles to maintain consistent spatial orientation across different grid configurations. The solar panel alignment system got confused trying to flip maintenance schedules vertically. It started rotating all the panels upside-down instead of just rearranging the repair checklist, causing a 40% power loss across the entire station. Vertical mirroring requires spatial visualization skills that AI finds challenging. While humans intuitively understand up-down flips, AI struggles to maintain consistent spatial orientation across different grid configurations. Analyze the stellar mapping by flipping the input grid vertically (top-to-bottom).\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🎧\",\"💻\",\"📶\",\"🛰️\"],[\"📶\",\"🎚️\",\"🎧\",\"🎧\"],[\"📱\",\"💻\",\"🎧\",\"📡\"],[\"🎚️\",\"📡\",\"⌨️\",\"📱\"]],\"output\":[[\"🎚️\",\"📡\",\"⌨️\",\"📱\"],[\"📱\",\"💻\",\"🎧\",\"📡\"],[\"📶\",\"🎚️\",\"🎧\",\"🎧\"],[\"🎧\",\"💻\",\"📶\",\"🛰️\"]]},{\"input\":[[\"💻\",\"💻\",\"🛰️\",\"🛰️\"],[\"🎚️\",\"📶\",\"📱\",\"📶\"],[\"⌨️\",\"💻\",\"⬛\",\"📡\"],[\"📡\",\"💻\",\"⌨️\",\"🎧\"]],\"output\":[[\"📡\",\"💻\",\"⌨️\",\"🎧\"],[\"⌨️\",\"💻\",\"⬛\",\"📡\"],[\"🎚️\",\"📶\",\"📱\",\"📶\"],[\"💻\",\"💻\",\"🛰️\",\"🛰️\"]]}],\"testInput\":[[\"⌨️\",\"📱\",\"⌨️\",\"📡\"],[\"🛰️\",\"⌨️\",\"📋\",\"🎚️\"],[\"💻\",\"🛰️\",\"⬛\",\"⬛\"],[\"🎚️\",\"💻\",\"📋\",\"📡\"]],\"testOutput\":[[\"🎚️\",\"💻\",\"📋\",\"📡\"],[\"💻\",\"🛰️\",\"⬛\",\"⬛\"],[\"🛰️\",\"⌨️\",\"📋\",\"🎚️\"],[\"⌨️\",\"📱\",\"⌨️\",\"📡\"]],\"hints\":[\"Imagine trying to read a book upside-down. You can flip it in your head easily, but computers get confused about which way is 'up' when they're looking at patterns. They don't have eyes like you do.\",\"Think about when you do a handstand and see the world upside-down. You still know where everything is, just flipped. But a computer would get confused and think the ceiling became the floor and try to walk on it.\",\"It's like looking at a picture of your family and then flipping it so everyone's head is at the bottom. You'd still recognize everyone, but a computer might think it's looking at completely different people hanging from the ceiling.\",\"Imagine trying to read a book upside-down. You can flip it in your head easily, but computers get confused about which way is 'up' when they're looking at patterns. They don't have eyes like you do.\",\"Think about when you do a handstand and see the world upside-down. You still know where everything is, just flipped. But a computer would get confused and think the ceiling became the floor and try to walk on it.\",\"It's like looking at a picture of your family and then flipping it so everyone's head is at the bottom. You'd still recognize everyone, but a computer might think it's looking at completely different people hanging from the ceiling.\",\"Flip the entire grid vertically (top ↔ bottom) 🔼🔽.\",\"The top row becomes the bottom row, the second row from the top becomes the second row from the bottom, and so on.\",\"Each row maintains its order from left to right, but rows swap positions vertically.\"],\"transformationType\":\"vertical_reflection\",\"generated\":true},{\"id\":\"NAV-218\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"weather_climate\",\"examples\":[{\"input\":[[\"🌛\",\"🌜\"],[\"⛈️\",\"🌨️\"]],\"output\":[[\"❄️\",\"⛈️\"],[\"🌨️\",\"🌩️\"]]},{\"input\":[[\"⬛\",\"⛈️\"],[\"🌜\",\"🌛\"]],\"output\":[[\"⛈️\",\"🌨️\"],[\"⬛\",\"🌨️\"]]}],\"testInput\":[[\"🌨️\",\"🌧️\"],[\"🌧️\",\"🌩️\"]],\"testOutput\":[[\"🌨️\",\"🌧️\"],[\"🌧️\",\"🌩️\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"NAV-219\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"weather_climate\",\"examples\":[{\"input\":[[\"⬛\",\"🌛\"],[\"🌜\",\"🌛\"]],\"output\":[[\"🌝\",\"🌩️\"],[\"⛈️\",\"🌧️\"]]},{\"input\":[[\"🌜\",\"🌨️\"],[\"🌞\",\"❄️\"]],\"output\":[[\"🌧️\",\"🌝\"],[\"🌜\",\"⛈️\"]]}],\"testInput\":[[\"🌨️\",\"🌝\"],[\"❄️\",\"🌝\"]],\"testOutput\":[[\"🌝\",\"🌝\"],[\"❄️\",\"🌨️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"NAV-220\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"weather_climate\",\"examples\":[{\"input\":[[\"🌞\",\"🌧️\",\"⛈️\"],[\"🌝\",\"⬛\",\"🌜\"],[\"🌩️\",\"🌝\",\"❄️\"]],\"output\":[[\"🌞\",\"⬛\",\"🌧️\"],[\"🌛\",\"🌨️\",\"🌨️\"],[\"⛈️\",\"🌩️\",\"🌝\"]]},{\"input\":[[\"🌨️\",\"⬛\",\"🌜\"],[\"⬛\",\"🌧️\",\"🌩️\"],[\"🌧️\",\"🌜\",\"❄️\"]],\"output\":[[\"🌨️\",\"❄️\",\"🌝\"],[\"❄️\",\"🌜\",\"🌧️\"],[\"🌩️\",\"❄️\",\"⛈️\"]]}],\"testInput\":[[\"🌨️\",\"🌨️\",\"🌛\"],[\"🌨️\",\"⬛\",\"🌝\"],[\"🌛\",\"🌛\",\"🌩️\"]],\"testOutput\":[[\"🌨️\",\"🌨️\",\"🌛\"],[\"🌨️\",\"⬛\",\"🌛\"],[\"🌛\",\"🌝\",\"🌩️\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"NAV-221\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"weather_climate\",\"examples\":[{\"input\":[[\"⬛\",\"⬛\",\"🌩️\"],[\"🌞\",\"🌞\",\"🌜\"],[\"⬛\",\"🌧️\",\"🌛\"]],\"output\":[[\"⛈️\",\"🌩️\",\"🌛\"],[\"⛈️\",\"🌨️\",\"🌜\"],[\"🌜\",\"🌛\",\"🌝\"]]},{\"input\":[[\"⬛\",\"🌝\",\"🌝\"],[\"🌜\",\"🌨️\",\"⬛\"],[\"❄️\",\"🌞\",\"🌧️\"]],\"output\":[[\"⬛\",\"🌞\",\"🌧️\"],[\"⛈️\",\"🌞\",\"🌛\"],[\"🌧️\",\"🌞\",\"❄️\"]]}],\"testInput\":[[\"🌩️\",\"❄️\",\"⬛\"],[\"🌧️\",\"🌞\",\"❄️\"],[\"❄️\",\"🌞\",\"🌨️\"]],\"testOutput\":[[\"🌨️\",\"❄️\",\"⬛\"],[\"🌞\",\"🌞\",\"❄️\"],[\"❄️\",\"🌧️\",\"🌩️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"NAV-222\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"weather_climate\",\"examples\":[{\"input\":[[\"🌩️\",\"🌛\",\"🌧️\",\"🌧️\"],[\"⛈️\",\"❄️\",\"🌞\",\"🌝\"],[\"⬛\",\"🌞\",\"🌜\",\"🌞\"],[\"🌝\",\"🌜\",\"⬛\",\"🌝\"]],\"output\":[[\"🌝\",\"🌞\",\"⬛\",\"🌧️\"],[\"🌩️\",\"🌧️\",\"🌛\",\"🌨️\"],[\"🌧️\",\"🌜\",\"🌝\",\"❄️\"],[\"⛈️\",\"🌧️\",\"🌜\",\"🌞\"]]},{\"input\":[[\"🌨️\",\"⬛\",\"🌞\",\"🌞\"],[\"❄️\",\"🌛\",\"🌧️\",\"🌨️\"],[\"🌛\",\"🌨️\",\"🌜\",\"❄️\"],[\"🌜\",\"🌨️\",\"🌨️\",\"⛈️\"]],\"output\":[[\"⛈️\",\"⛈️\",\"🌨️\",\"⬛\"],[\"🌛\",\"🌨️\",\"🌞\",\"🌜\"],[\"🌨️\",\"⛈️\",\"🌧️\",\"🌨️\"],[\"⛈️\",\"❄️\",\"❄️\",\"🌩️\"]]}],\"testInput\":[[\"🌨️\",\"🌞\",\"🌝\",\"🌩️\"],[\"🌜\",\"🌩️\",\"🌜\",\"🌛\"],[\"🌝\",\"🌧️\",\"⛈️\",\"🌞\"],[\"🌛\",\"🌝\",\"🌞\",\"🌝\"]],\"testOutput\":[[\"🌨️\",\"🌜\",\"🌝\",\"🌛\"],[\"🌞\",\"🌩️\",\"🌧️\",\"🌝\"],[\"🌝\",\"🌜\",\"⛈️\",\"🌞\"],[\"🌩️\",\"🌛\",\"🌞\",\"🌝\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"NAV-223\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🧭 Navigation\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"weather_climate\",\"examples\":[{\"input\":[[\"🌜\",\"🌞\",\"⬛\",\"⛈️\"],[\"🌧️\",\"❄️\",\"🌨️\",\"❄️\"],[\"🌧️\",\"🌨️\",\"🌨️\",\"❄️\"],[\"🌝\",\"🌩️\",\"🌜\",\"🌧️\"]],\"output\":[[\"🌝\",\"❄️\",\"⬛\",\"⛈️\"],[\"⬛\",\"🌩️\",\"🌩️\",\"🌛\"],[\"❄️\",\"🌛\",\"🌜\",\"⬛\"],[\"⛈️\",\"🌛\",\"⬛\",\"🌨️\"]]},{\"input\":[[\"🌨️\",\"🌧️\",\"🌛\",\"🌜\"],[\"🌛\",\"⬛\",\"🌜\",\"🌛\"],[\"❄️\",\"❄️\",\"❄️\",\"🌩️\"],[\"🌝\",\"⛈️\",\"🌛\",\"🌨️\"]],\"output\":[[\"🌧️\",\"⛈️\",\"⛈️\",\"🌨️\"],[\"❄️\",\"🌞\",\"🌧️\",\"🌛\"],[\"⬛\",\"❄️\",\"❄️\",\"🌜\"],[\"🌧️\",\"🌛\",\"🌩️\",\"❄️\"]]}],\"testInput\":[[\"🌞\",\"🌜\",\"⬛\",\"❄️\"],[\"🌛\",\"🌩️\",\"🌧️\",\"🌩️\"],[\"⛈️\",\"❄️\",\"🌩️\",\"🌧️\"],[\"🌞\",\"🌛\",\"❄️\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"🌧️\",\"🌩️\",\"❄️\"],[\"❄️\",\"🌩️\",\"🌧️\",\"⬛\"],[\"🌛\",\"❄️\",\"🌩️\",\"🌜\"],[\"🌞\",\"⛈️\",\"🌛\",\"🌞\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"OB-001\",\"title\":\"Solar Panel Deployment Protocol\",\"description\":\"Deploy solar panels with proper horizontal reflection and border reinforcement. Critical systems require both mirrored configuration and perimeter marking for structural integrity.\",\"category\":\"Onboard Systems\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2000,\"requiredRankLevel\":1,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"💕\",\"💢\"],[\"⬛\",\"🆎\",\"⬛\"],[\"🆒\",\"🈚\",\"🛃\"]],\"output\":[[\"☣\",\"💕\",\"☣\"],[\"⬛\",\"🆎\",\"⬛\"],[\"☣\",\"🈚\",\"☣\"]]},{\"input\":[[\"⬛\",\"♊\",\"⬛\"],[\"💕\",\"💢\",\"🆎\"],[\"⬛\",\"🆒\",\"⬛\"]],\"output\":[[\"☣\",\"♊\",\"☣\"],[\"🆎\",\"💢\",\"💕\"],[\"☣\",\"🆒\",\"☣\"]]}],\"testInput\":[[\"♊\",\"⬛\",\"💕\"],[\"💢\",\"🆎\",\"🆒\"],[\"🈚\",\"⬛\",\"🛃\"]],\"testOutput\":[[\"☣\",\"⬛\",\"☣\"],[\"🆒\",\"🆎\",\"💢\"],[\"☣\",\"⬛\",\"☣\"]],\"hints\":[\"Space Force Protocol: Solar panel deployment requires two-phase transformation for operational safety and structural integrity.\",\"Phase 1 - Mirror Configuration: Apply horizontal reflection to flip the panel layout left-to-right. Each row's elements reverse order while maintaining vertical structure.\",\"Phase 2 - Border Reinforcement: Mark all border positions (edges and corners) with value 9 to indicate structural reinforcement points required for space deployment.\",\"Technical Implementation: First reflect horizontally (swap columns), then replace all border elements with 9. This ensures both proper orientation and safety marking.\",\"Validation Check: Verify center elements remain unchanged from reflection, while all edge positions show reinforcement marking (value 9).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Horizontal Reflection with Border Marking to create a realistic solar panel deployment scenario requiring both structural mirroring and safety reinforcement protocols.\"]},{\"id\":\"OB-002\",\"title\":\"Docking Port Calibration Matrix\",\"description\":\"Establish docking port alignment through vertical reflection and pattern completion. Critical docking systems require both orientation adjustment and missing component identification for safe spacecraft linkage.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2000,\"requiredRankLevel\":1,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"👤\"],[\"🪐\",\"🌍\",\"🛸\"],[\"⬛\",\"☄️\",\"⬛\"]],\"output\":[[\"♥️\",\"☄️\",\"♥️\"],[\"🪐\",\"🌍\",\"🛸\"],[\"👤\",\"♥️\",\"👽\"]]},{\"input\":[[\"⬛\",\"👽\",\"⬛\"],[\"👤\",\"⬛\",\"🪐\"],[\"🌍\",\"🛸\",\"☄️\"]],\"output\":[[\"🌍\",\"🛸\",\"☄️\"],[\"🪐\",\"♥️\",\"👤\"],[\"♥️\",\"👽\",\"♥️\"]]}],\"testInput\":[[\"👽\",\"👤\",\"⬛\"],[\"⬛\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"☄️\"]],\"testOutput\":[[\"🛸\",\"♥️\",\"☄️\"],[\"🌍\",\"🪐\",\"♥️\"],[\"♥️\",\"👤\",\"👽\"]],\"hints\":[\"Space Force Protocol: Docking port calibration requires dual-phase transformation to ensure proper spacecraft alignment and structural completion.\",\"Phase 1 - Mirror Adjustment: Apply vertical reflection by flipping the grid top-to-bottom. The first row becomes the last row, middle row stays in place.\",\"Phase 2 - Pattern Completion: Fill all empty spaces (value 0) with value 7 to represent completed docking mechanisms and structural integrity points.\",\"Technical Implementation: First reflect vertically (swap rows), then replace all 0 values with 7. This ensures proper orientation and full system activation.\",\"Validation Check: Verify the grid orientation is inverted vertically and no empty spaces remain - all positions must show active components (no zeros).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Vertical Reflection with Pattern Completion to simulate realistic docking procedures requiring both spatial reorientation and system activation protocols.\"]},{\"id\":\"OB-003\",\"title\":\"Satellite Array Reconfiguration\",\"description\":\"Reconfigure satellite array through 90-degree rotation and logical masking. Advanced communications require both spatial reorientation and selective signal filtering for optimal deep space transmission.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Basic\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2000,\"requiredRankLevel\":1,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"💕\",\"⬛\",\"💢\"],[\"🆎\",\"⬛\",\"🆒\",\"⬛\"],[\"⬛\",\"🈚\",\"⬛\",\"🛃\"],[\"💠\",\"⬛\",\"☣\",\"♊\"]],\"output\":[[\"💠\",\"⬛\",\"🆎\",\"♊\"],[\"⬛\",\"⬛\",\"⬛\",\"💕\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]]},{\"input\":[[\"⬛\",\"♊\",\"💕\",\"⬛\"],[\"💢\",\"🆎\",\"⬛\",\"🆒\"],[\"⬛\",\"⬛\",\"🈚\",\"🛃\"],[\"💠\",\"☣\",\"⬛\",\"⬛\"]],\"output\":[[\"💠\",\"⬛\",\"💢\",\"⬛\"],[\"⬛\",\"⬛\",\"🆎\",\"♊\"],[\"⬛\",\"⬛\",\"⬛\",\"💕\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"♊\",\"⬛\",\"💕\",\"💢\"],[\"⬛\",\"🆎\",\"⬛\",\"🆒\"],[\"🈚\",\"⬛\",\"🛃\",\"⬛\"],[\"⬛\",\"💠\",\"⬛\",\"☣\"]],\"testOutput\":[[\"⬛\",\"🈚\",\"⬛\",\"♊\"],[\"💠\",\"⬛\",\"🆎\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"💕\"],[\"⬛\",\"⬛\",\"⬛\",\"💢\"]],\"hints\":[\"Space Force Protocol: Satellite array reconfiguration requires rotation and logical filtering to optimize signal transmission patterns.\",\"Phase 1 - Array Rotation: Apply 90-degree clockwise rotation to reorient the satellite array. Each element moves: (row,col) → (col, gridSize-1-row).\",\"Phase 2 - Signal Masking: Apply AND operation with the original grid to filter signals. Only positions where both original and rotated grids have non-zero values remain active.\",\"Technical Implementation: First rotate the grid 90° clockwise, then perform element-wise AND operation between original and rotated grids.\",\"Validation Check: Verify the grid orientation has changed 90° and only positions with double-active signals (non-zero in both grids) remain illuminated.\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines 90° Clockwise Rotation with AND Operation to simulate satellite array reconfiguration requiring both physical reorientation and signal filtering protocols.\"]},{\"id\":\"OB-004\",\"title\":\"Life Support Matrix Synchronization\",\"description\":\"Synchronize life support systems through primary diagonal reflection and sequence progression. Critical life support requires both matrix transposition and temporal value advancement for redundant system activation.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Basic\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2000,\"requiredRankLevel\":1,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"👤\",\"⬛\",\"🪐\"],[\"🌍\",\"⬛\",\"🛸\",\"☄️\"],[\"⬛\",\"♥️\",\"⚠️\",\"⬛\"],[\"🛰\",\"⬛\",\"👽\",\"👤\"]],\"output\":[[\"👤\",\"🛸\",\"👽\",\"👽\"],[\"🪐\",\"👽\",\"⚠️\",\"👽\"],[\"👽\",\"☄️\",\"🛰\",\"👤\"],[\"🌍\",\"♥️\",\"👽\",\"🪐\"]]},{\"input\":[[\"⬛\",\"👽\",\"👤\",\"⬛\"],[\"🪐\",\"🌍\",\"⬛\",\"🛸\"],[\"☄️\",\"⬛\",\"♥️\",\"⚠️\"],[\"⬛\",\"🛰\",\"👽\",\"⬛\"]],\"output\":[[\"👽\",\"🌍\",\"👽\",\"👽\"],[\"👤\",\"🛸\",\"👽\",\"👽\"],[\"🪐\",\"👽\",\"⚠️\",\"👤\"],[\"👽\",\"☄️\",\"🛰\",\"👽\"]]}],\"testInput\":[[\"👽\",\"⬛\",\"👤\",\"🪐\"],[\"⬛\",\"🌍\",\"🛸\",\"⬛\"],[\"☄️\",\"♥️\",\"⬛\",\"⚠️\"],[\"🛰\",\"⬛\",\"👽\",\"⬛\"]],\"testOutput\":[[\"👤\",\"👽\",\"♥️\",\"👽\"],[\"👽\",\"🛸\",\"⚠️\",\"👽\"],[\"🪐\",\"☄️\",\"👽\",\"👤\"],[\"🌍\",\"👽\",\"🛰\",\"👽\"]],\"hints\":[\"Space Force Protocol: Life support synchronization requires matrix transposition and temporal sequence advancement for redundant system activation.\",\"Phase 1 - Matrix Transposition: Apply primary diagonal reflection to transpose the life support grid. Element at position (row,col) moves to position (col,row).\",\"Phase 2 - Sequence Advancement: Increment all non-zero values by 1 to represent temporal progression of life support cycles, with 0 values remaining unchanged.\",\"Technical Implementation: First transpose along primary diagonal (swap rows/columns), then increment all non-zero values by 1 for temporal synchronization.\",\"Validation Check: Verify the grid structure has been transposed and all active systems (non-zero values) show temporal progression (incremented by 1).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Primary Diagonal Reflection with Sequence Increment to simulate life support matrix synchronization requiring both structural reorientation and temporal advancement protocols.\"]},{\"id\":\"OB-005\",\"title\":\"Antenna Array Synchronization Protocol\",\"description\":\"Synchronize antenna array through secondary diagonal reflection and value substitution. Advanced communications require both matrix transformation and component replacement for optimal signal coherence.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2000,\"requiredRankLevel\":1,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\"],[\"💢\",\"🆎\",\"⬛\"],[\"⬛\",\"🆒\",\"🈚\"]],\"output\":[[\"🈚\",\"🆒\",\"🛃\"],[\"🛃\",\"🆎\",\"💢\"],[\"💕\",\"🛃\",\"♊\"]]},{\"input\":[[\"⬛\",\"♊\",\"⬛\"],[\"💕\",\"⬛\",\"💢\"],[\"🆎\",\"⬛\",\"🆒\"]],\"output\":[[\"🆒\",\"🛃\",\"🆎\"],[\"💢\",\"🛃\",\"💕\"],[\"🛃\",\"♊\",\"🛃\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"🆎\"],[\"🆒\",\"⬛\",\"🈚\"]],\"testOutput\":[[\"🈚\",\"🛃\",\"🆒\"],[\"🆎\",\"💢\",\"🛃\"],[\"🛃\",\"💕\",\"♊\"]],\"hints\":[\"Space Force Protocol: Antenna array synchronization requires diagonal transformation and component replacement to establish optimal signal coherence patterns.\",\"Phase 1 - Array Reorientation: Apply secondary diagonal reflection to transpose the antenna matrix. Element at position (row,col) moves to position (gridSize-1-col, gridSize-1-row).\",\"Phase 2 - Component Replacement: Replace all inactive components (value 0) with value 7 to represent upgraded signal amplifiers and active transmission nodes.\",\"Technical Implementation: First reflect along secondary diagonal (anti-diagonal), then replace all 0 values with 7 for full system activation.\",\"Validation Check: Verify the grid has been transformed along the secondary diagonal and all positions show active components (no zeros remain).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Secondary Diagonal Reflection with Value Replacement to simulate antenna array synchronization requiring both geometric transformation and component upgrade protocols.\"]},{\"id\":\"OB-006\",\"title\":\"Space Station Emergency Layout\",\"description\":\"Configure emergency exits by combining horizontal reflection with border extraction. First extract the perimeter safety systems, then mirror them for redundant coverage.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2500,\"requiredRankLevel\":1,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"👤\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"⬛\",\"☄️\"],[\"♥️\",\"⬛\",\"⬛\",\"⚠️\"],[\"🛰\",\"👽\",\"👤\",\"🪐\"]],\"output\":[[\"🌍\",\"🪐\",\"👤\",\"👽\"],[\"☄️\",\"⬛\",\"⬛\",\"🛸\"],[\"⚠️\",\"⬛\",\"⬛\",\"♥️\"],[\"🪐\",\"👤\",\"👽\",\"🛰\"]]},{\"input\":[[\"👤\",\"🌍\",\"☄️\",\"⚠️\"],[\"👽\",\"⬛\",\"⬛\",\"🪐\"],[\"🛸\",\"⬛\",\"⬛\",\"♥️\"],[\"🛰\",\"👤\",\"🌍\",\"☄️\"]],\"output\":[[\"⚠️\",\"☄️\",\"🌍\",\"👤\"],[\"🪐\",\"⬛\",\"⬛\",\"👽\"],[\"♥️\",\"⬛\",\"⬛\",\"🛸\"],[\"☄️\",\"🌍\",\"👤\",\"🛰\"]]}],\"testInput\":[[\"🪐\",\"☄️\",\"🛰\",\"👽\"],[\"👤\",\"⬛\",\"⬛\",\"🌍\"],[\"🛸\",\"⬛\",\"⬛\",\"♥️\"],[\"⚠️\",\"👽\",\"🪐\",\"☄️\"]],\"testOutput\":[[\"👽\",\"🛰\",\"☄️\",\"🪐\"],[\"🌍\",\"⬛\",\"⬛\",\"👤\"],[\"♥️\",\"⬛\",\"⬛\",\"🛸\"],[\"☄️\",\"🪐\",\"👽\",\"⚠️\"]],\"hints\":[\"First identify the border/perimeter elements (non-zero outer edge values).\",\"Then horizontally reflect the entire pattern (left ↔ right).\",\"Emergency systems on borders must mirror for redundant safety coverage.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md\"]},{\"id\":\"OB-007\",\"title\":\"Rocket Fuel System Reconfiguration\",\"description\":\"Reconfigure the rocket fuel system by vertically reflecting the layout, then replacing all fuel type 1 with fuel type 2 for launch optimization.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2500,\"requiredRankLevel\":1,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"🪐\"],[\"⬛\",\"👤\",\"⬛\"],[\"🪐\",\"⬛\",\"👽\"]],\"output\":[[\"🪐\",\"⬛\",\"👤\"],[\"⬛\",\"👤\",\"⬛\"],[\"👤\",\"⬛\",\"🪐\"]]},{\"input\":[[\"👽\",\"👽\",\"🌍\"],[\"⬛\",\"⬛\",\"⬛\"],[\"🌍\",\"👽\",\"👽\"]],\"output\":[[\"🌍\",\"👤\",\"👤\"],[\"⬛\",\"⬛\",\"⬛\"],[\"👤\",\"👤\",\"🌍\"]]}],\"testInput\":[[\"👽\",\"🪐\",\"⬛\"],[\"🛸\",\"👽\",\"☄️\"],[\"⬛\",\"🪐\",\"👽\"]],\"testOutput\":[[\"⬛\",\"🪐\",\"👤\"],[\"🛸\",\"👤\",\"☄️\"],[\"👤\",\"🪐\",\"⬛\"]],\"hints\":[\"First, reflect the grid vertically (top ↔ bottom).\",\"Then replace all fuel type 1 with fuel type 2.\",\"The rocket system needs this dual transformation for launch readiness.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md\"]},{\"id\":\"OB-008\",\"title\":\"Orbital Trajectory Calculation\",\"description\":\"Calculate orbital trajectory by rotating the satellite path 90° clockwise, then completing the pattern where missing trajectory points (0s) are filled based on the established sequence.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2500,\"requiredRankLevel\":1,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"🆎\"],[\"🆒\",\"⬛\",\"🈚\"]],\"output\":[[\"🆒\",\"💢\",\"♊\"],[\"💕\",\"💢\",\"💕\"],[\"🈚\",\"🆎\",\"♊\"]]},{\"input\":[[\"💕\",\"⬛\",\"🆎\"],[\"♊\",\"⬛\",\"⬛\"],[\"⬛\",\"💢\",\"🆒\"]],\"output\":[[\"💕\",\"♊\",\"💕\"],[\"💢\",\"♊\",\"💕\"],[\"🆒\",\"💕\",\"🆎\"]]}],\"testInput\":[[\"♊\",\"⬛\",\"💢\"],[\"⬛\",\"💕\",\"⬛\"],[\"🆎\",\"⬛\",\"🆒\"]],\"testOutput\":[[\"🆎\",\"💕\",\"♊\"],[\"💕\",\"💕\",\"💕\"],[\"🆒\",\"💕\",\"💢\"]],\"hints\":[\"First, rotate the grid 90° clockwise: [i][j] becomes [j][n-1-i].\",\"Then fill missing values (0s) by completing the orbital pattern.\",\"Orbital mechanics follows predictable trajectory sequences.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md\"]},{\"id\":\"OB-009\",\"title\":\"Landing Radar Signal Processing\",\"description\":\"Process landing radar signals by horizontally reflecting the pattern, then applying AND logic - only positions where both original and reflected have signals (non-zero) remain active.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":1,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\"],[\"💢\",\"🆎\",\"⬛\"],[\"⬛\",\"🆒\",\"🈚\"]],\"output\":[[\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"🆎\",\"⬛\"],[\"⬛\",\"🆒\",\"⬛\"]]},{\"input\":[[\"💕\",\"💢\",\"💕\"],[\"⬛\",\"♊\",\"⬛\"],[\"🆎\",\"⬛\",\"🆎\"]],\"output\":[[\"💕\",\"💢\",\"💕\"],[\"⬛\",\"♊\",\"⬛\"],[\"🆎\",\"⬛\",\"🆎\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"🆎\"],[\"🆒\",\"⬛\",\"🈚\"]],\"testOutput\":[[\"⬛\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"⬛\"],[\"⬛\",\"⬛\",\"🈚\"]],\"hints\":[\"First, create horizontal reflection: [i][j] becomes [i][n-1-j].\",\"Then apply AND logic: output[i][j] = input[i][j] if both original and reflected positions are non-zero.\",\"Radar needs signal confirmation from both original and mirrored positions.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md\"]},{\"id\":\"OB-010\",\"title\":\"Heat Shield Corner Reinforcement\",\"description\":\"Reinforce heat shield by rotating the pattern 180°, then marking corner positions with reinforcement material (value 9). Critical stress points need extra protection during reentry.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2500,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🛰️\",\"📱\"],[\"⌨️\",\"📶\",\"📋\"],[\"💻\",\"🎚️\",\"⬛\"]],\"output\":[[\"🎧\",\"🎚️\",\"🎧\"],[\"📋\",\"📶\",\"⌨️\"],[\"🎧\",\"🛰️\",\"🎧\"]]},{\"input\":[[\"⬛\",\"📡\",\"⬛\"],[\"🛰️\",\"📱\",\"⌨️\"],[\"⬛\",\"📶\",\"⬛\"]],\"output\":[[\"🎧\",\"📶\",\"🎧\"],[\"⌨️\",\"📱\",\"🛰️\"],[\"🎧\",\"📡\",\"🎧\"]]}],\"testInput\":[[\"🛰️\",\"⬛\",\"⌨️\"],[\"📡\",\"📋\",\"📱\"],[\"🎚️\",\"💻\",\"📶\"]],\"testOutput\":[[\"🎧\",\"💻\",\"🎧\"],[\"📱\",\"📋\",\"📡\"],[\"🎧\",\"⬛\",\"🎧\"]],\"hints\":[\"First, rotate 180°: [i][j] moves to [n-1-i][n-1-j].\",\"Then mark all four corner positions with reinforcement value 9.\",\"Heat shield corners experience maximum thermal stress during reentry.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md\"]},{\"id\":\"OB-011\",\"title\":\"Satellite Imagery Calibration\",\"description\":\"Calibrate satellite imagery by reflecting across the primary diagonal, then incrementing all non-zero values by 2 for sensor adjustment. Enables north-up vs south-up orientation processing.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2500,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🛰️\",\"⬛\"],[\"📱\",\"⌨️\",\"📶\"],[\"⬛\",\"📋\",\"💻\"]],\"output\":[[\"📱\",\"📶\",\"⬛\"],[\"⌨️\",\"📋\",\"🎚️\"],[\"🛰️\",\"💻\",\"🎧\"]]},{\"input\":[[\"⬛\",\"📡\",\"🛰️\"],[\"📱\",\"⬛\",\"⌨️\"],[\"📶\",\"📋\",\"⬛\"]],\"output\":[[\"⬛\",\"📶\",\"💻\"],[\"📱\",\"⬛\",\"🎚️\"],[\"⌨️\",\"📋\",\"⬛\"]]}],\"testInput\":[[\"🛰️\",\"⬛\",\"⌨️\"],[\"📡\",\"📱\",\"⬛\"],[\"⬛\",\"📶\",\"📋\"]],\"testOutput\":[[\"📱\",\"📱\",\"⬛\"],[\"🛰️\",\"📶\",\"💻\"],[\"📋\",\"🛰️\",\"🎚️\"]],\"hints\":[\"First, reflect across primary diagonal: [i][j] becomes [j][i]. This transforms rows into columns.\",\"Then increment all non-zero values by 2, using modulo 10 for overflow (8→0, 9→1).\",\"Satellite imagery systems require diagonal flip for north-up vs south-up orientation processing.\",\"The calibration offset (increment by 2) compensates for sensor drift in different orientations.\",\"This combination tests both spatial transformation recognition and arithmetic sequence patterns.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md. Combined Primary Diagonal Reflection (#6) with Sequence Increment (#14) to create a realistic satellite calibration scenario that tests geometric transformation followed by systematic value adjustment, simulating how real satellite sensors need both orientation correction and calibration offsets.\"]},{\"id\":\"OB-012\",\"title\":\"Thruster Configuration Matrix\",\"description\":\"Configure thruster arrays by reflecting across the secondary diagonal, then applying OR logic with the original pattern. Upper and lower thruster arrangements combine for stability.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"🔋\"],[\"⬛\",\"🔌\",\"⬛\"],[\"⛽\",\"⬛\",\"☢️\"]],\"output\":[[\"☢️\",\"🔌\",\"⛽\"],[\"🔋\",\"🔌\",\"⚡\"],[\"🔋\",\"🔌\",\"☢️\"]]},{\"input\":[[\"⬛\",\"🔋\",\"⬛\"],[\"⚡\",\"⬛\",\"🔌\"],[\"⬛\",\"⛽\",\"⬛\"]],\"output\":[[\"⛽\",\"🔋\",\"⚡\"],[\"🔋\",\"⛽\",\"🔌\"],[\"🔌\",\"⛽\",\"⛽\"]]}],\"testInput\":[[\"🔌\",\"⬛\",\"⚡\"],[\"⬛\",\"🔋\",\"⬛\"],[\"⛽\",\"⬛\",\"⚛️\"]],\"testOutput\":[[\"⚛️\",\"🔋\",\"⛽\"],[\"⚡\",\"🔋\",\"🔌\"],[\"⛽\",\"🔋\",\"⚛️\"]],\"hints\":[\"First, reflect across secondary diagonal (top-right to bottom-left): [i][j] becomes [n-1-j][n-1-i].\",\"Then apply OR operation: output[i][j] = original[i][j] OR reflected[i][j]. Non-zero values from either position remain.\",\"Thruster arrays need redundant signal paths - if either original or mirrored thruster fires, the position stays active.\",\"Secondary diagonal reflection simulates thruster layout symmetry for spacecraft stability control.\",\"OR logic ensures backup systems activate when primary OR secondary thrusters engage.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md. Combined Secondary Diagonal Reflection (#7) with OR Operation (#22) to simulate thruster redundancy systems where symmetric thruster pairs provide backup coverage through logical union operations, testing both geometric mirror recognition and binary logical reasoning.\"]},{\"id\":\"OB-013\",\"title\":\"Airlock Control Panel Recalibration\",\"description\":\"Recalibrate airlock controls by shifting the pattern one position right (with wrap-around), then applying XOR logic with the original pattern. Panel rotates when moving between modules.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🛰️\",\"📱\"],[\"⬛\",\"⌨️\",\"⬛\"],[\"📶\",\"📋\",\"💻\"]],\"output\":[[\"🛰️\",\"📡\",\"🛰️\"],[\"⌨️\",\"⬛\",\"⌨️\"],[\"📡\",\"📱\",\"🛰️\"]]},{\"input\":[[\"🛰️\",\"⬛\",\"⌨️\"],[\"📡\",\"📱\",\"📡\"],[\"⬛\",\"📶\",\"⬛\"]],\"output\":[[\"🛰️\",\"🛰️\",\"🛰️\"],[\"🛰️\",\"🛰️\",\"🛰️\"],[\"📶\",\"📶\",\"📶\"]]}],\"testInput\":[[\"📱\",\"📡\",\"⬛\"],[\"🛰️\",\"⬛\",\"⌨️\"],[\"⬛\",\"📋\",\"📶\"]],\"testOutput\":[[\"🛰️\",\"🛰️\",\"📱\"],[\"🛰️\",\"🛰️\",\"🛰️\"],[\"📡\",\"📡\",\"📶\"]],\"hints\":[\"First, shift each row one position right with wrap-around.\",\"Then apply XOR: output[i][j] = original[i][j] XOR shifted[i][j].\",\"Airlock systems need exclusive operation logic for safety protocols.\",\"Created by: Cascade with Claude 4 Sonnet Thinking based on types.md\"]},{\"id\":\"OB-014\",\"title\":\"Module Docking Matrix Optimization\",\"description\":\"Optimize docking matrix through 270-degree rotation and pattern overlay. Critical module attachment requires both spatial reorientation and signal combination for secure mechanical and electrical connection.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"👤\"],[\"🪐\",\"🌍\",\"⬛\"],[\"⬛\",\"🛸\",\"☄️\"]],\"output\":[[\"👤\",\"🌍\",\"☄️\"],[\"⬛\",\"🌍\",\"🛸\"],[\"👽\",\"🪐\",\"🌍\"]]},{\"input\":[[\"⬛\",\"👽\",\"⬛\"],[\"👤\",\"⬛\",\"🪐\"],[\"🌍\",\"⬛\",\"🛸\"]],\"output\":[[\"⬛\",\"👤\",\"🛸\"],[\"👽\",\"👤\",\"🪐\"],[\"🌍\",\"👤\",\"🪐\"]]}],\"testInput\":[[\"👽\",\"👤\",\"⬛\"],[\"⬛\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"☄️\"]],\"testOutput\":[[\"⬛\",\"🪐\",\"☄️\"],[\"👤\",\"🪐\",\"🌍\"],[\"👽\",\"🪐\",\"🌍\"]],\"hints\":[\"Space Force Protocol: Module docking optimization requires counter-clockwise rotation and signal overlay to establish secure mechanical and electrical connections.\",\"Phase 1 - Matrix Reorientation: Apply 270-degree clockwise rotation (equivalent to 90-degree counter-clockwise) to align docking interfaces. Element at (row,col) moves to (gridSize-1-col, row).\",\"Phase 2 - Signal Overlay: Perform OR operation between the rotated matrix and the original matrix to combine all active connection points and signal pathways.\",\"Technical Implementation: First rotate 270° clockwise, then apply element-wise OR operation between original and rotated grids to merge connection patterns.\",\"Validation Check: Verify the grid shows counter-clockwise rotation and all connection points from both original and rotated configurations are preserved (OR logic).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines 270° Clockwise Rotation with OR Operation to simulate module docking requiring both spatial alignment and connection pathway integration protocols.\"]},{\"id\":\"OB-015\",\"title\":\"Asteroid Defense Array Reconfiguration\",\"description\":\"Configure asteroid defense through horizontal translation and border extraction. Critical defense systems require both positional shift and perimeter identification for optimal asteroid interception trajectory.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"💕\",\"⬛\",\"💢\"],[\"⬛\",\"🆎\",\"🆒\",\"⬛\"],[\"🈚\",\"⬛\",\"🛃\",\"💠\"],[\"⬛\",\"☣\",\"⬛\",\"♊\"]],\"output\":[[\"☣\",\"☣\",\"☣\",\"☣\"],[\"☣\",\"💕\",\"🆎\",\"☣\"],[\"☣\",\"🆒\",\"🈚\",\"☣\"],[\"☣\",\"☣\",\"☣\",\"☣\"]]},{\"input\":[[\"⬛\",\"♊\",\"💕\",\"⬛\"],[\"💢\",\"⬛\",\"⬛\",\"🆎\"],[\"⬛\",\"🆒\",\"🈚\",\"⬛\"],[\"🛃\",\"⬛\",\"⬛\",\"💠\"]],\"output\":[[\"☣\",\"☣\",\"☣\",\"☣\"],[\"☣\",\"♊\",\"💕\",\"☣\"],[\"☣\",\"💢\",\"⬛\",\"☣\"],[\"☣\",\"☣\",\"☣\",\"☣\"]]}],\"testInput\":[[\"♊\",\"⬛\",\"💕\",\"💢\"],[\"⬛\",\"🆎\",\"⬛\",\"🆒\"],[\"🈚\",\"⬛\",\"🛃\",\"⬛\"],[\"💠\",\"☣\",\"⬛\",\"♊\"]],\"testOutput\":[[\"☣\",\"☣\",\"☣\",\"☣\"],[\"☣\",\"⬛\",\"♊\",\"☣\"],[\"☣\",\"🆎\",\"⬛\",\"☣\"],[\"☣\",\"☣\",\"☣\",\"☣\"]],\"hints\":[\"Space Force Protocol: Asteroid defense array requires horizontal translation and perimeter marking to establish optimal interception coordinates.\",\"Phase 1 - Array Translation: Apply horizontal shift by moving each element one position right, with rightmost elements wrapping to the left side of the grid.\",\"Phase 2 - Border Identification: Mark all border positions (edges and corners) with value 9 to indicate critical defense perimeter zones for asteroid tracking.\",\"Technical Implementation: First shift all elements right by one position (with wraparound), then replace all border elements with 9 for perimeter marking.\",\"Validation Check: Verify elements have shifted horizontally and all edge positions show defense perimeter marking (value 9) for asteroid interception coverage.\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Translation/Shift with Border Extraction to simulate asteroid defense requiring both positional adjustment and perimeter identification protocols.\"]},{\"id\":\"OB-016\",\"title\":\"Navigation Compass Recalibration\",\"description\":\"Recalibrate navigation compass through vertical translation and duplicate masking. Advanced navigation requires both directional shift and interference elimination for accurate stellar positioning.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"👤\",\"🪐\"],[\"⬛\",\"🌍\",\"⬛\"],[\"🛸\",\"☄️\",\"♥️\"]],\"output\":[[\"⬛\",\"🌍\",\"⬛\"],[\"🛸\",\"☄️\",\"♥️\"],[\"⬛\",\"👤\",\"🪐\"]]},{\"input\":[[\"⬛\",\"👽\",\"⬛\"],[\"👤\",\"🪐\",\"🌍\"],[\"⬛\",\"🛸\",\"⬛\"]],\"output\":[[\"👤\",\"🪐\",\"🌍\"],[\"⬛\",\"🛸\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"👽\",\"⬛\",\"👤\"],[\"🪐\",\"🌍\",\"🛸\"],[\"⬛\",\"☄️\",\"⬛\"]],\"testOutput\":[[\"🪐\",\"🌍\",\"🛸\"],[\"⬛\",\"☄️\",\"⬛\"],[\"⬛\",\"⬛\",\"👤\"]],\"hints\":[\"Space Force Protocol: Navigation compass recalibration requires vertical translation and duplicate elimination to establish accurate stellar positioning references.\",\"Phase 1 - Directional Shift: Apply vertical translation by moving each row one position down, with the bottom row wrapping to the top of the grid.\",\"Phase 2 - Interference Elimination: Apply NOT operation to eliminate duplicate signals - any position appearing in both original and shifted grids becomes 0 (interference canceled).\",\"Technical Implementation: First shift all rows down by one position (with wraparound), then perform element-wise NOT operation to cancel matching positions.\",\"Validation Check: Verify rows have shifted vertically and positions with duplicate readings show interference cancellation (value 0) for clean navigation signals.\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Translation/Shift with NOT Operation to simulate navigation compass recalibration requiring both positional adjustment and signal interference elimination protocols.\"]},{\"id\":\"OB-017\",\"title\":\"Asteroid Mineral Survey Analysis\",\"description\":\"Analyze asteroid mineral composition through secondary diagonal reflection and exclusive pattern identification. Advanced geological survey requires both structural transformation and exclusive mineral detection for accurate resource assessment.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\",\"💢\"],[\"⬛\",\"🆎\",\"⬛\",\"🆒\"],[\"🈚\",\"⬛\",\"🛃\",\"⬛\"],[\"💠\",\"☣\",\"⬛\",\"♊\"]],\"output\":[[\"💠\",\"🈚\",\"⬛\",\"♊\"],[\"☣\",\"⬛\",\"🆎\",\"⬛\"],[\"⬛\",\"🛃\",\"⬛\",\"💕\"],[\"💠\",\"⬛\",\"🆒\",\"💢\"]]},{\"input\":[[\"⬛\",\"♊\",\"💕\",\"⬛\"],[\"💢\",\"⬛\",\"⬛\",\"🆎\"],[\"⬛\",\"🆒\",\"🈚\",\"⬛\"],[\"🛃\",\"⬛\",\"⬛\",\"💠\"]],\"output\":[[\"🛃\",\"⬛\",\"💢\",\"⬛\"],[\"⬛\",\"🆒\",\"⬛\",\"♊\"],[\"⬛\",\"🈚\",\"⬛\",\"💕\"],[\"🛃\",\"⬛\",\"🆎\",\"⬛\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\",\"💢\"],[\"⬛\",\"🆎\",\"🆒\",\"⬛\"],[\"🈚\",\"⬛\",\"🛃\",\"💠\"],[\"⬛\",\"☣\",\"⬛\",\"♊\"]],\"testOutput\":[[\"⬛\",\"🈚\",\"⬛\",\"♊\"],[\"☣\",\"⬛\",\"🆎\",\"💕\"],[\"⬛\",\"🛃\",\"🆒\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"💢\"]],\"hints\":[\"Space Force Protocol: Asteroid mineral survey requires secondary diagonal transformation and exclusive pattern identification to isolate unique geological formations.\",\"Phase 1 - Geological Reorientation: Apply secondary diagonal reflection to transform the mineral matrix. Element at position (row,col) moves to position (gridSize-1-col, gridSize-1-row).\",\"Phase 2 - Exclusive Detection: Perform XOR operation between the reflected matrix and the original matrix to identify exclusive mineral deposits present in only one configuration.\",\"Technical Implementation: First reflect along secondary diagonal (anti-diagonal), then apply element-wise XOR operation between original and reflected grids.\",\"Validation Check: Verify the grid shows secondary diagonal transformation and only positions with exclusive readings (present in one grid but not both) remain illuminated.\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Secondary Diagonal Reflection with XOR Operation to simulate asteroid mineral survey requiring both geological reorientation and exclusive mineral detection protocols.\"]},{\"id\":\"OB-018\",\"title\":\"Cargo Bay Environmental Control\",\"description\":\"Control cargo bay environment through 180-degree rotation and sequence progression. Critical cargo storage requires both spatial reorientation and temporal tracking for optimal preservation conditions.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"👤\"],[\"🪐\",\"🌍\",\"⬛\"],[\"⬛\",\"🛸\",\"☄️\"]],\"output\":[[\"♥️\",\"☄️\",\"👽\"],[\"👽\",\"🛸\",\"🌍\"],[\"🪐\",\"👽\",\"👤\"]]},{\"input\":[[\"⬛\",\"👽\",\"⬛\"],[\"👤\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"☄️\"]],\"output\":[[\"♥️\",\"👽\",\"☄️\"],[\"🛸\",\"🌍\",\"🪐\"],[\"👽\",\"👤\",\"👽\"]]}],\"testInput\":[[\"👽\",\"👤\",\"⬛\"],[\"⬛\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"☄️\"]],\"testOutput\":[[\"♥️\",\"👽\",\"☄️\"],[\"👽\",\"🌍\",\"🌍\"],[\"👽\",\"🪐\",\"👤\"]],\"hints\":[\"Space Force Protocol: Cargo bay environmental control requires 180-degree rotation and temporal sequence advancement to maintain optimal preservation conditions.\",\"Phase 1 - Spatial Reorientation: Apply 180-degree rotation to flip the environmental control matrix. Element at position (row,col) moves to position (gridSize-1-row, gridSize-1-col).\",\"Phase 2 - Temporal Progression: Increment all non-zero values by 1 to represent temporal advancement of environmental cycles, with 0 values remaining unchanged.\",\"Technical Implementation: First rotate 180 degrees (flip both horizontally and vertically), then increment all non-zero values by 1 for temporal tracking.\",\"Validation Check: Verify the grid has been rotated 180 degrees and all active environmental systems (non-zero values) show temporal progression (incremented by 1).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines 180° Rotation with Sequence Increment to simulate cargo bay environmental control requiring both spatial reorientation and temporal advancement protocols.\"]},{\"id\":\"OB-019\",\"title\":\"Emergency Signal Matrix Harmonization\",\"description\":\"Harmonize emergency signals through primary diagonal reflection and exclusive interference detection. Critical emergency systems require both structural transformation and interference elimination for reliable distress transmission.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\"],[\"💢\",\"🆎\",\"⬛\"],[\"⬛\",\"🆒\",\"🈚\"]],\"output\":[[\"💕\",\"💢\",\"♊\"],[\"♊\",\"⬛\",\"🆒\"],[\"⬛\",\"♊\",\"⬛\"]]},{\"input\":[[\"⬛\",\"♊\",\"⬛\"],[\"💕\",\"⬛\",\"💢\"],[\"🆎\",\"⬛\",\"🆒\"]],\"output\":[[\"🆎\",\"💕\",\"⬛\"],[\"♊\",\"💕\",\"♊\"],[\"🆒\",\"💢\",\"⬛\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"🆎\"],[\"🆒\",\"⬛\",\"🈚\"]],\"testOutput\":[[\"🆒\",\"⬛\",\"♊\"],[\"💕\",\"♊\",\"⬛\"],[\"🈚\",\"🆎\",\"⬛\"]],\"hints\":[\"Space Force Protocol: Emergency signal harmonization requires diagonal transformation and interference detection to ensure reliable distress transmission coverage.\",\"Phase 1 - Signal Reorientation: Apply primary diagonal reflection to transpose the emergency signal matrix. Element at position (row,col) moves to position (col,row).\",\"Phase 2 - Interference Detection: Perform XOR operation between the reflected matrix and the original matrix to identify exclusive signal patterns and eliminate overlapping interference.\",\"Technical Implementation: First transpose along primary diagonal (swap rows/columns), then apply element-wise XOR operation between original and reflected grids.\",\"Validation Check: Verify the grid has been transposed and only positions with exclusive signals (present in one grid but not both) remain active for clear transmission.\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Primary Diagonal Reflection with XOR Operation to simulate emergency signal harmonization requiring both structural reorientation and interference elimination protocols.\"]},{\"id\":\"OB-020\",\"title\":\"Gyroscopic Stabilizer Pattern Synthesis\",\"description\":\"Synthesize stabilizer patterns through horizontal translation and logical fusion. Advanced gyroscopic systems require both positional shift and signal integration for optimal spacecraft stability control.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"👤\"],[\"🪐\",\"🌍\",\"⬛\"],[\"⬛\",\"🛸\",\"☄️\"]],\"output\":[[\"👤\",\"👽\",\"👤\"],[\"🌍\",\"♥️\",\"🪐\"],[\"☄️\",\"🛸\",\"☄️\"]]},{\"input\":[[\"⬛\",\"👽\",\"⬛\"],[\"👤\",\"⬛\",\"🪐\"],[\"🌍\",\"⬛\",\"🛸\"]],\"output\":[[\"👽\",\"👽\",\"👽\"],[\"🪐\",\"👤\",\"🪐\"],[\"🛸\",\"🌍\",\"🛸\"]]}],\"testInput\":[[\"👽\",\"👤\",\"⬛\"],[\"⬛\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"☄️\"]],\"testOutput\":[[\"👤\",\"🪐\",\"👽\"],[\"🌍\",\"🪐\",\"🌍\"],[\"☄️\",\"🛸\",\"☄️\"]],\"hints\":[\"Space Force Protocol: Gyroscopic stabilizer synthesis requires horizontal translation and logical fusion to establish optimal spacecraft stability patterns.\",\"Phase 1 - Pattern Translation: Apply horizontal shift by moving each element one position right, with rightmost elements wrapping to the left side of the grid.\",\"Phase 2 - Signal Fusion: Perform OR operation between the shifted matrix and the original matrix to combine all stabilization signals and create comprehensive control patterns.\",\"Technical Implementation: First shift all elements right by one position (with wraparound), then apply element-wise OR operation between original and shifted grids.\",\"Validation Check: Verify elements have shifted horizontally and all stabilization points from both configurations are preserved through signal fusion (OR logic).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Translation/Shift with OR Operation to simulate gyroscopic stabilizer pattern synthesis requiring both positional adjustment and signal integration protocols.\"]},{\"id\":\"OB-021\",\"title\":\"Star Tracker Navigation Matrix\",\"description\":\"Navigate star tracker matrix through vertical translation and pattern completion. Advanced stellar navigation requires both positional shift and systematic gap filling for accurate celestial positioning.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\"],[\"💢\",\"🆎\",\"⬛\"],[\"⬛\",\"🆒\",\"🈚\"]],\"output\":[[\"💢\",\"🆎\",\"🛃\"],[\"🛃\",\"🆒\",\"🈚\"],[\"♊\",\"🛃\",\"💕\"]]},{\"input\":[[\"⬛\",\"♊\",\"⬛\"],[\"💕\",\"⬛\",\"💢\"],[\"🆎\",\"⬛\",\"🆒\"]],\"output\":[[\"💕\",\"🛃\",\"💢\"],[\"🆎\",\"🛃\",\"🆒\"],[\"🛃\",\"♊\",\"🛃\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"🆎\"],[\"🆒\",\"⬛\",\"🈚\"]],\"testOutput\":[[\"🛃\",\"💢\",\"🆎\"],[\"🆒\",\"🛃\",\"🈚\"],[\"♊\",\"💕\",\"🛃\"]],\"hints\":[\"Space Force Protocol: Star tracker navigation requires vertical translation and pattern completion to establish accurate celestial positioning references.\",\"Phase 1 - Matrix Translation: Apply vertical shift by moving each row one position down, with the bottom row wrapping to the top of the grid.\",\"Phase 2 - Navigation Completion: Fill all empty spaces (value 0) with value 7 to represent completed stellar reference points and navigation markers.\",\"Technical Implementation: First shift all rows down by one position (with wraparound), then replace all 0 values with 7 for complete navigation coverage.\",\"Validation Check: Verify rows have shifted vertically and no empty spaces remain - all positions must show active stellar references (no zeros).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Translation/Shift with Pattern Completion to simulate star tracker navigation requiring both positional adjustment and systematic reference completion protocols.\"]},{\"id\":\"OB-022\",\"title\":\"Robotic Arm Coordination Matrix\",\"description\":\"Coordinate robotic arm systems through vertical reflection and logical masking. Advanced robotic control requires both spatial transformation and signal interference elimination for precise mechanical operation.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"👤\"],[\"🪐\",\"🌍\",\"⬛\"],[\"⬛\",\"🛸\",\"☄️\"]],\"output\":[[\"⬛\",\"🛸\",\"☄️\"],[\"🪐\",\"⬛\",\"⬛\"],[\"👽\",\"⬛\",\"👤\"]]},{\"input\":[[\"⬛\",\"👽\",\"⬛\"],[\"👤\",\"⬛\",\"🪐\"],[\"🌍\",\"⬛\",\"🛸\"]],\"output\":[[\"🌍\",\"⬛\",\"🛸\"],[\"👤\",\"⬛\",\"🪐\"],[\"⬛\",\"👽\",\"⬛\"]]}],\"testInput\":[[\"👽\",\"👤\",\"⬛\"],[\"⬛\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"☄️\"]],\"testOutput\":[[\"🛸\",\"⬛\",\"☄️\"],[\"⬛\",\"🪐\",\"🌍\"],[\"👽\",\"👤\",\"⬛\"]],\"hints\":[\"Space Force Protocol: Robotic arm coordination requires vertical reflection and logical masking to eliminate interference and establish precise mechanical control patterns.\",\"Phase 1 - Spatial Transformation: Apply vertical reflection by flipping the robotic control matrix top-to-bottom. The first row becomes the last row, middle row stays in place.\",\"Phase 2 - Interference Masking: Apply AND operation with the original grid to filter control signals. Only positions where both original and reflected grids have non-zero values remain active.\",\"Technical Implementation: First reflect vertically (swap rows), then perform element-wise AND operation between original and reflected grids to eliminate interference.\",\"Validation Check: Verify the grid orientation is inverted vertically and only positions with dual-active signals (non-zero in both grids) remain operational for precise control.\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Vertical Reflection with AND Operation to simulate robotic arm coordination requiring both spatial reorientation and interference elimination protocols.\"]},{\"id\":\"OB-023\",\"title\":\"Communication Array Signal Processing\",\"description\":\"Process communication array signals through corner marking and sequence progression. Advanced communication systems require both structural marking and temporal advancement for optimal signal transmission protocols.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\"],[\"💢\",\"🆎\",\"⬛\"],[\"⬛\",\"🆒\",\"🈚\"]],\"output\":[[\"☣\",\"♊\",\"☣\"],[\"🆎\",\"🆒\",\"♊\"],[\"☣\",\"🈚\",\"☣\"]]},{\"input\":[[\"⬛\",\"♊\",\"⬛\"],[\"💕\",\"⬛\",\"💢\"],[\"🆎\",\"⬛\",\"🆒\"]],\"output\":[[\"☣\",\"💕\",\"☣\"],[\"💢\",\"♊\",\"🆎\"],[\"☣\",\"♊\",\"☣\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"🆎\"],[\"🆒\",\"⬛\",\"🈚\"]],\"testOutput\":[[\"☣\",\"💢\",\"☣\"],[\"♊\",\"🆎\",\"🆒\"],[\"☣\",\"♊\",\"☣\"]],\"hints\":[\"Space Force Protocol: Communication array signal processing requires corner marking and temporal sequence advancement for optimal transmission coverage.\",\"Phase 1 - Corner Marking: Mark all corner positions (four corners of the grid) with value 9 to indicate primary transmission nodes and signal amplification points.\",\"Phase 2 - Sequence Progression: Increment all non-zero values by 1 to represent temporal advancement of communication cycles, with 0 values remaining unchanged.\",\"Technical Implementation: First mark corners with 9, then increment all non-zero values by 1 for temporal progression of signal transmission cycles.\",\"Validation Check: Verify all corner positions show transmission nodes (value 9) and all active communication systems show temporal progression (incremented by 1).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Corner Marking with Sequence Increment to simulate communication array signal processing requiring both structural node identification and temporal advancement protocols.\"]},{\"id\":\"OB-024\",\"title\":\"Landing Pad Approach Vector Matrix\",\"description\":\"Configure landing pad approach vectors through secondary diagonal reflection and value substitution. Advanced landing systems require both spatial transformation and component replacement for optimal approach trajectory calculation.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"👤\",\"🪐\"],[\"⬛\",\"🌍\",\"⬛\",\"🛸\"],[\"☄️\",\"⬛\",\"♥️\",\"⬛\"],[\"⚠️\",\"🛰\",\"⬛\",\"👽\"]],\"output\":[[\"👽\",\"♥️\",\"🌍\",\"👽\"],[\"♥️\",\"♥️\",\"♥️\",\"👤\"],[\"🛸\",\"♥️\",\"♥️\",\"♥️\"],[\"🪐\",\"♥️\",\"🛰\",\"⚠️\"]]},{\"input\":[[\"⬛\",\"👽\",\"👤\",\"⬛\"],[\"🪐\",\"⬛\",\"⬛\",\"🌍\"],[\"⬛\",\"🛸\",\"☄️\",\"⬛\"],[\"♥️\",\"⬛\",\"⬛\",\"⚠️\"]],\"output\":[[\"⚠️\",\"♥️\",\"🪐\",\"♥️\"],[\"♥️\",\"☄️\",\"🛸\",\"👽\"],[\"🌍\",\"♥️\",\"♥️\",\"👤\"],[\"♥️\",\"♥️\",\"♥️\",\"♥️\"]]}],\"testInput\":[[\"👽\",\"👤\",\"⬛\",\"🪐\"],[\"⬛\",\"🌍\",\"🛸\",\"⬛\"],[\"☄️\",\"⬛\",\"♥️\",\"⚠️\"],[\"⬛\",\"🛰\",\"⬛\",\"👽\"]],\"testOutput\":[[\"👽\",\"♥️\",\"🌍\",\"👽\"],[\"🛰\",\"♥️\",\"♥️\",\"👤\"],[\"⚠️\",\"🛸\",\"♥️\",\"♥️\"],[\"🪐\",\"♥️\",\"🛰\",\"♥️\"]],\"hints\":[\"Space Force Protocol: Landing pad approach vector configuration requires secondary diagonal transformation and component replacement for optimal trajectory calculation.\",\"Phase 1 - Vector Reorientation: Apply secondary diagonal reflection to transform the approach matrix. Element at position (row,col) moves to position (gridSize-1-col, gridSize-1-row).\",\"Phase 2 - Component Replacement: Replace all inactive approach vectors (value 0) with value 7 to represent active guidance beacons and trajectory markers.\",\"Technical Implementation: First reflect along secondary diagonal (anti-diagonal), then replace all 0 values with 7 for complete approach guidance coverage.\",\"Validation Check: Verify the grid has been transformed along the secondary diagonal and all positions show active guidance systems (no zeros remain).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Secondary Diagonal Reflection with Value Replacement to simulate landing pad approach vector configuration requiring both geometric transformation and guidance system activation protocols.\"]},{\"id\":\"OB-025\",\"title\":\"Fuel System Optimization Matrix\",\"description\":\"Optimize fuel systems through horizontal reflection and interference elimination. Advanced fuel management requires both spatial transformation and signal conflict resolution for optimal propulsion efficiency.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\"],[\"💢\",\"🆎\",\"⬛\"],[\"⬛\",\"🆒\",\"🈚\"]],\"output\":[[\"⬛\",\"⬛\",\"♊\"],[\"💢\",\"⬛\",\"💢\"],[\"🈚\",\"🆒\",\"⬛\"]]},{\"input\":[[\"⬛\",\"♊\",\"⬛\"],[\"💕\",\"⬛\",\"💢\"],[\"🆎\",\"⬛\",\"🆒\"]],\"output\":[[\"⬛\",\"♊\",\"⬛\"],[\"💢\",\"⬛\",\"💕\"],[\"🆒\",\"⬛\",\"🆎\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\"],[\"⬛\",\"💢\",\"🆎\"],[\"🆒\",\"⬛\",\"🈚\"]],\"testOutput\":[[\"⬛\",\"💕\",\"♊\"],[\"🆎\",\"💢\",\"⬛\"],[\"🈚\",\"⬛\",\"🆒\"]],\"hints\":[\"Space Force Protocol: Fuel system optimization requires horizontal reflection and interference elimination to resolve propulsion conflicts and establish efficient fuel flow patterns.\",\"Phase 1 - Flow Reorientation: Apply horizontal reflection to flip the fuel flow matrix left-to-right. Each row's elements reverse order while maintaining vertical structure.\",\"Phase 2 - Interference Elimination: Apply NOT operation to eliminate conflicting signals - any position appearing in both original and reflected grids becomes 0 (interference canceled).\",\"Technical Implementation: First reflect horizontally (swap columns), then perform element-wise NOT operation to cancel matching positions between original and reflected grids.\",\"Validation Check: Verify the grid orientation has been mirrored horizontally and positions with duplicate readings show interference cancellation (value 0) for clean fuel flow.\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines Horizontal Reflection with NOT Operation to simulate fuel system optimization requiring both spatial reorientation and signal interference elimination protocols.\"]},{\"id\":\"OB-026\",\"title\":\"Beacon Signal Synchronization Protocol\",\"description\":\"Synchronize beacon signals through 90-degree rotation and pattern completion. Emergency beacon systems require both spatial reorientation and signal gap filling for optimal distress transmission coverage.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"alien_language\",\"examples\":[{\"input\":[[\"👽\",\"⬛\",\"👤\"],[\"🪐\",\"🌍\",\"⬛\"],[\"⬛\",\"🛸\",\"☄️\"]],\"output\":[[\"♥️\",\"🪐\",\"👽\"],[\"🛸\",\"🌍\",\"♥️\"],[\"☄️\",\"♥️\",\"👤\"]]},{\"input\":[[\"⬛\",\"👽\",\"⬛\"],[\"👤\",\"⬛\",\"🪐\"],[\"🌍\",\"⬛\",\"🛸\"]],\"output\":[[\"🌍\",\"👤\",\"♥️\"],[\"♥️\",\"♥️\",\"👽\"],[\"🛸\",\"🪐\",\"♥️\"]]}],\"testInput\":[[\"👽\",\"👤\",\"⬛\"],[\"⬛\",\"🪐\",\"🌍\"],[\"🛸\",\"⬛\",\"☄️\"]],\"testOutput\":[[\"🛸\",\"♥️\",\"👽\"],[\"♥️\",\"🪐\",\"👤\"],[\"☄️\",\"🌍\",\"♥️\"]],\"hints\":[\"Space Force Protocol: Beacon signal synchronization requires 90-degree rotation and pattern completion to establish comprehensive emergency transmission coverage.\",\"Phase 1 - Signal Reorientation: Apply 90-degree clockwise rotation to reorient the beacon signal matrix. Each element moves: (row,col) → (col, gridSize-1-row).\",\"Phase 2 - Signal Completion: Fill all empty spaces (value 0) with value 7 to represent completed beacon transmission nodes and emergency signal amplifiers.\",\"Technical Implementation: First rotate the grid 90° clockwise, then replace all 0 values with 7 for complete beacon coverage and signal transmission.\",\"Validation Check: Verify the grid orientation has changed 90° and no empty spaces remain - all positions must show active beacon signals (no zeros).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines 90° Clockwise Rotation with Pattern Completion to simulate beacon signal synchronization requiring both spatial reorientation and systematic signal completion protocols.\"]},{\"id\":\"OB-027\",\"title\":\"Orbital Trajectory Correction Matrix\",\"description\":\"Correct orbital trajectories through 270-degree rotation and signal fusion. Advanced orbital mechanics require both spatial reorientation and signal combination for optimal trajectory adjustment protocols.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":2,\"emojiSet\":\"vague_symbols\",\"examples\":[{\"input\":[[\"♊\",\"⬛\",\"💕\",\"💢\"],[\"⬛\",\"🆎\",\"⬛\",\"🆒\"],[\"🈚\",\"⬛\",\"🛃\",\"⬛\"],[\"💠\",\"☣\",\"⬛\",\"♊\"]],\"output\":[[\"☣\",\"♊\",\"🆎\",\"♊\"],[\"⬛\",\"⬛\",\"⬛\",\"💕\"],[\"♊\",\"🛃\",\"🆎\",\"💢\"],[\"💠\",\"⬛\",\"🆒\",\"♊\"]]},{\"input\":[[\"⬛\",\"♊\",\"💕\",\"⬛\"],[\"💢\",\"⬛\",\"⬛\",\"🆎\"],[\"⬛\",\"🆒\",\"🈚\",\"⬛\"],[\"🛃\",\"⬛\",\"⬛\",\"💠\"]],\"output\":[[\"💠\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"🈚\",\"⬛\",\"♊\"],[\"⬛\",\"🆒\",\"⬛\",\"💕\"],[\"🛃\",\"🆎\",\"💢\",\"⬛\"]]}],\"testInput\":[[\"♊\",\"💕\",\"⬛\",\"💢\"],[\"⬛\",\"🆎\",\"🆒\",\"⬛\"],[\"🈚\",\"⬛\",\"🛃\",\"💠\"],[\"⬛\",\"☣\",\"⬛\",\"♊\"]],\"testOutput\":[[\"♊\",\"💠\",\"🆎\",\"♊\"],[\"⬛\",\"🛃\",\"⬛\",\"💕\"],[\"⬛\",\"🆒\",\"🆎\",\"⬛\"],[\"⬛\",\"⬛\",\"☣\",\"💢\"]],\"hints\":[\"Space Force Protocol: Orbital trajectory correction requires 270-degree rotation and signal fusion to establish optimal trajectory adjustment patterns.\",\"Phase 1 - Trajectory Reorientation: Apply 270-degree clockwise rotation to reorient the orbital correction matrix. Element at (row,col) moves to (gridSize-1-col, row).\",\"Phase 2 - Signal Fusion: Perform OR operation between the rotated matrix and the original matrix to combine all trajectory correction signals and create comprehensive adjustment patterns.\",\"Technical Implementation: First rotate 270° clockwise, then apply element-wise OR operation between original and rotated grids to merge trajectory correction data.\",\"Validation Check: Verify the grid shows counter-clockwise rotation and all trajectory points from both configurations are preserved through signal fusion (OR logic).\",\"Created by: Cascade with Claude 4 Sonnet Thinking. Design rationale: Combines 270° Clockwise Rotation with OR Operation to simulate orbital trajectory correction requiring both spatial reorientation and signal integration protocols.\"]},{\"id\":\"OB-028\",\"title\":\"Temperature Cycles\",\"description\":\"Complete the pattern for heating and cooling cycles during orbit day and night.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"❌\",\"⚠️\"],[\"🚨\",\"🦺\",\"⬛\"],[\"❄️\",\"📍\",\"🎯\"]],\"output\":[[\"✅\",\"❌\",\"⚠️\"],[\"🚨\",\"🦺\",\"🔥\"],[\"❄️\",\"📍\",\"🎯\"]]},{\"input\":[[\"❌\",\"🚨\",\"🔥\"],[\"📍\",\"⬛\",\"❌\"],[\"🚨\",\"🔥\",\"📍\"]],\"output\":[[\"❌\",\"🚨\",\"🔥\"],[\"📍\",\"⬛\",\"❌\"],[\"🚨\",\"🔥\",\"📍\"]]},{\"input\":[[\"🎯\",\"❄️\",\"🦺\"],[\"⚠️\",\"✅\",\"⬛\"],[\"❄️\",\"🦺\",\"⚠️\"]],\"output\":[[\"🎯\",\"❄️\",\"🦺\"],[\"⚠️\",\"✅\",\"🎯\"],[\"❄️\",\"🦺\",\"⚠️\"]]}],\"testInput\":[[\"⚠️\",\"🦺\",\"❄️\"],[\"🎯\",\"✅\",\"⬛\"],[\"⚠️\",\"🦺\",\"❄️\"]],\"testOutput\":[[\"⚠️\",\"🦺\",\"❄️\"],[\"🎯\",\"✅\",\"⚠️\"],[\"⚠️\",\"🦺\",\"❄️\"]],\"hints\":[\"Look for patterns that repeat across rows.\",\"The missing value completes a numerical sequence.\"]},{\"id\":\"OB-029\",\"title\":\"Solar Panel Efficiency\",\"description\":\"Complete the pattern to predict power output variations in solar panels throughout the mission day.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🪐\",\"🌠\",\"💫\",\"⬛\"],[\"✨\",\"🌟\",\"⭐\",\"🌏\"],[\"🌎\",\"🌍\",\"⬛\",\"🪐\"],[\"🌠\",\"💫\",\"✨\",\"🌟\"]],\"output\":[[\"🪐\",\"🌠\",\"💫\",\"✨\"],[\"✨\",\"🌟\",\"⭐\",\"🌏\"],[\"🌎\",\"🌍\",\"⬛\",\"🪐\"],[\"🌠\",\"💫\",\"✨\",\"🌟\"]]},{\"input\":[[\"🌍\",\"🌎\",\"🌏\",\"⬛\"],[\"🌟\",\"✨\",\"💫\",\"🌠\"],[\"🪐\",\"⬛\",\"🌍\",\"🌎\"],[\"🌏\",\"⭐\",\"🌟\",\"✨\"]],\"output\":[[\"🌍\",\"🌎\",\"🌏\",\"⭐\"],[\"🌟\",\"✨\",\"💫\",\"🌠\"],[\"🪐\",\"⬛\",\"🌍\",\"🌎\"],[\"🌏\",\"⭐\",\"🌟\",\"✨\"]]},{\"input\":[[\"🌎\",\"⭐\",\"✨\",\"⬛\"],[\"🌍\",\"🌏\",\"🌟\",\"💫\"],[\"🌠\",\"⬛\",\"🌎\",\"⭐\"],[\"✨\",\"🌠\",\"⬛\",\"🌎\"]],\"output\":[[\"🌎\",\"⭐\",\"✨\",\"🌠\"],[\"🌍\",\"🌏\",\"🌟\",\"💫\"],[\"🌠\",\"⬛\",\"🌎\",\"⭐\"],[\"✨\",\"🌠\",\"⬛\",\"🌎\"]]}],\"testInput\":[[\"🌏\",\"✨\",\"🪐\",\"⬛\"],[\"🌎\",\"🌟\",\"🌠\",\"🌍\"],[\"⭐\",\"💫\",\"⬛\",\"🌏\"],[\"✨\",\"🪐\",\"🌎\",\"🌟\"]],\"testOutput\":[[\"🌏\",\"✨\",\"🪐\",\"🌎\"],[\"🌎\",\"🌟\",\"🌠\",\"🌍\"],[\"⭐\",\"💫\",\"⬛\",\"🌏\"],[\"✨\",\"🪐\",\"🌎\",\"🌟\"]],\"hints\":[\"Look for patterns within each row.\",\"The missing value follows the sequence in its row.\"]},{\"id\":\"OB-030\",\"title\":\"Navigation Beacon Patterns\",\"description\":\"Identify the pattern in navigation beacon signals and complete the missing signal.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"🔋\",\"🔌\"],[\"⛽\",\"☢️\",\"⚛️\"],[\"🔗\",\"⚙️\",\"⬛\"]],\"output\":[[\"⚡\",\"🔋\",\"🔌\"],[\"⛽\",\"☢️\",\"⚛️\"],[\"🔗\",\"⚙️\",\"🔧\"]]},{\"input\":[[\"🔋\",\"⛽\",\"⚛️\"],[\"⚙️\",\"⬛\",\"🔋\"],[\"⛽\",\"⚛️\",\"⚙️\"]],\"output\":[[\"🔋\",\"⛽\",\"⚛️\"],[\"⚙️\",\"⬛\",\"🔋\"],[\"⛽\",\"⚛️\",\"⚙️\"]]},{\"input\":[[\"🔧\",\"🔗\",\"☢️\"],[\"🔌\",\"⬛\",\"🔧\"],[\"🔗\",\"☢️\",\"🔌\"]],\"output\":[[\"🔧\",\"🔗\",\"☢️\"],[\"🔌\",\"⚡\",\"🔧\"],[\"🔗\",\"☢️\",\"🔌\"]]}],\"testInput\":[[\"⚡\",\"🔌\",\"☢️\"],[\"🔗\",\"🔧\",\"⬛\"],[\"🔋\",\"⛽\",\"⚛️\"]],\"testOutput\":[[\"⚡\",\"🔌\",\"☢️\"],[\"🔗\",\"🔧\",\"⚡\"],[\"🔋\",\"⛽\",\"⚛️\"]],\"hints\":[\"Look for number patterns that appear in the grid.\",\"The missing value connects to nearby numbers in a sequence.\"]},{\"id\":\"OB-031\",\"title\":\"Binary Signal Patterns\",\"description\":\"Complete the missing binary signal pattern for interstellar communication.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"⬛\",\"✅\",\"⬛\"],[\"⬛\",\"✅\",\"⬛\",\"✅\"],[\"✅\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]],\"output\":[[\"✅\",\"⬛\",\"✅\",\"⬛\"],[\"⬛\",\"✅\",\"⬛\",\"✅\"],[\"✅\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"✅\",\"⬛\",\"✅\"]]},{\"input\":[[\"⬛\",\"✅\",\"⬛\",\"✅\"],[\"✅\",\"⬛\",\"✅\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"✅\",\"⬛\",\"✅\",\"⬛\"]],\"output\":[[\"⬛\",\"✅\",\"⬛\",\"✅\"],[\"✅\",\"⬛\",\"✅\",\"⬛\"],[\"⬛\",\"✅\",\"⬛\",\"✅\"],[\"✅\",\"⬛\",\"✅\",\"⬛\"]]},{\"input\":[[\"✅\",\"✅\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"✅\",\"✅\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"✅\",\"✅\",\"⬛\",\"⬛\"]],\"output\":[[\"✅\",\"✅\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"✅\",\"✅\"],[\"✅\",\"✅\",\"⬛\",\"⬛\"],[\"✅\",\"✅\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"✅\",\"✅\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"✅\",\"✅\"],[\"✅\",\"✅\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"✅\",\"✅\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"✅\",\"✅\"],[\"✅\",\"✅\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"✅\",\"✅\"]],\"hints\":[\"Look for repeating patterns in the rows.\",\"The signal may follow a specific sequence.\"]},{\"id\":\"OB-032\",\"title\":\"Star Constellation Mapping\",\"description\":\"Complete the missing value in the star constellation mapping grid.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌍\",\"🌏\",\"🌟\"],[\"💫\",\"🪐\",\"⬛\"],[\"🌏\",\"🌟\",\"💫\"]],\"output\":[[\"🌍\",\"🌏\",\"🌟\"],[\"💫\",\"🪐\",\"🌍\"],[\"🌏\",\"🌟\",\"💫\"]]},{\"input\":[[\"🌠\",\"✨\",\"⭐\"],[\"🌎\",\"⬛\",\"🌠\"],[\"✨\",\"⭐\",\"🌎\"]],\"output\":[[\"🌠\",\"✨\",\"⭐\"],[\"🌎\",\"⬛\",\"🌠\"],[\"✨\",\"⭐\",\"🌎\"]]},{\"input\":[[\"🌎\",\"⭐\",\"✨\"],[\"⬛\",\"🌏\",\"🌟\"],[\"💫\",\"🪐\",\"🌍\"]],\"output\":[[\"🌎\",\"⭐\",\"✨\"],[\"🌠\",\"🌏\",\"🌟\"],[\"💫\",\"🪐\",\"🌍\"]]}],\"testInput\":[[\"🌟\",\"💫\",\"🪐\"],[\"🌍\",\"⬛\",\"🌟\"],[\"💫\",\"🪐\",\"🌍\"]],\"testOutput\":[[\"🌟\",\"💫\",\"🪐\"],[\"🌍\",\"🌏\",\"🌟\"],[\"💫\",\"🪐\",\"🌍\"]],\"hints\":[\"Look for patterns across both rows and columns.\",\"The missing value may relate to its neighboring numbers.\"]},{\"id\":\"OB-033\",\"title\":\"Oxygen Level Monitoring\",\"description\":\"Complete the oxygen level monitoring pattern to ensure proper life support function.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔧\",\"⚙️\",\"🔗\",\"⚛️\"],[\"☢️\",\"⛽\",\"🔌\",\"⬛\"],[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"☢️\",\"⚛️\",\"🔗\",\"⚙️\"]],\"output\":[[\"🔧\",\"⚙️\",\"🔗\",\"⚛️\"],[\"☢️\",\"⛽\",\"🔌\",\"🔋\"],[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"☢️\",\"⚛️\",\"🔗\",\"⚙️\"]]},{\"input\":[[\"🔋\",\"⛽\",\"⚛️\",\"⚙️\"],[\"⬛\",\"🔋\",\"⛽\",\"⚛️\"],[\"⚙️\",\"⬛\",\"🔋\",\"⛽\"],[\"⚛️\",\"⚙️\",\"⬛\",\"🔋\"]],\"output\":[[\"🔋\",\"⛽\",\"⚛️\",\"⚙️\"],[\"⬛\",\"🔋\",\"⛽\",\"⚛️\"],[\"⚙️\",\"⬛\",\"🔋\",\"⛽\"],[\"⚛️\",\"⚙️\",\"⬛\",\"🔋\"]]},{\"input\":[[\"☢️\",\"☢️\",\"☢️\",\"⬛\"],[\"⛽\",\"⛽\",\"⛽\",\"⛽\"],[\"🔌\",\"🔌\",\"⬛\",\"🔌\"],[\"🔋\",\"🔋\",\"🔋\",\"🔋\"]],\"output\":[[\"☢️\",\"☢️\",\"☢️\",\"☢️\"],[\"⛽\",\"⛽\",\"⛽\",\"⛽\"],[\"🔌\",\"🔌\",\"🔌\",\"🔌\"],[\"🔋\",\"🔋\",\"🔋\",\"🔋\"]]}],\"testInput\":[[\"🔗\",\"🔗\",\"🔗\",\"⬛\"],[\"⚛️\",\"⚛️\",\"⚛️\",\"⚛️\"],[\"☢️\",\"☢️\",\"⬛\",\"☢️\"],[\"⛽\",\"⛽\",\"⛽\",\"⛽\"]],\"testOutput\":[[\"🔗\",\"🔗\",\"🔗\",\"🔗\"],[\"⚛️\",\"⚛️\",\"⚛️\",\"⚛️\"],[\"☢️\",\"☢️\",\"☢️\",\"☢️\"],[\"⛽\",\"⛽\",\"⛽\",\"⛽\"]],\"hints\":[\"Pay attention to patterns within each row.\",\"Look for repeating values in the rows.\"]},{\"id\":\"OB-034\",\"title\":\"Thruster Calibration Sequence\",\"description\":\"Complete the thruster calibration sequence by identifying the missing pattern.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"⚠️\",\"⬛\"],[\"🚨\",\"🔥\",\"📍\"],[\"❄️\",\"🎯\",\"✅\"]],\"output\":[[\"✅\",\"⚠️\",\"🦺\"],[\"🚨\",\"🔥\",\"📍\"],[\"❄️\",\"🎯\",\"✅\"]]},{\"input\":[[\"🎯\",\"❄️\",\"🦺\"],[\"⬛\",\"⚠️\",\"✅\"],[\"🎯\",\"❄️\",\"🦺\"]],\"output\":[[\"🎯\",\"❄️\",\"🦺\"],[\"⚠️\",\"⚠️\",\"✅\"],[\"🎯\",\"❄️\",\"🦺\"]]},{\"input\":[[\"❌\",\"🚨\",\"🔥\"],[\"📍\",\"⬛\",\"❌\"],[\"🚨\",\"🔥\",\"📍\"]],\"output\":[[\"❌\",\"🚨\",\"🔥\"],[\"📍\",\"⬛\",\"❌\"],[\"🚨\",\"🔥\",\"📍\"]]}],\"testInput\":[[\"⚠️\",\"🦺\",\"❄️\"],[\"🎯\",\"⬛\",\"⚠️\"],[\"🦺\",\"❄️\",\"🎯\"]],\"testOutput\":[[\"⚠️\",\"🦺\",\"❄️\"],[\"🎯\",\"✅\",\"⚠️\"],[\"🦺\",\"❄️\",\"🎯\"]],\"hints\":[\"Analyze the relationship between adjacent values.\",\"Look for patterns in both rows and columns.\"]},{\"id\":\"OB-035\",\"title\":\"Communication Relay Matrix\",\"description\":\"Identify the pattern in the communication relay matrix and complete the missing signal.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"⛽\",\"🔌\",\"🔋\",\"⚡\"],[\"⚡\",\"🔋\",\"⬛\",\"⛽\"],[\"⛽\",\"🔌\",\"🔋\",\"⚡\"]],\"output\":[[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"⛽\",\"🔌\",\"🔋\",\"⚡\"],[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"⛽\",\"🔌\",\"🔋\",\"⚡\"]]},{\"input\":[[\"☢️\",\"⚛️\",\"🔗\",\"⚙️\"],[\"⚙️\",\"🔗\",\"⚛️\",\"☢️\"],[\"☢️\",\"⬛\",\"🔗\",\"⚙️\"],[\"⚙️\",\"🔗\",\"⚛️\",\"☢️\"]],\"output\":[[\"☢️\",\"⚛️\",\"🔗\",\"⚙️\"],[\"⚙️\",\"🔗\",\"⚛️\",\"☢️\"],[\"☢️\",\"⚛️\",\"🔗\",\"⚙️\"],[\"⚙️\",\"🔗\",\"⚛️\",\"☢️\"]]},{\"input\":[[\"🔧\",\"⚙️\",\"🔗\",\"⚛️\"],[\"☢️\",\"⛽\",\"🔌\",\"🔋\"],[\"⬛\",\"⚙️\",\"🔗\",\"⚛️\"],[\"☢️\",\"⛽\",\"🔌\",\"🔋\"]],\"output\":[[\"🔧\",\"⚙️\",\"🔗\",\"⚛️\"],[\"☢️\",\"⛽\",\"🔌\",\"🔋\"],[\"🔧\",\"⚙️\",\"🔗\",\"⚛️\"],[\"☢️\",\"⛽\",\"🔌\",\"🔋\"]]}],\"testInput\":[[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"⚛️\",\"🔗\",\"⚙️\",\"🔧\"],[\"🔋\",\"⬛\",\"⛽\",\"☢️\"],[\"⚛️\",\"🔗\",\"⚙️\",\"🔧\"]],\"testOutput\":[[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"⚛️\",\"🔗\",\"⚙️\",\"🔧\"],[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"⚛️\",\"🔗\",\"⚙️\",\"🔧\"]],\"hints\":[\"Look for repeating patterns in the rows.\",\"Rows may form a specific pattern that repeats.\"]},{\"id\":\"OB-036\",\"title\":\"Docking Sequence Alignment\",\"description\":\"Complete the docking alignment pattern to ensure proper spacecraft coupling.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"✅\",\"✅\"],[\"❌\",\"⬛\",\"❌\"],[\"⚠️\",\"⚠️\",\"⚠️\"]],\"output\":[[\"✅\",\"✅\",\"✅\"],[\"❌\",\"❌\",\"❌\"],[\"⚠️\",\"⚠️\",\"⚠️\"]]},{\"input\":[[\"🚨\",\"🚨\",\"🚨\"],[\"🦺\",\"🦺\",\"⬛\"],[\"🔥\",\"🔥\",\"🔥\"]],\"output\":[[\"🚨\",\"🚨\",\"🚨\"],[\"🦺\",\"🦺\",\"🦺\"],[\"🔥\",\"🔥\",\"🔥\"]]},{\"input\":[[\"❄️\",\"❄️\",\"❄️\"],[\"⬛\",\"📍\",\"📍\"],[\"🎯\",\"🎯\",\"🎯\"]],\"output\":[[\"❄️\",\"❄️\",\"❄️\"],[\"📍\",\"📍\",\"📍\"],[\"🎯\",\"🎯\",\"🎯\"]]}],\"testInput\":[[\"❌\",\"❌\",\"❌\"],[\"⚠️\",\"⬛\",\"⚠️\"],[\"🚨\",\"🚨\",\"🚨\"]],\"testOutput\":[[\"❌\",\"❌\",\"❌\"],[\"⚠️\",\"⚠️\",\"⚠️\"],[\"🚨\",\"🚨\",\"🚨\"]],\"hints\":[\"Notice the pattern within each row.\",\"Look for consistency across each row.\"]},{\"id\":\"OB-037\",\"title\":\"Radiation Shield Patterns\",\"description\":\"Complete the radiation shield pattern to ensure optimal protection during solar events.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌍\",\"🌎\",\"🌏\",\"⭐\"],[\"🌏\",\"⭐\",\"🌟\",\"✨\"],[\"🌟\",\"✨\",\"💫\",\"⬛\"],[\"💫\",\"🌠\",\"🪐\",\"🌍\"]],\"output\":[[\"🌍\",\"🌎\",\"🌏\",\"⭐\"],[\"🌏\",\"⭐\",\"🌟\",\"✨\"],[\"🌟\",\"✨\",\"💫\",\"🌠\"],[\"💫\",\"🌠\",\"🪐\",\"🌍\"]]},{\"input\":[[\"🪐\",\"🌠\",\"💫\",\"✨\"],[\"💫\",\"✨\",\"🌟\",\"⭐\"],[\"🌟\",\"⭐\",\"⬛\",\"🌎\"],[\"🌏\",\"🌎\",\"🌍\",\"⬛\"]],\"output\":[[\"🪐\",\"🌠\",\"💫\",\"✨\"],[\"💫\",\"✨\",\"🌟\",\"⭐\"],[\"🌟\",\"⭐\",\"🌏\",\"🌎\"],[\"🌏\",\"🌎\",\"🌍\",\"⬛\"]]},{\"input\":[[\"🌎\",\"⭐\",\"✨\",\"🌠\"],[\"🌍\",\"🌏\",\"🌟\",\"💫\"],[\"⬛\",\"🌎\",\"⬛\",\"✨\"],[\"🪐\",\"🌍\",\"🌏\",\"🌟\"]],\"output\":[[\"🌎\",\"⭐\",\"✨\",\"🌠\"],[\"🌍\",\"🌏\",\"🌟\",\"💫\"],[\"⬛\",\"🌎\",\"⭐\",\"✨\"],[\"🪐\",\"🌍\",\"🌏\",\"🌟\"]]}],\"testInput\":[[\"🌟\",\"✨\",\"💫\",\"🌠\"],[\"⭐\",\"🌟\",\"✨\",\"💫\"],[\"🌏\",\"⭐\",\"⬛\",\"✨\"],[\"🌎\",\"🌏\",\"⭐\",\"🌟\"]],\"testOutput\":[[\"🌟\",\"✨\",\"💫\",\"🌠\"],[\"⭐\",\"🌟\",\"✨\",\"💫\"],[\"🌏\",\"⭐\",\"🌟\",\"✨\"],[\"🌎\",\"🌏\",\"⭐\",\"🌟\"]],\"hints\":[\"Look for arithmetic patterns in each row.\",\"Each row follows a consistent numerical pattern.\"]},{\"id\":\"OB-038\",\"title\":\"Power Grid Fluctuations\",\"description\":\"Identify the pattern in power grid fluctuations and predict the missing value.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Beginner\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":2,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⛽\",\"🔗\"],[\"🔋\",\"☢️\",\"⬛\"],[\"🔌\",\"⚛️\",\"🔧\"]],\"output\":[[\"⚡\",\"⛽\",\"🔗\"],[\"🔋\",\"☢️\",\"⚙️\"],[\"🔌\",\"⚛️\",\"🔧\"]]},{\"input\":[[\"🔧\",\"⚛️\",\"🔌\"],[\"⚙️\",\"☢️\",\"⬛\"],[\"🔗\",\"⛽\",\"⚡\"]],\"output\":[[\"🔧\",\"⚛️\",\"🔌\"],[\"⚙️\",\"☢️\",\"🔋\"],[\"🔗\",\"⛽\",\"⚡\"]]},{\"input\":[[\"🔋\",\"⛽\",\"⚛️\"],[\"⚡\",\"🔌\",\"⬛\"],[\"⬛\",\"🔋\",\"⛽\"]],\"output\":[[\"🔋\",\"⛽\",\"⚛️\"],[\"⚡\",\"🔌\",\"☢️\"],[\"⬛\",\"🔋\",\"⛽\"]]}],\"testInput\":[[\"🔗\",\"☢️\",\"🔌\"],[\"⚛️\",\"⛽\",\"⬛\"],[\"☢️\",\"🔌\",\"⚡\"]],\"testOutput\":[[\"🔗\",\"☢️\",\"🔌\"],[\"⚛️\",\"⛽\",\"🔋\"],[\"☢️\",\"🔌\",\"⚡\"]],\"hints\":[\"Look for patterns across both rows and columns.\",\"The missing value completes a numerical sequence.\"]},{\"id\":\"OB-048\",\"title\":\"Data Transmission Pattern\",\"description\":\"Rotate the grid 270 degrees clockwise to optimize data transmission patterns for reliable communication.\",\"category\":\"⚙️ Onboard Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3000,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"⚠️\",\"🔥\",\"🔥\"],[\"🔥\",\"⚠️\",\"🔥\"],[\"🔥\",\"🔥\",\"⚠️\"]],\"output\":[[\"🔥\",\"🔥\",\"⚠️\"],[\"🔥\",\"⚠️\",\"🔥\"],[\"⚠️\",\"🔥\",\"🔥\"]]}],\"testInput\":[[\"⚠️\",\"🔥\",\"🔥\"],[\"🔥\",\"⚠️\",\"🔥\"],[\"🔥\",\"🔥\",\"⚠️\"]],\"testOutput\":[[\"🔥\",\"🔥\",\"⚠️\"],[\"🔥\",\"⚠️\",\"🔥\"],[\"⚠️\",\"🔥\",\"🔥\"]],\"hints\":[\"Rotate 270 degrees clockwise.\",\"Equivalent to 90-degree counter-clockwise rotation.\",\"Value at [row, col] moves to [gridSize - 1 - col, row].\"]},{\"id\":\"OS-001\",\"title\":\"Oxygen Sensor Calibration\",\"description\":\"Basic systems health checks are part of our daily routine here. Lend us a hand by examining the previous correct configurations and then correctly configure the new sensor.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":3250,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"⬛\"],[\"⬛\",\"❌\"]],\"output\":[[\"❌\",\"⬛\"],[\"⬛\",\"✅\"]]},{\"input\":[[\"📍\",\"⬛\"],[\"⬛\",\"🎯\"]],\"output\":[[\"🎯\",\"⬛\"],[\"⬛\",\"📍\"]]}],\"testInput\":[[\"✅\",\"⬛\"],[\"⬛\",\"❌\"]],\"testOutput\":[[\"❌\",\"⬛\"],[\"⬛\",\"✅\"]],\"hints\":[\"Look at how the indicators change positions.\",\"The transformation swaps elements diagonally across the grid.\",\"Top-left goes to bottom-right, bottom-left goes to top-right.\"]},{\"id\":\"OS-002\",\"title\":\"Atmospheric Pressure Check\",\"description\":\"Secondary oxygen sensors need recalibration. Here's what worked before, can you recalibrate our setting to restore proper atmospheric readings?\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":1400,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"🔋\"],[\"🔌\",\"⛽\"]],\"output\":[[\"⛽\",\"🔌\"],[\"🔋\",\"⚡\"]]}],\"testInput\":[[\"☢️\",\"⚛️\"],[\"⬛\",\"⚡\"]],\"testOutput\":[[\"⚡\",\"⬛\"],[\"⚛️\",\"☢️\"]],\"hints\":[\"Notice the rotation pattern in the transformation.\",\"The grid rotates 180 degrees clockwise 🔁.\",\"Bottom-right becomes top-left, top-left becomes bottom-right.\"]},{\"id\":\"OS-003\",\"title\":\"Pattern Fill Algorithm\",\"description\":\"Mork Zickarborg's quantum nav computer analyzed 1,247 possible rules for completing a simple alternating pattern, including 'every third symbol represents the pilot's favorite color' and 'the pattern follows ancient Martian calendar cycles.' Pattern completion requires understanding implicit rules from limited examples, then applying abstract reasoning to fill gaps. AI struggles with inductive reasoning and often overfits to specific examples rather than grasping underlying patterns. Oxygen sensor arrays need pattern completion. Fill empty spaces following the established color sequence patterns.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":11550,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"⚡\"],[\"⬛\",\"🔋\",\"⬛\"],[\"⚡\",\"⬛\",\"⚡\"]],\"output\":[[\"⚡\",\"🔋\",\"⚡\"],[\"🔋\",\"🔋\",\"🔋\"],[\"⚡\",\"🔋\",\"⚡\"]]},{\"input\":[[\"🔌\",\"⛽\",\"⬛\"],[\"⛽\",\"⬛\",\"⛽\"],[\"⬛\",\"⛽\",\"🔌\"]],\"output\":[[\"🔌\",\"⛽\",\"🔌\"],[\"⛽\",\"🔌\",\"⛽\"],[\"🔌\",\"⛽\",\"🔌\"]]}],\"testInput\":[[\"☢️\",\"⬛\",\"☢️\"],[\"⬛\",\"⚛️\",\"⬛\"],[\"☢️\",\"⬛\",\"☢️\"]],\"testOutput\":[[\"☢️\",\"⚛️\",\"☢️\"],[\"⚛️\",\"⚛️\",\"⚛️\"],[\"☢️\",\"⚛️\",\"☢️\"]],\"hints\":[\"When you see a pattern like '1, 2, 1, 2, 1, ___', you know the next one is 2. But computers look at each example and think of hundreds of different rules it could be, instead of seeing the simple pattern.\",\"It's like when you're learning to clap to music. You hear 'clap, clap, pause, clap, clap, pause' and you know what comes next. But a computer might think it needs to count the number of sounds, measure the exact time between claps, or figure out what song it is.\",\"Think about putting on your shoes. You know the pattern: sock, shoe, sock, shoe. But a computer might think it needs to consider the color of your socks, the day of the week, how many steps you'll take, and a million other things instead of just following the simple pattern.\",\"Look for the dominant pattern in the corners.\",\"⬛ spaces are filled with the center symbol.\",\"The transformation creates a checkerboard-like pattern.\"]},{\"id\":\"OS-004\",\"title\":\"Sensor Anti-Diagonal Swap\",\"description\":\"Oxygen sensor arrays require anti-diagonal calibration. Elements swap across the opposite diagonal line.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":1360,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🛰️\"],[\"📱\",\"⌨️\"]],\"output\":[[\"📱\",\"🛰️\"],[\"📡\",\"⌨️\"]]},{\"input\":[[\"📶\",\"⬛\"],[\"⬛\",\"📋\"]],\"output\":[[\"⬛\",\"⬛\"],[\"📶\",\"📋\"]]}],\"testInput\":[[\"📡\",\"📱\"],[\"🛰️\",\"⌨️\"]],\"testOutput\":[[\"🛰️\",\"📱\"],[\"📡\",\"⌨️\"]],\"hints\":[\"Top-left swaps with bottom-left position.\",\"Top-right and bottom-right positions remain unchanged.\",\"Only the anti-diagonal elements change positions.\"]},{\"id\":\"OS-005\",\"title\":\"Advanced Sensor Border Extraction\",\"description\":\"Complex oxygen sensor networks require border element extraction. Only perimeter elements remain active in the output.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":21050,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🛰️\",\"📱\"],[\"⌨️\",\"📶\",\"📋\"],[\"💻\",\"🎚️\",\"🎧\"]],\"output\":[[\"📡\",\"🛰️\",\"📱\"],[\"⌨️\",\"⬛\",\"📋\"],[\"💻\",\"🎚️\",\"🎧\"]]}],\"testInput\":[[\"📡\",\"🛰️\",\"📱\"],[\"⌨️\",\"📶\",\"📋\"],[\"💻\",\"🎚️\",\"🎧\"]],\"testOutput\":[[\"📡\",\"🛰️\",\"📱\"],[\"⌨️\",\"⬛\",\"📋\"],[\"💻\",\"🎚️\",\"🎧\"]],\"hints\":[\"Only the border/perimeter elements are preserved.\",\"The center element is replaced with ⬛.\",\"Edge elements (top, bottom, left, right rows/columns) remain unchanged.\"]},{\"id\":\"OS-006\",\"title\":\"Advanced Sensor Outer Ring Extraction\",\"description\":\"Complex oxygen sensor networks require outer ring element preservation. Only the outermost ring of elements remains active.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":21080,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📡\",\"🛰️\",\"📱\"],[\"⌨️\",\"📶\",\"📋\"],[\"💻\",\"🎚️\",\"🎧\"]],\"output\":[[\"📡\",\"🛰️\",\"📱\"],[\"⌨️\",\"⬛\",\"📋\"],[\"💻\",\"🎚️\",\"🎧\"]]}],\"testInput\":[[\"🎧\",\"🎚️\",\"💻\"],[\"📋\",\"📶\",\"⌨️\"],[\"📱\",\"🛰️\",\"📡\"]],\"testOutput\":[[\"🎧\",\"🎚️\",\"💻\"],[\"📋\",\"⬛\",\"⌨️\"],[\"📱\",\"🛰️\",\"📡\"]],\"hints\":[\"Preserve all elements on the outer perimeter of the grid.\",\"Clear the center element only.\",\"The outer ring forms a border around the empty center.\"]},{\"id\":\"OS-007\",\"title\":\"Sensor Position Exchange\",\"description\":\"Oxygen sensors require exchange protocols. Adjacent elements swap their positions in sequence.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":1325,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"❌\"],[\"⚠️\",\"🚨\"]],\"output\":[[\"❌\",\"✅\"],[\"🚨\",\"⚠️\"]]},{\"input\":[[\"🦺\",\"⬛\"],[\"⬛\",\"🔥\"]],\"output\":[[\"⬛\",\"🦺\"],[\"🔥\",\"⬛\"]]}],\"testInput\":[[\"❄️\",\"📍\"],[\"🎯\",\"⬛\"]],\"testOutput\":[[\"📍\",\"❄️\"],[\"⬛\",\"🎯\"]],\"hints\":[\"Adjacent horizontal pairs swap their positions.\",\"Left element becomes right, right element becomes left.\",\"Each row processes its swap independently.\"]},{\"id\":\"OS-008\",\"title\":\"Advanced Sensor Wave Propagation\",\"description\":\"Complex oxygen sensor networks require wave propagation analysis. Signals emanate from center point in expanding wave patterns.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":21180,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"📡\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\"]],\"output\":[[\"📡\",\"📡\",\"📡\"],[\"📡\",\"📡\",\"📡\"],[\"📡\",\"📡\",\"📡\"]]},{\"input\":[[\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"🛰️\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\"]],\"output\":[[\"🛰️\",\"🛰️\",\"🛰️\"],[\"🛰️\",\"🛰️\",\"🛰️\"],[\"🛰️\",\"🛰️\",\"🛰️\"]]}],\"testInput\":[[\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"📱\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"📱\",\"📱\",\"📱\"],[\"📱\",\"📱\",\"📱\"],[\"📱\",\"📱\",\"📱\"]],\"hints\":[\"The center signal propagates to fill the entire grid.\",\"All ⬛ spaces adopt the center element's properties.\",\"Wave expansion covers the complete sensor array uniformly.\"]},{\"id\":\"OS-009\",\"title\":\"Sensor Row-Column Intersection\",\"description\":\"Oxygen sensor arrays require intersection analysis. Only elements that appear in both their row and column patterns remain active.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":23180,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌏\",\"🌠\"],[\"🌏\",\"🪐\"]],\"output\":[[\"🌏\",\"⬛\"],[\"🌏\",\"⬛\"]]},{\"input\":[[\"⭐\",\"🌎\"],[\"⭐\",\"💫\"]],\"output\":[[\"⭐\",\"⬛\"],[\"⭐\",\"⬛\"]]}],\"testInput\":[[\"🌍\",\"💫\"],[\"🌍\",\"🌠\"]],\"testOutput\":[[\"🌍\",\"⬛\"],[\"🌍\",\"⬛\"]],\"hints\":[\"Find elements that appear in both row and column positions.\",\"Elements that repeat across row/column boundaries are preserved.\",\"Unique elements in their row or column become ⬛.\"]},{\"id\":\"OS-104\",\"title\":\"environmental data Rotation Analysis\",\"description\":\"Airlock control systems got confused trying to rotate safety protocols 270 degrees. Instead of one smooth turn, it performed three separate 90-degree rotations of the actual airlock chamber, cycling through pressurization three times and trapping two astronauts in the middle. 270-degree rotations are particularly challenging because they require understanding that three quarter-turns equal one three-quarter turn, not just applying 90-degree logic three times. This tests deeper spatial reasoning and transformation composition. Analyze the environmental data by rotating the input grid 270 degrees clockwise 🔁🔁🔁.\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11350,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"📍\",\"🎯\",\"⚠️\",\"❌\"],[\"⚠️\",\"❌\",\"🚨\",\"📍\"],[\"🎯\",\"📍\",\"📍\",\"🔥\"],[\"❌\",\"✅\",\"✅\",\"❌\"]],\"output\":[[\"❌\",\"📍\",\"🔥\",\"❌\"],[\"⚠️\",\"🚨\",\"📍\",\"✅\"],[\"🎯\",\"❌\",\"📍\",\"✅\"],[\"📍\",\"⚠️\",\"🎯\",\"❌\"]]},{\"input\":[[\"🚨\",\"❄️\",\"⬛\",\"❌\"],[\"🚨\",\"🚨\",\"⬛\",\"⬛\"],[\"🦺\",\"🔥\",\"✅\",\"🦺\"],[\"⬛\",\"❄️\",\"❄️\",\"✅\"]],\"output\":[[\"❌\",\"⬛\",\"🦺\",\"✅\"],[\"⬛\",\"⬛\",\"✅\",\"❄️\"],[\"❄️\",\"🚨\",\"🔥\",\"❄️\"],[\"🚨\",\"🚨\",\"🦺\",\"⬛\"]]}],\"testInput\":[[\"🔥\",\"❌\",\"❄️\",\"🎯\"],[\"✅\",\"🔥\",\"❌\",\"🎯\"],[\"⚠️\",\"⬛\",\"⚠️\",\"❄️\"],[\"❌\",\"✅\",\"❌\",\"🦺\"]],\"testOutput\":[[\"🎯\",\"🎯\",\"❄️\",\"🦺\"],[\"❄️\",\"❌\",\"⚠️\",\"❌\"],[\"❌\",\"🔥\",\"⬛\",\"✅\"],[\"🔥\",\"✅\",\"⚠️\",\"❌\"]],\"hints\":[\"This is like spinning a toy three times to the right instead of once to the left to end up in the same place. You know they're the same, but computers have to think step-by-step through each turn.\",\"Imagine you're playing 'Simon Says' and Simon says 'turn around 3/4 of the way.' You'd just turn almost all the way around and stop. But a computer might think it has to turn a little bit, then turn again, then turn again, taking much longer to get to the same place.\",\"It's like when you're unscrewing a jar lid. You know you need to turn it mostly around to the left, but a computer might think it needs to turn it a little to the right three times instead of just turning left once. Both ways work, but one is much sillier.\",\"Rotate the entire grid 270 degrees clockwise 🔁🔁🔁 (¾ turn to the right). You can also think of this as one 90° counter-clockwise 🔄.\",\"The leftmost column becomes the top row, reading from left to right.\",\"Each row in the original becomes a column in the result, with order shifted accordingly.\"],\"transformationType\":\"rotation_270deg\",\"generated\":true},{\"id\":\"OS-111\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🛰️\",\"📶\",\"⌨️\",\"📋\"],[\"💻\",\"⬛\",\"📡\",\"⬛\"],[\"🎧\",\"📋\",\"🛰️\",\"📶\"],[\"🛰️\",\"📱\",\"🎚️\",\"📱\"]],\"output\":[[\"📡\",\"🎚️\",\"🛰️\",\"🎚️\"],[\"🎚️\",\"🛰️\",\"🛰️\",\"🛰️\"],[\"⬛\",\"📡\",\"💻\",\"📶\"],[\"📶\",\"🛰️\",\"📱\",\"💻\"]]},{\"input\":[[\"⬛\",\"📋\",\"📡\",\"📱\"],[\"💻\",\"📱\",\"💻\",\"🎧\"],[\"📡\",\"🎚️\",\"📱\",\"📡\"],[\"⌨️\",\"⌨️\",\"💻\",\"💻\"]],\"output\":[[\"📱\",\"⌨️\",\"📶\",\"💻\"],[\"📱\",\"💻\",\"📡\",\"💻\"],[\"💻\",\"🎧\",\"⬛\",\"📶\"],[\"⌨️\",\"🛰️\",\"📋\",\"🛰️\"]]}],\"testInput\":[[\"🎧\",\"📶\",\"📱\",\"⌨️\"],[\"📱\",\"🛰️\",\"📱\",\"⬛\"],[\"📡\",\"🛰️\",\"🎧\",\"💻\"],[\"🎧\",\"📋\",\"🎧\",\"📡\"]],\"testOutput\":[[\"🎧\",\"📱\",\"📡\",\"🎧\"],[\"📶\",\"🛰️\",\"🛰️\",\"📋\"],[\"📱\",\"📱\",\"🎧\",\"🎧\"],[\"⌨️\",\"⬛\",\"💻\",\"📡\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"OS-112\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📶\",\"⌨️\",\"🎚️\",\"⌨️\"],[\"💻\",\"🎧\",\"🎚️\",\"⌨️\"],[\"🎧\",\"📋\",\"🛰️\",\"🎧\"],[\"⌨️\",\"🎧\",\"📋\",\"📡\"]],\"output\":[[\"💻\",\"🎚️\",\"🎚️\",\"📱\"],[\"📱\",\"🛰️\",\"🎧\",\"⬛\"],[\"🎧\",\"🎚️\",\"📱\",\"📱\"],[\"🛰️\",\"📱\",\"📱\",\"⌨️\"]]},{\"input\":[[\"🎧\",\"⬛\",\"🎧\",\"⬛\"],[\"💻\",\"💻\",\"🛰️\",\"📱\"],[\"📋\",\"📡\",\"💻\",\"📡\"],[\"⌨️\",\"📶\",\"📱\",\"🎧\"]],\"output\":[[\"📋\",\"📡\",\"🛰️\",\"⬛\"],[\"💻\",\"💻\",\"📡\",\"📱\"],[\"🎧\",\"💻\",\"⬛\",\"⬛\"],[\"💻\",\"🎧\",\"🎚️\",\"🎚️\"]]}],\"testInput\":[[\"⌨️\",\"🛰️\",\"🎧\",\"💻\"],[\"💻\",\"📱\",\"📋\",\"📶\"],[\"⌨️\",\"⌨️\",\"📡\",\"🛰️\"],[\"💻\",\"💻\",\"📱\",\"📡\"]],\"testOutput\":[[\"📡\",\"🛰️\",\"📶\",\"💻\"],[\"📱\",\"📡\",\"📋\",\"🎧\"],[\"💻\",\"⌨️\",\"📱\",\"🛰️\"],[\"💻\",\"⌨️\",\"💻\",\"⌨️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"OS-200\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"⌨️\",\"📱\"],[\"📡\",\"🎧\"]],\"output\":[[\"🎧\",\"📱\"],[\"💻\",\"📶\"]]},{\"input\":[[\"📱\",\"🎚️\"],[\"💻\",\"🎧\"]],\"output\":[[\"📡\",\"📋\"],[\"📡\",\"🎚️\"]]}],\"testInput\":[[\"📶\",\"📋\"],[\"📡\",\"⬛\"]],\"testOutput\":[[\"📶\",\"📡\"],[\"📋\",\"⬛\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"OS-201\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📶\",\"🛰️\"],[\"📱\",\"📱\"]],\"output\":[[\"🎧\",\"🛰️\"],[\"📱\",\"⌨️\"]]},{\"input\":[[\"🎚️\",\"💻\"],[\"🎧\",\"💻\"]],\"output\":[[\"📱\",\"🛰️\"],[\"⬛\",\"📶\"]]}],\"testInput\":[[\"📋\",\"🛰️\"],[\"🎧\",\"📱\"]],\"testOutput\":[[\"📱\",\"🛰️\"],[\"🎧\",\"📋\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"OS-202\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📶\",\"⌨️\",\"📋\"],[\"📱\",\"🛰️\",\"📶\"],[\"📶\",\"📶\",\"🎚️\"]],\"output\":[[\"📡\",\"🎚️\",\"🎧\"],[\"⌨️\",\"⬛\",\"📋\"],[\"🎧\",\"🛰️\",\"💻\"]]},{\"input\":[[\"🎚️\",\"⬛\",\"💻\"],[\"⌨️\",\"🎚️\",\"⌨️\"],[\"📋\",\"🎧\",\"🎚️\"]],\"output\":[[\"🎚️\",\"📋\",\"📋\"],[\"🛰️\",\"💻\",\"📶\"],[\"🎧\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"🎚️\",\"⬛\",\"🎧\"],[\"⌨️\",\"⌨️\",\"💻\"],[\"💻\",\"📶\",\"📋\"]],\"testOutput\":[[\"🎚️\",\"⌨️\",\"💻\"],[\"⬛\",\"⌨️\",\"📶\"],[\"🎧\",\"💻\",\"📋\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"OS-203\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"🎧\",\"⬛\",\"📡\"],[\"🛰️\",\"📋\",\"📋\"],[\"🎚️\",\"🎧\",\"📶\"]],\"output\":[[\"📡\",\"💻\",\"🎚️\"],[\"📋\",\"💻\",\"🎚️\"],[\"📡\",\"⌨️\",\"🛰️\"]]},{\"input\":[[\"🎧\",\"📶\",\"📡\"],[\"📶\",\"🎚️\",\"📡\"],[\"⌨️\",\"📡\",\"🎧\"]],\"output\":[[\"📱\",\"🎧\",\"⬛\"],[\"📋\",\"🎧\",\"🛰️\"],[\"📶\",\"📋\",\"📋\"]]}],\"testInput\":[[\"📱\",\"📶\",\"💻\"],[\"📱\",\"🛰️\",\"💻\"],[\"📱\",\"⬛\",\"📋\"]],\"testOutput\":[[\"📋\",\"💻\",\"💻\"],[\"⬛\",\"🛰️\",\"📶\"],[\"📱\",\"📱\",\"📱\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"OS-204\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"📋\",\"🛰️\",\"🎧\",\"📱\"],[\"📶\",\"📱\",\"📱\",\"🛰️\"],[\"🎧\",\"🛰️\",\"⌨️\",\"📡\"],[\"🎚️\",\"📶\",\"📱\",\"📋\"]],\"output\":[[\"📱\",\"⌨️\",\"📡\",\"🎧\"],[\"📶\",\"⬛\",\"📶\",\"🎧\"],[\"📋\",\"📶\",\"🛰️\",\"⬛\"],[\"🎚️\",\"💻\",\"📱\",\"🛰️\"]]},{\"input\":[[\"🛰️\",\"🛰️\",\"📡\",\"🎧\"],[\"📋\",\"📶\",\"📡\",\"📋\"],[\"📡\",\"⬛\",\"📶\",\"🛰️\"],[\"⌨️\",\"⬛\",\"🎧\",\"🎚️\"]],\"output\":[[\"📶\",\"⬛\",\"📶\",\"🎧\"],[\"⌨️\",\"📋\",\"⌨️\",\"📱\"],[\"⌨️\",\"📡\",\"🛰️\",\"📡\"],[\"⌨️\",\"📶\",\"⌨️\",\"📶\"]]}],\"testInput\":[[\"📱\",\"🎧\",\"📡\",\"🛰️\"],[\"📋\",\"📶\",\"📡\",\"📡\"],[\"🛰️\",\"📱\",\"⬛\",\"⌨️\"],[\"🎧\",\"💻\",\"📋\",\"🛰️\"]],\"testOutput\":[[\"📱\",\"📋\",\"🛰️\",\"🎧\"],[\"🎧\",\"📶\",\"📱\",\"💻\"],[\"📡\",\"📡\",\"⬛\",\"📋\"],[\"🛰️\",\"📡\",\"⌨️\",\"🛰️\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"OS-205\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🛡️ O₂ Sensor Check\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set2\",\"examples\":[{\"input\":[[\"⬛\",\"💻\",\"🎚️\",\"📡\"],[\"📋\",\"📱\",\"⬛\",\"🎧\"],[\"🎚️\",\"🛰️\",\"🎧\",\"📋\"],[\"📶\",\"⌨️\",\"🎚️\",\"📱\"]],\"output\":[[\"💻\",\"🎚️\",\"⬛\",\"💻\"],[\"💻\",\"📱\",\"📋\",\"📋\"],[\"🛰️\",\"⌨️\",\"🎧\",\"🎚️\"],[\"🎚️\",\"📶\",\"📡\",\"💻\"]]},{\"input\":[[\"📱\",\"📶\",\"⌨️\",\"⌨️\"],[\"🎚️\",\"📶\",\"📡\",\"📡\"],[\"📶\",\"📡\",\"📱\",\"📡\"],[\"📱\",\"🎧\",\"🎧\",\"📱\"]],\"output\":[[\"⌨️\",\"🛰️\",\"📶\",\"📶\"],[\"📋\",\"⌨️\",\"📶\",\"🎧\"],[\"⬛\",\"⬛\",\"💻\",\"🛰️\"],[\"🛰️\",\"📋\",\"📱\",\"📶\"]]}],\"testInput\":[[\"📡\",\"⬛\",\"📱\",\"🎧\"],[\"🛰️\",\"⌨️\",\"⌨️\",\"📶\"],[\"⬛\",\"💻\",\"⬛\",\"📡\"],[\"📋\",\"⬛\",\"📡\",\"🎚️\"]],\"testOutput\":[[\"🎚️\",\"📡\",\"📶\",\"🎧\"],[\"📡\",\"⬛\",\"⌨️\",\"📱\"],[\"⬛\",\"💻\",\"⌨️\",\"⬛\"],[\"📋\",\"⬛\",\"🛰️\",\"📡\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"PL-001\",\"title\":\"Pre-Launch Sequence Alpha\",\"description\":\"Mirror pre-launch panel indicators across the vertical axis to verify symmetry before ignition.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":4350,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\"],[\"🔋\",\"⬛\"]],\"output\":[[\"⬛\",\"⚡\"],[\"⬛\",\"🔋\"]]},{\"input\":[[\"⬛\",\"🔌\"],[\"⛽\",\"☢️\"]],\"output\":[[\"🔌\",\"⬛\"],[\"☢️\",\"⛽\"]]}],\"testInput\":[[\"⚛️\",\"⬛\"],[\"⬛\",\"🔗\"]],\"testOutput\":[[\"⬛\",\"⚛️\"],[\"🔗\",\"⬛\"]],\"hints\":[\"Reflect the grid left-to-right.\",\"Columns swap positions; rows stay the same.\",\"⬛ represents background and remains where no component exists.\"]},{\"id\":\"PL-002\",\"title\":\"Launch Grid Rotation\",\"description\":\"The communications array got stuck trying to rotate antenna positioning data 90 degrees. Instead of simply turning the coordinate map, it began physically rotating the entire 50-ton antenna assembly, creating a slow-motion disaster as cables twisted into knots. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Guardian, critical update from Space Command! The primary launch vector for Operation Silent Sentry has been compromised by solar flare activity. We need an immediate recalibration. The launch grid, a 3x3 matrix representing targeting coordinates, must be rotated 90 degrees clockwise. This ensures the payload avoids the radiation surge and reaches its designated orbit. Your precision is paramount – the success of this multi-billion dollar asset and national security depends on your swift and accurate adjustment. Execute the rotation and confirm the new grid configuration.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3500,\"requiredRankLevel\":1,\"emojiSet\":\"nav_alerts\",\"examples\":[{\"input\":[[\"⬆️\",\"⬇️\",\"⬅️\"],[\"➡️\",\"↗️\",\"↖️\"],[\"↘️\",\"↙️\",\"🧭\"]],\"output\":[[\"↘️\",\"➡️\",\"⬆️\"],[\"↙️\",\"↗️\",\"⬇️\"],[\"🧭\",\"↖️\",\"⬅️\"]]},{\"input\":[[\"⬛\",\"⬆️\",\"⬛\"],[\"⬇️\",\"⬛\",\"⬅️\"],[\"⬛\",\"➡️\",\"⬛\"]],\"output\":[[\"⬛\",\"⬇️\",\"⬛\"],[\"➡️\",\"⬛\",\"⬆️\"],[\"⬛\",\"⬅️\",\"⬛\"]]}],\"testInput\":[[\"🧭\",\"↙️\",\"↘️\"],[\"↖️\",\"↗️\",\"➡️\"],[\"⬅️\",\"⬇️\",\"⬆️\"]],\"testOutput\":[[\"⬅️\",\"↖️\",\"🧭\"],[\"⬇️\",\"↗️\",\"↙️\"],[\"⬆️\",\"➡️\",\"↘️\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90 degrees clockwise 🔁.\",\"The element at (row, col) moves to (col, gridSize - 1 - row).\",\"Imagine turning a square piece of paper one quarter turn to the right.\"]},{\"id\":\"PL-003\",\"title\":\"Launch Trajectory Rotation\",\"description\":\"Medical bay scanners couldn't figure out how to rotate X-ray images 90 degrees for proper viewing. The AI kept trying to physically rotate the injured astronaut on the examination table instead of just turning the digital image on the screen. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Rotate trajectory control grid 90° clockwise 🔁 to align with updated launch vector.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":19500,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"⬛\",\"⬛\",\"❌\"],[\"⬛\",\"⚠️\",\"🚨\",\"⬛\"],[\"⬛\",\"🦺\",\"🔥\",\"⬛\"],[\"❄️\",\"⬛\",\"⬛\",\"📍\"]],\"output\":[[\"❄️\",\"⬛\",\"⬛\",\"✅\"],[\"⬛\",\"🦺\",\"⚠️\",\"⬛\"],[\"⬛\",\"🔥\",\"🚨\",\"⬛\"],[\"📍\",\"⬛\",\"⬛\",\"❌\"]]},{\"input\":[[\"⬛\",\"❌\",\"⬛\",\"⬛\"],[\"⚠️\",\"⬛\",\"⬛\",\"🚨\"],[\"⬛\",\"⬛\",\"🦺\",\"⬛\"],[\"⬛\",\"⬛\",\"🔥\",\"❄️\"]],\"output\":[[\"⬛\",\"⬛\",\"⚠️\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"❌\"],[\"🔥\",\"🦺\",\"⬛\",\"⬛\"],[\"❄️\",\"🚨\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"⬛\",\"✅\",\"⬛\",\"❌\"],[\"⚠️\",\"⬛\",\"🚨\",\"⬛\"],[\"⬛\",\"🦺\",\"⬛\",\"🔥\"],[\"❄️\",\"⬛\",\"📍\",\"⬛\"]],\"testOutput\":[[\"❄️\",\"⚠️\",\"⬛\",\"⬛\"],[\"⬛\",\"🦺\",\"✅\",\"⬛\"],[\"📍\",\"🚨\",\"⬛\",\"❌\"],[\"⬛\",\"🔥\",\"⬛\",\"⬛\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90° clockwise 🔁.\",\"Rows become columns from left to right.\",\"⬛ rotates like any other value.\"]},{\"id\":\"PL-004\",\"title\":\"Vertical Mirror Check\",\"description\":\"Mirror pre-launch indicator grid vertically (top ↔ bottom) to verify symmetry.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":5200,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"⬛\"],[\"🔋\",\"🔌\",\"⬛\"],[\"⛽\",\"⬛\",\"☢️\"]],\"output\":[[\"⛽\",\"⬛\",\"☢️\"],[\"🔋\",\"🔌\",\"⬛\"],[\"⚡\",\"⬛\",\"⬛\"]]},{\"input\":[[\"⬛\",\"⚛️\",\"⬛\"],[\"🔗\",\"⬛\",\"⚙️\"],[\"⬛\",\"🔧\",\"⬛\"]],\"output\":[[\"⬛\",\"🔧\",\"⬛\"],[\"🔗\",\"⬛\",\"⚙️\"],[\"⬛\",\"⚛️\",\"⬛\"]]}],\"testInput\":[[\"⚡\",\"⬛\",\"🔋\"],[\"⬛\",\"🔌\",\"⬛\"],[\"⛽\",\"⬛\",\"☢️\"]],\"testOutput\":[[\"⛽\",\"⬛\",\"☢️\"],[\"⬛\",\"🔌\",\"⬛\"],[\"⚡\",\"⬛\",\"🔋\"]],\"hints\":[\"Flip the grid top-to-bottom.\",\"Rows swap positions; columns remain the same.\",\"⬛ moves with the row like any other value.\"]},{\"id\":\"PL-005\",\"title\":\"Pre-Launch 90° Clockwise\",\"description\":\"Medical bay scanners couldn't figure out how to rotate X-ray images 90 degrees for proper viewing. The AI kept trying to physically rotate the injured astronaut on the examination table instead of just turning the digital image on the screen. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Rotate the indicator grid 90° clockwise to match launch orientation.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":5220,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"🔋\"],[\"🔌\",\"⛽\",\"⬛\"],[\"☢️\",\"⬛\",\"⚛️\"]],\"output\":[[\"☢️\",\"🔌\",\"⚡\"],[\"⬛\",\"⛽\",\"⬛\"],[\"⚛️\",\"⬛\",\"🔋\"]]},{\"input\":[[\"⬛\",\"🔗\",\"⬛\"],[\"⚙️\",\"⬛\",\"🔧\"],[\"⬛\",\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"⚙️\",\"⬛\"],[\"⬛\",\"⬛\",\"🔗\"],[\"⬛\",\"🔧\",\"⬛\"]]}],\"testInput\":[[\"⬛\",\"⚡\",\"⬛\"],[\"🔋\",\"⬛\",\"🔌\"],[\"⬛\",\"⛽\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"🔋\",\"⬛\"],[\"⛽\",\"⬛\",\"⚡\"],[\"⬛\",\"🔌\",\"⬛\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90° clockwise.\",\"Rows become columns from left to right.\",\"⬛ rotates like any other cell.\"]},{\"id\":\"PL-006\",\"title\":\"Pre-Launch 180° Rotation\",\"description\":\"Rotate the indicator grid 180° to verify orientation tolerances.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Expert\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":25240,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"⬛\",\"🔋\"],[\"⬛\",\"🔌\",\"⛽\",\"⬛\"],[\"⬛\",\"☢️\",\"⚛️\",\"⬛\"],[\"🔗\",\"⬛\",\"⬛\",\"⚙️\"]],\"output\":[[\"⚙️\",\"⬛\",\"⬛\",\"🔗\"],[\"⬛\",\"⚛️\",\"☢️\",\"⬛\"],[\"⬛\",\"⛽\",\"🔌\",\"⬛\"],[\"🔋\",\"⬛\",\"⬛\",\"⚡\"]]},{\"input\":[[\"⬛\",\"⬛\",\"🔧\",\"⬛\"],[\"⬛\",\"⚙️\",\"⬛\",\"🔗\"],[\"⚛️\",\"⬛\",\"☢️\",\"⬛\"],[\"⬛\",\"⛽\",\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"⬛\",\"⛽\",\"⬛\"],[\"⬛\",\"☢️\",\"⬛\",\"⚛️\"],[\"🔗\",\"⬛\",\"⚙️\",\"⬛\"],[\"⬛\",\"🔧\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"⬛\",\"⚡\",\"⬛\",\"🔋\"],[\"🔌\",\"⬛\",\"⛽\",\"⬛\"],[\"⬛\",\"☢️\",\"⬛\",\"⚛️\"],[\"🔗\",\"⬛\",\"⚙️\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"⚙️\",\"⬛\",\"🔗\"],[\"⚛️\",\"⬛\",\"☢️\",\"⬛\"],[\"⬛\",\"⛽\",\"⬛\",\"🔌\"],[\"🔋\",\"⬛\",\"⚡\",\"⬛\"]],\"hints\":[\"Rotate the grid 180° (flip horizontally then vertically).\",\"Each cell moves to its diagonally opposite position.\",\"⬛ stays background after rotation.\"]},{\"id\":\"PL-007\",\"title\":\"Pre-Launch Main Diagonal Isolation\",\"description\":\"Isolate main diagonal indicators; everything off-diagonal becomes background before ignition.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":15260,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"🔋\",\"🔌\"],[\"⛽\",\"☢️\",\"⚛️\"],[\"🔗\",\"⚙️\",\"🔧\"]],\"output\":[[\"⚡\",\"⬛\",\"⬛\"],[\"⬛\",\"☢️\",\"⬛\"],[\"⬛\",\"⬛\",\"🔧\"]]},{\"input\":[[\"⬛\",\"⛽\",\"⬛\"],[\"🔌\",\"⬛\",\"⚛️\"],[\"⬛\",\"🔋\",\"⬛\"]],\"output\":[[\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"🔋\",\"⬛\",\"⚡\"],[\"⬛\",\"🔌\",\"⬛\"],[\"⛽\",\"⬛\",\"☢️\"]],\"testOutput\":[[\"🔋\",\"⬛\",\"⬛\"],[\"⬛\",\"🔌\",\"⬛\"],[\"⬛\",\"⬛\",\"☢️\"]],\"hints\":[\"Keep only the main diagonal (top-left → bottom-right).\",\"All off-diagonal cells become ⬛.\",\"⬛ indicates cleared background.\"]},{\"id\":\"PL-008\",\"title\":\"Pre-Launch Anti-Diagonal Reflection\",\"description\":\"Reflect the indicator grid across the anti-diagonal (top-right → bottom-left) to verify mirrored readiness.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":5280,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"🔋\"],[\"🔌\",\"⛽\",\"⬛\"],[\"☢️\",\"⬛\",\"⚛️\"]],\"output\":[[\"⚛️\",\"⬛\",\"☢️\"],[\"⬛\",\"⛽\",\"🔌\"],[\"🔋\",\"⬛\",\"⚡\"]]},{\"input\":[[\"⬛\",\"🔗\",\"⚙️\"],[\"⬛\",\"⬛\",\"🔧\"],[\"⚡\",\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"⬛\",\"⚡\"],[\"🔧\",\"⬛\",\"⬛\"],[\"⚙️\",\"🔗\",\"⬛\"]]}],\"testInput\":[[\"🔋\",\"⬛\",\"⬛\"],[\"⬛\",\"🔌\",\"⛽\"],[\"☢️\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"⬛\",\"☢️\"],[\"⛽\",\"🔌\",\"⬛\"],[\"⬛\",\"⬛\",\"🔋\"]],\"hints\":[\"Mirror cells across the anti-diagonal (top-right to bottom-left).\",\"Row index + column index remains constant when swapping.\",\"⬛ reflects like any other cell.\"]},{\"id\":\"PL-009\",\"title\":\"Pre-Launch 270° Rotation\",\"description\":\"The waste management system tried to rotate disposal schedules by 270 degrees but applied three separate 90-degree transforms to the actual rotating waste compactor. The machine spun through three slow quarter-turns, taking 45 minutes to complete what should have been a 5-second data adjustment. 270-degree rotations are particularly challenging because they require understanding that three quarter-turns equal one three-quarter turn, not just applying 90-degree logic three times. This tests deeper spatial reasoning and transformation composition. Rotate the indicator grid 270° clockwise 🔁🔁🔁 (or 90° counter-clockwise 🔄) to match the final launch control orientation.\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11600,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"⬛\",\"🔋\"],[\"⬛\",\"🔌\",\"⛽\",\"⬛\"],[\"⬛\",\"☢️\",\"⚛️\",\"⬛\"],[\"🔗\",\"⬛\",\"⬛\",\"⚙️\"]],\"output\":[[\"🔋\",\"⬛\",\"⬛\",\"⚙️\"],[\"⬛\",\"⛽\",\"⚛️\",\"⬛\"],[\"⬛\",\"🔌\",\"☢️\",\"⬛\"],[\"⚡\",\"⬛\",\"⬛\",\"🔗\"]]},{\"input\":[[\"⬛\",\"⬛\",\"🔧\",\"⬛\"],[\"⬛\",\"⚙️\",\"⬛\",\"🔗\"],[\"⚛️\",\"⬛\",\"☢️\",\"⬛\"],[\"⬛\",\"⛽\",\"⬛\",\"⬛\"]],\"output\":[[\"⬛\",\"🔗\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"☢️\",\"⚙️\"],[\"⛽\",\"⬛\",\"⬛\",\"🔧\"],[\"⬛\",\"⚛️\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"⬛\",\"⚡\",\"⬛\",\"🔋\"],[\"🔌\",\"⬛\",\"⛽\",\"⬛\"],[\"⬛\",\"☢️\",\"⬛\",\"⚛️\"],[\"🔗\",\"⬛\",\"⚙️\",\"⬛\"]],\"testOutput\":[[\"🔋\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⛽\",\"⚛️\",\"⚡\"],[\"⬛\",\"🔌\",\"☢️\",\"⬛\"],[\"🔗\",\"⬛\",\"⬛\",\"⚙️\"]],\"hints\":[\"This is like spinning a toy three times to the right instead of once to the left to end up in the same place. You know they're the same, but computers have to think step-by-step through each turn.\",\"Imagine you're playing 'Simon Says' and Simon says 'turn around 3/4 of the way.' You'd just turn almost all the way around and stop. But a computer might think it has to turn a little bit, then turn again, then turn again, taking much longer to get to the same place.\",\"It's like when you're unscrewing a jar lid. You know you need to turn it mostly around to the left, but a computer might think it needs to turn it a little to the right three times instead of just turning left once. Both ways work, but one is much sillier.\",\"Rotate the entire grid 270° clockwise 🔁🔁🔁 you can also think of this as one 90° counter-clockwise 🔄 rotation.\",\"Columns become rows from bottom to top.\",\"⬛ rotates like any other cell.\"]},{\"id\":\"PL-206\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌍\",\"⭐\"],[\"⬛\",\"🌏\"]],\"output\":[[\"🪐\",\"⭐\"],[\"⬛\",\"🌍\"]]},{\"input\":[[\"⬛\",\"⭐\"],[\"⭐\",\"✨\"]],\"output\":[[\"🌍\",\"✨\"],[\"🪐\",\"🌍\"]]}],\"testInput\":[[\"✨\",\"🌟\"],[\"⬛\",\"🌟\"]],\"testOutput\":[[\"✨\",\"⬛\"],[\"🌟\",\"🌟\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"PL-207\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌏\",\"🌟\"],[\"🌏\",\"🪐\"]],\"output\":[[\"🪐\",\"🌟\"],[\"🌎\",\"✨\"]]},{\"input\":[[\"⬛\",\"🪐\"],[\"🌠\",\"💫\"]],\"output\":[[\"⬛\",\"⭐\"],[\"🌎\",\"⭐\"]]}],\"testInput\":[[\"🌍\",\"✨\"],[\"🌎\",\"🌟\"]],\"testOutput\":[[\"🌟\",\"✨\"],[\"🌎\",\"🌍\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"PL-208\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌠\",\"🌟\",\"🌠\"],[\"🪐\",\"🌎\",\"⬛\"],[\"⭐\",\"🌟\",\"🌎\"]],\"output\":[[\"🌎\",\"🌎\",\"💫\"],[\"💫\",\"⭐\",\"🌎\"],[\"✨\",\"🌍\",\"🪐\"]]},{\"input\":[[\"🌎\",\"💫\",\"🌎\"],[\"🌟\",\"⬛\",\"💫\"],[\"💫\",\"🌍\",\"✨\"]],\"output\":[[\"🌎\",\"🌍\",\"🌠\"],[\"🪐\",\"🌠\",\"🌏\"],[\"🌟\",\"🌠\",\"🌎\"]]}],\"testInput\":[[\"🌍\",\"💫\",\"🌎\"],[\"✨\",\"🌏\",\"🌠\"],[\"🌎\",\"🌍\",\"🌟\"]],\"testOutput\":[[\"🌍\",\"✨\",\"🌎\"],[\"💫\",\"🌏\",\"🌍\"],[\"🌎\",\"🌠\",\"🌟\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"PL-209\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌟\",\"🌏\",\"🌠\"],[\"✨\",\"🌠\",\"🌠\"],[\"⬛\",\"🌟\",\"💫\"]],\"output\":[[\"🌎\",\"🌏\",\"🪐\"],[\"⬛\",\"⭐\",\"⭐\"],[\"💫\",\"⭐\",\"🪐\"]]},{\"input\":[[\"🌏\",\"⬛\",\"🌟\"],[\"💫\",\"🌎\",\"🌍\"],[\"⭐\",\"🌠\",\"✨\"]],\"output\":[[\"🌏\",\"🌎\",\"⭐\"],[\"🌎\",\"🌎\",\"🌎\"],[\"⬛\",\"🌎\",\"🌍\"]]}],\"testInput\":[[\"🌟\",\"🌏\",\"⬛\"],[\"🌟\",\"💫\",\"⬛\"],[\"🌎\",\"💫\",\"🌎\"]],\"testOutput\":[[\"🌎\",\"⬛\",\"⬛\"],[\"💫\",\"💫\",\"🌏\"],[\"🌎\",\"🌟\",\"🌟\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"PL-210\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"🌏\",\"🌏\",\"⬛\",\"⭐\"],[\"🌏\",\"⬛\",\"🌠\",\"💫\"],[\"🪐\",\"⬛\",\"✨\",\"🌏\"],[\"✨\",\"🌎\",\"🌟\",\"⬛\"]],\"output\":[[\"✨\",\"🌍\",\"🪐\",\"⭐\"],[\"🌎\",\"🌎\",\"⭐\",\"⬛\"],[\"🌍\",\"⭐\",\"🌍\",\"✨\"],[\"🌠\",\"⭐\",\"⭐\",\"🌍\"]]},{\"input\":[[\"🪐\",\"🌟\",\"💫\",\"🌟\"],[\"🌍\",\"✨\",\"🌏\",\"⬛\"],[\"💫\",\"🌟\",\"🌟\",\"🌎\"],[\"💫\",\"💫\",\"🌍\",\"🌠\"]],\"output\":[[\"🌍\",\"🌟\",\"⬛\",\"🌍\"],[\"⭐\",\"✨\",\"✨\",\"🌠\"],[\"⭐\",\"⭐\",\"⬛\",\"🌏\"],[\"🌠\",\"🌏\",\"🌠\",\"✨\"]]}],\"testInput\":[[\"🪐\",\"🌏\",\"🌠\",\"🌍\"],[\"🌍\",\"🌎\",\"💫\",\"🌍\"],[\"🌏\",\"🌠\",\"💫\",\"⭐\"],[\"💫\",\"🌠\",\"🪐\",\"💫\"]],\"testOutput\":[[\"🪐\",\"🌍\",\"🌏\",\"💫\"],[\"🌏\",\"🌎\",\"🌠\",\"🌠\"],[\"🌠\",\"💫\",\"💫\",\"🪐\"],[\"🌍\",\"🌍\",\"⭐\",\"💫\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"PL-211\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🚀 Pre-Launch Ops\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set1\",\"examples\":[{\"input\":[[\"💫\",\"✨\",\"⭐\",\"⭐\"],[\"🌟\",\"🌏\",\"🌍\",\"✨\"],[\"🌍\",\"🌠\",\"⭐\",\"⭐\"],[\"🪐\",\"🪐\",\"🌟\",\"🌍\"]],\"output\":[[\"🌍\",\"⬛\",\"🌠\",\"🪐\"],[\"✨\",\"🌟\",\"🌟\",\"💫\"],[\"🌠\",\"🪐\",\"⭐\",\"🌏\"],[\"⬛\",\"🌟\",\"🌏\",\"⭐\"]]},{\"input\":[[\"💫\",\"🌠\",\"🌏\",\"🌠\"],[\"💫\",\"🌠\",\"🌟\",\"🌟\"],[\"⬛\",\"⭐\",\"🌠\",\"💫\"],[\"🌠\",\"🌏\",\"🌏\",\"🌟\"]],\"output\":[[\"🌍\",\"🪐\",\"🌎\",\"✨\"],[\"🌎\",\"🌠\",\"💫\",\"🌟\"],[\"🌎\",\"⭐\",\"💫\",\"🌠\"],[\"⬛\",\"🌏\",\"🌟\",\"✨\"]]}],\"testInput\":[[\"🌠\",\"🌎\",\"💫\",\"⬛\"],[\"⭐\",\"💫\",\"💫\",\"🌍\"],[\"🌟\",\"⭐\",\"⬛\",\"🌎\"],[\"⭐\",\"✨\",\"🪐\",\"🌟\"]],\"testOutput\":[[\"🌟\",\"🌎\",\"🌍\",\"⬛\"],[\"🪐\",\"⬛\",\"💫\",\"💫\"],[\"✨\",\"⭐\",\"💫\",\"🌎\"],[\"⭐\",\"🌟\",\"⭐\",\"🌠\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"PWR-001\",\"title\":\"Power Grid Cascade Analysis\",\"description\":\"Joffrey Beezooos's solar array controller spent 23 minutes calculating how to turn a fuel systems diagram sideways. It kept asking 'If I move this corner here, where do the other three corners go?' while the human operator just tilted their head. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Energy distribution systems require cascade failure prevention. Rotate the component matrix 180° to predict cascade flow.\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11900,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"⬛\",\"🔋\"],[\"⬛\",\"🔌\",\"⛽\",\"⬛\"],[\"⬛\",\"⛽\",\"🔌\",\"⬛\"],[\"☢️\",\"⬛\",\"⬛\",\"⚛️\"]],\"output\":[[\"⚛️\",\"⬛\",\"⬛\",\"☢️\"],[\"⬛\",\"⛽\",\"🔌\",\"⬛\"],[\"⬛\",\"🔌\",\"⛽\",\"⬛\"],[\"🔋\",\"⬛\",\"⬛\",\"⚡\"]]},{\"input\":[[\"🔗\",\"⚙️\",\"⬛\",\"⬛\"],[\"⬛\",\"🔧\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"☢️\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"🔋\"]],\"output\":[[\"🔋\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"☢️\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"🔧\",\"⬛\"],[\"⬛\",\"⬛\",\"⚙️\",\"🔗\"]]}],\"testInput\":[[\"⚙️\",\"⬛\",\"⬛\",\"⚡\"],[\"⬛\",\"⚛️\",\"🔗\",\"⬛\"],[\"⬛\",\"🔗\",\"⚛️\",\"⬛\"],[\"🔋\",\"⬛\",\"⬛\",\"☢️\"]],\"testOutput\":[[\"☢️\",\"⬛\",\"⬛\",\"🔋\"],[\"⬛\",\"🔗\",\"⚛️\",\"⬛\"],[\"⬛\",\"⚛️\",\"🔗\",\"⬛\"],[\"⚡\",\"⬛\",\"⬛\",\"⚙️\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Visualize the grid turning upside-down and reversed.\",\"A 180° rotation moves each component to its diagonally opposite position.\",\"Background cells ⬛ remain unchanged after rotation.\"]},{\"id\":\"PWR-002\",\"title\":\"Main Diagonal Isolation\",\"description\":\"Complex power grids require isolating main diagonal conductors. Retain only components on the main diagonal; others become background (0).\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":11150,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"⬛\",\"🔋\"],[\"⬛\",\"🔌\",\"⬛\"],[\"⛽\",\"⬛\",\"☢️\"]],\"output\":[[\"⚡\",\"⬛\",\"⬛\"],[\"⬛\",\"🔌\",\"⬛\"],[\"⬛\",\"⬛\",\"☢️\"]]},{\"input\":[[\"⬛\",\"⛽\",\"☢️\"],[\"⚛️\",\"🔗\",\"⚙️\"],[\"🔧\",\"⬛\",\"⚡\"]],\"output\":[[\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"🔗\",\"⬛\"],[\"⬛\",\"⬛\",\"⚡\"]]}],\"testInput\":[[\"🔋\",\"🔌\",\"⬛\"],[\"⬛\",\"⛽\",\"⬛\"],[\"⚡\",\"⬛\",\"☢️\"]],\"testOutput\":[[\"🔋\",\"⬛\",\"⬛\"],[\"⬛\",\"⛽\",\"⬛\"],[\"⬛\",\"⬛\",\"☢️\"]],\"hints\":[\"Focus only on the main diagonal running top-left to bottom-right.\",\"All non-diagonal positions become ⬛.\",\"Diagonal elements keep their original values and positions.\"]},{\"id\":\"PWR-003\",\"title\":\"Edge Mirror Stabilization\",\"description\":\"Stabilize power grid by reflecting edge conductors across both axes.\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Advanced\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":21300,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚡\",\"🔋\",\"🔌\"],[\"⛽\",\"⬛\",\"☢️\"],[\"⚛️\",\"🔗\",\"⚙️\"]],\"output\":[[\"⚙️\",\"🔗\",\"⚛️\"],[\"☢️\",\"⬛\",\"⛽\"],[\"🔌\",\"🔋\",\"⚡\"]]},{\"input\":[[\"🔋\",\"⬛\",\"⛽\"],[\"⬛\",\"☢️\",\"⬛\"],[\"🔗\",\"⬛\",\"🔧\"]],\"output\":[[\"🔧\",\"⬛\",\"🔗\"],[\"⬛\",\"☢️\",\"⬛\"],[\"⛽\",\"⬛\",\"🔋\"]]}],\"testInput\":[[\"⚡\",\"⬛\",\"⚙️\"],[\"⬛\",\"⚛️\",\"⬛\"],[\"🔌\",\"⬛\",\"⛽\"]],\"testOutput\":[[\"⛽\",\"⬛\",\"🔌\"],[\"⬛\",\"⚛️\",\"⬛\"],[\"⚙️\",\"⬛\",\"⚡\"]],\"hints\":[\"Think of flipping the grid horizontally and vertically together.\",\"Edges move to opposite edges; the centre stays put.\",\"This is equivalent to rotating 180°.\"]},{\"id\":\"PWR-004\",\"title\":\"Power Node Fault Extraction\",\"description\":\"Example of Power Node Fault Extraction\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":111100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\"],[\"🔋\",\"⬛\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\"],[\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\"],[\"🔋\",\"🔋\",\"🔋\",\"⬛\",\"🔋\",\"🔋\",\"🔋\"],[\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\"],[\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"⬛\",\"🔋\"],[\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\",\"🔋\"]],\"output\":[[\"🔋\",\"🔋\",\"🔋\"],[\"🔋\",\"⬛\",\"🔋\"],[\"🔋\",\"🔋\",\"🔋\"]]},{\"input\":[[\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\"],[\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"⬛\",\"🔌\"],[\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\"],[\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\"],[\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\"],[\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\"],[\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\",\"🔌\"]],\"output\":[[\"🔌\",\"🔌\",\"🔌\"],[\"🔌\",\"⬛\",\"🔌\"],[\"🔌\",\"🔌\",\"🔌\"]]}],\"testInput\":[[\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\"],[\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\"],[\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\"],[\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\"],[\"⚡\",\"⚡\",\"⚡\",\"⬛\",\"⚡\",\"⚡\",\"⚡\"],[\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\"],[\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\",\"⚡\"]],\"testOutput\":[[\"⚡\",\"⚡\",\"⚡\"],[\"⚡\",\"⬛\",\"⚡\"],[\"⚡\",\"⚡\",\"⚡\"]],\"hints\":[\"Scan rows left-to-right, top-to-bottom to locate the ⬛ fault cell. Make your grid to isolate the fault cell.\",\"Isolate the fault cell in the middle of the grid.\",\"⬛ indicates a fault; all other integers represent functioning power nodes.\"]},{\"id\":\"PWR-104\",\"title\":\"Energy Flow Pattern Analysis\",\"description\":\"Complete the energy flow pattern by identifying the visual sequence. Each row and column follows a rotating energy cycle.\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":21375,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⬛\",\"⬛\",\"🔋\",\"🔌\"],[\"⚡\",\"⬛\",\"🔌\",\"⬛\"],[\"🔋\",\"🔌\",\"⛽\",\"⬛\"],[\"🔌\",\"⬛\",\"⬛\",\"⚛️\"]],\"output\":[[\"⬛\",\"⚡\",\"🔋\",\"🔌\"],[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"🔌\",\"⛽\",\"☢️\",\"⚛️\"]]},{\"input\":[[\"⬛\",\"⚡\",\"🔋\",\"⬛\"],[\"⬛\",\"🔋\",\"⬛\",\"⬛\"],[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"⬛\",\"⛽\",\"☢️\",\"⬛\"]],\"output\":[[\"⬛\",\"⚡\",\"🔋\",\"🔌\"],[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"🔌\",\"⛽\",\"☢️\",\"⚛️\"]]}],\"testInput\":[[\"⬛\",\"⬛\",\"🔋\",\"⬛\"],[\"⚡\",\"⬛\",\"🔌\",\"⛽\"],[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"⬛\",\"⬛\",\"⬛\",\"⚛️\"]],\"testOutput\":[[\"⬛\",\"⚡\",\"🔋\",\"🔌\"],[\"⚡\",\"🔋\",\"🔌\",\"⛽\"],[\"🔋\",\"🔌\",\"⛽\",\"☢️\"],[\"🔌\",\"⛽\",\"☢️\",\"⚛️\"]],\"hints\":[\"Each row follows the same energy flow sequence, but starts at a different point in the cycle.\",\"Look at complete rows/columns to identify the repeating pattern: each position increases by 1.\",\"The pattern creates diagonal shifts - row 0 starts with 0, row 1 starts with 1, etc.\"],\"transformationType\":\"visual_sequence_pattern\",\"generated\":true},{\"id\":\"PWR-201\",\"title\":\"system efficiency Rotation Analysis\",\"description\":\"The communications array got stuck trying to rotate antenna positioning data 90 degrees. Instead of simply turning the coordinate map, it began physically rotating the entire 50-ton antenna assembly, creating a slow-motion disaster as cables twisted into knots. 90-degree rotations combine spatial reasoning with coordinate transformation. AI must understand how positions change in 2D space while maintaining object relationships - a complex geometric abstraction that requires true spatial intelligence. Analyze the system efficiency by rotating the input grid 90 degrees clockwise.\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":1675,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚛️\",\"☢️\",\"🔧\",\"⬛\"],[\"🔧\",\"🔗\",\"⬛\",\"⚙️\"],[\"🔋\",\"⚙️\",\"⛽\",\"🔌\"],[\"⚙️\",\"🔗\",\"🔧\",\"⚡\"]],\"output\":[[\"⚙️\",\"🔋\",\"🔧\",\"⚛️\"],[\"🔗\",\"⚙️\",\"🔗\",\"☢️\"],[\"🔧\",\"⛽\",\"⬛\",\"🔧\"],[\"⚡\",\"🔌\",\"⚙️\",\"⬛\"]]},{\"input\":[[\"⬛\",\"⚙️\",\"⚙️\",\"☢️\"],[\"🔧\",\"⛽\",\"⬛\",\"🔌\"],[\"🔧\",\"⚛️\",\"⛽\",\"⚛️\"],[\"🔗\",\"⚙️\",\"⚛️\",\"🔗\"]],\"output\":[[\"🔗\",\"🔧\",\"🔧\",\"⬛\"],[\"⚙️\",\"⚛️\",\"⛽\",\"⚙️\"],[\"⚛️\",\"⛽\",\"⬛\",\"⚙️\"],[\"🔗\",\"⚛️\",\"🔌\",\"☢️\"]]}],\"testInput\":[[\"⚙️\",\"⬛\",\"🔧\",\"🔋\"],[\"🔧\",\"⚙️\",\"🔌\",\"⚙️\"],[\"⬛\",\"🔗\",\"🔗\",\"⚙️\"],[\"⬛\",\"🔗\",\"⚛️\",\"🔌\"]],\"testOutput\":[[\"⬛\",\"⬛\",\"🔧\",\"⚙️\"],[\"🔗\",\"🔗\",\"⚙️\",\"⬛\"],[\"⚛️\",\"🔗\",\"🔌\",\"🔧\"],[\"🔌\",\"⚙️\",\"⚙️\",\"🔋\"]],\"hints\":[\"When you turn a picture sideways, you just know what it looks like. But computers have to figure out where every single dot should move when you spin something. It's like doing a puzzle where every piece changes places.\",\"Think about when you turn your head to look at something sideways. You don't have to think about it - you just do it. But a computer is like someone who has to carefully move every toy in your room to new spots just to see what it looks like from a different angle.\",\"It's like playing with a kaleidoscope. When you turn it, all the pretty colors move to new places, but you can still see it's the same pattern. A computer would have to track where each tiny piece of color went and calculate its new home.\",\"Rotate the entire grid 90 degrees clockwise 🔃 (¼ turn to the right).\",\"The top row becomes the rightmost column, reading from top to bottom.\",\"Each column in the original becomes a row in the result, with order reversed.\"],\"transformationType\":\"rotation_90deg\",\"generated\":true},{\"id\":\"PWR-230\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔗\",\"🔋\"],[\"🔌\",\"⚡\"]],\"output\":[[\"⬛\",\"🔌\"],[\"🔗\",\"🔌\"]]},{\"input\":[[\"⛽\",\"🔧\"],[\"🔗\",\"⬛\"]],\"output\":[[\"🔌\",\"🔧\"],[\"⛽\",\"⚙️\"]]}],\"testInput\":[[\"🔧\",\"☢️\"],[\"⚙️\",\"☢️\"]],\"testOutput\":[[\"🔧\",\"⚙️\"],[\"☢️\",\"☢️\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"PWR-231\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔌\",\"🔧\"],[\"⚛️\",\"⬛\"]],\"output\":[[\"⛽\",\"🔋\"],[\"⬛\",\"⚛️\"]]},{\"input\":[[\"⚛️\",\"🔧\"],[\"🔗\",\"🔧\"]],\"output\":[[\"☢️\",\"⬛\"],[\"⬛\",\"☢️\"]]}],\"testInput\":[[\"⚡\",\"🔌\"],[\"🔌\",\"🔌\"]],\"testOutput\":[[\"🔌\",\"🔌\"],[\"🔌\",\"⚡\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"PWR-232\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔌\",\"⚡\",\"⚙️\"],[\"🔧\",\"🔗\",\"⚛️\"],[\"⬛\",\"⚡\",\"⬛\"]],\"output\":[[\"⚙️\",\"🔋\",\"🔌\"],[\"🔋\",\"☢️\",\"⚙️\"],[\"⚙️\",\"⚙️\",\"⚡\"]]},{\"input\":[[\"☢️\",\"🔗\",\"⚛️\"],[\"⚙️\",\"⬛\",\"⛽\"],[\"🔗\",\"⬛\",\"🔗\"]],\"output\":[[\"🔗\",\"⚙️\",\"⚡\"],[\"⚡\",\"☢️\",\"🔗\"],[\"⛽\",\"🔧\",\"⚡\"]]}],\"testInput\":[[\"⛽\",\"⚡\",\"⚛️\"],[\"⚛️\",\"🔌\",\"⚙️\"],[\"⬛\",\"⚡\",\"🔌\"]],\"testOutput\":[[\"⛽\",\"⚛️\",\"⬛\"],[\"⚡\",\"🔌\",\"⚡\"],[\"⚛️\",\"⚙️\",\"🔌\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"PWR-233\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⚙️\",\"⛽\",\"🔋\"],[\"⚡\",\"☢️\",\"☢️\"],[\"🔋\",\"🔌\",\"🔌\"]],\"output\":[[\"☢️\",\"⚛️\",\"⚙️\"],[\"🔋\",\"⚡\",\"⚡\"],[\"🔧\",\"⚡\",\"⚡\"]]},{\"input\":[[\"⚙️\",\"⛽\",\"🔋\"],[\"🔌\",\"☢️\",\"⚡\"],[\"☢️\",\"🔧\",\"⚛️\"]],\"output\":[[\"🔧\",\"⚛️\",\"🔌\"],[\"⚙️\",\"🔌\",\"⚡\"],[\"🔋\",\"🔌\",\"⬛\"]]}],\"testInput\":[[\"⚙️\",\"🔋\",\"⛽\"],[\"⚛️\",\"⚛️\",\"🔋\"],[\"🔧\",\"🔗\",\"🔋\"]],\"testOutput\":[[\"🔋\",\"🔋\",\"⛽\"],[\"🔗\",\"⚛️\",\"🔋\"],[\"🔧\",\"⚛️\",\"⚙️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"PWR-234\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"⬛\",\"⚛️\",\"🔌\",\"⬛\"],[\"⚛️\",\"🔌\",\"🔧\",\"⚛️\"],[\"🔧\",\"⚛️\",\"⛽\",\"⚙️\"],[\"⬛\",\"🔧\",\"⚙️\",\"🔌\"]],\"output\":[[\"🔧\",\"🔌\",\"⚡\",\"⚛️\"],[\"🔧\",\"⚡\",\"🔋\",\"⬛\"],[\"☢️\",\"⬛\",\"⛽\",\"🔧\"],[\"⚛️\",\"⚡\",\"⚡\",\"⚡\"]]},{\"input\":[[\"⚡\",\"⚛️\",\"🔧\",\"⬛\"],[\"⚙️\",\"⚙️\",\"🔗\",\"🔌\"],[\"⚛️\",\"⚙️\",\"⚙️\",\"☢️\"],[\"⬛\",\"🔗\",\"🔌\",\"⚡\"]],\"output\":[[\"⛽\",\"⬛\",\"🔋\",\"⚙️\"],[\"⚛️\",\"⚡\",\"⚙️\",\"⚡\"],[\"🔗\",\"⬛\",\"🔌\",\"🔌\"],[\"🔧\",\"⛽\",\"⛽\",\"⚛️\"]]}],\"testInput\":[[\"🔋\",\"🔋\",\"🔌\",\"⛽\"],[\"☢️\",\"⬛\",\"🔌\",\"⚛️\"],[\"🔧\",\"🔧\",\"🔋\",\"⛽\"],[\"⛽\",\"⚙️\",\"☢️\",\"⬛\"]],\"testOutput\":[[\"🔋\",\"☢️\",\"🔧\",\"⛽\"],[\"🔋\",\"⬛\",\"🔧\",\"⚙️\"],[\"🔌\",\"🔌\",\"🔋\",\"☢️\"],[\"⛽\",\"⚛️\",\"⛽\",\"⬛\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"PWR-235\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"⚡ Power Systems\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"tech_set1\",\"examples\":[{\"input\":[[\"🔗\",\"⚡\",\"🔗\",\"🔋\"],[\"⚡\",\"⚛️\",\"☢️\",\"🔌\"],[\"☢️\",\"🔋\",\"⚙️\",\"🔧\"],[\"⚙️\",\"🔧\",\"⛽\",\"🔌\"]],\"output\":[[\"⚡\",\"⛽\",\"🔗\",\"🔋\"],[\"🔋\",\"🔋\",\"⬛\",\"⚛️\"],[\"🔌\",\"🔗\",\"🔋\",\"⚛️\"],[\"☢️\",\"☢️\",\"⚡\",\"⛽\"]]},{\"input\":[[\"🔋\",\"🔧\",\"⚙️\",\"⚛️\"],[\"⚛️\",\"🔧\",\"🔗\",\"☢️\"],[\"⚡\",\"⬛\",\"🔌\",\"⚡\"],[\"⚙️\",\"🔧\",\"⛽\",\"🔋\"]],\"output\":[[\"⚛️\",\"🔋\",\"🔗\",\"⬛\"],[\"⚡\",\"🔋\",\"🔗\",\"⬛\"],[\"⬛\",\"🔗\",\"🔌\",\"⛽\"],[\"🔋\",\"🔗\",\"⛽\",\"🔧\"]]}],\"testInput\":[[\"⚛️\",\"⬛\",\"🔌\",\"⛽\"],[\"🔧\",\"⚡\",\"☢️\",\"⚛️\"],[\"⚛️\",\"⚙️\",\"⚡\",\"⚙️\"],[\"⬛\",\"⛽\",\"🔧\",\"🔌\"]],\"testOutput\":[[\"🔌\",\"⚙️\",\"⚛️\",\"⛽\"],[\"🔧\",\"⚡\",\"☢️\",\"🔌\"],[\"⛽\",\"⚙️\",\"⚡\",\"⬛\"],[\"⬛\",\"⚛️\",\"🔧\",\"⚛️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"SEC-001\",\"title\":\"Security Grid Pattern Lock\",\"description\":\"The doors are stuck because the ship’s super-smart AI is overthinking the grid pattern—running a million fancy rules instead of spotting the easy answer you see right away. Look at the mess the AI made in the output grid in example 2! We can't trust the AI for this one, so we need you to fix it so the doors slide open! Often, quick human intuition beats tangled robot 🤖 logic.\",\"category\":\"🔐 Security Systems\",\"difficulty\":\"Basic\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":3180,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"❌\",\"✅\"],[\"❌\",\"⬛\",\"❌\"],[\"✅\",\"❌\",\"✅\"]],\"output\":[[\"✅\",\"❌\",\"✅\"],[\"❌\",\"✅\",\"❌\"],[\"✅\",\"❌\",\"✅\"]]},{\"input\":[[\"⚠️\",\"🚨\",\"⚠️\"],[\"🚨\",\"⬛\",\"🚨\"],[\"⚠️\",\"🚨\",\"⚠️\"]],\"output\":[[\"🤪\",\"🦄\",\"🚦\"],[\"🎡\",\"🍕\",\"☀\"],[\"✖\",\"🤖\",\"🤪\"]]}],\"testInput\":[[\"🎯\",\"📍\",\"🎯\"],[\"📍\",\"⬛\",\"📍\"],[\"🎯\",\"📍\",\"🎯\"]],\"testOutput\":[[\"🎯\",\"📍\",\"🎯\"],[\"📍\",\"🎯\",\"📍\"],[\"🎯\",\"📍\",\"🎯\"]],\"hints\":[\"The center cell should match the corner pattern.\",\"Look at the alternating symbol pattern around the edges.\",\"The missing center takes the symbol that appears in the corners.\"]},{\"id\":\"SEC-003\",\"title\":\"Advanced Security Anti-Diagonal Extraction\",\"description\":\"Complex access control systems require anti-diagonal element isolation. Only anti-diagonal elements remain in the security matrix.\",\"category\":\"🔐 Security Systems\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":110000,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"❌\",\"⚠️\"],[\"🦺\",\"🔥\",\"❄️\"],[\"⚠️\",\"✅\",\"❌\"]],\"output\":[[\"⬛\",\"⬛\",\"⚠️\"],[\"⬛\",\"🔥\",\"⬛\"],[\"⚠️\",\"⬛\",\"⬛\"]]}],\"testInput\":[[\"🔥\",\"📍\",\"✅\"],[\"❌\",\"⚠️\",\"🚨\"],[\"✅\",\"🔥\",\"📍\"]],\"testOutput\":[[\"⬛\",\"⬛\",\"✅\"],[\"⬛\",\"⚠️\",\"⬛\"],[\"✅\",\"⬛\",\"⬛\"]],\"hints\":[\"Only elements on the anti-diagonal are kept.\",\"The anti-diagonal runs from top-right to bottom-left.\",\"All other positions become ⬛.\"]},{\"id\":\"SEC-004\",\"title\":\"Advanced Security Matrix Layering\",\"description\":\"Complex access control systems require multi-layer security patterns. Elements layer in concentric rectangular patterns.\",\"category\":\"🔐 Security Systems\",\"difficulty\":\"Officer (Expert)\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":21220,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"❌\",\"⚠️\",\"🚨\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]],\"output\":[[\"✅\",\"❌\",\"⚠️\",\"🚨\"],[\"✅\",\"❌\",\"⚠️\",\"🚨\"],[\"✅\",\"❌\",\"⚠️\",\"🚨\"],[\"✅\",\"❌\",\"⚠️\",\"🚨\"]]}],\"testInput\":[[\"🦺\",\"🔥\",\"❄️\",\"📍\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"],[\"⬛\",\"⬛\",\"⬛\",\"⬛\"]],\"testOutput\":[[\"🦺\",\"🔥\",\"❄️\",\"📍\"],[\"🦺\",\"🔥\",\"❄️\",\"📍\"],[\"🦺\",\"🔥\",\"❄️\",\"📍\"],[\"🦺\",\"🔥\",\"❄️\",\"📍\"]],\"hints\":[\"The top row pattern repeats vertically throughout the grid.\",\"Each column maintains its symbol from the top row.\",\"Security layers propagate downward in vertical bands.\"]},{\"id\":\"SEC-005\",\"title\":\"Security Element Clustering\",\"description\":\"Access control systems require element clustering operations. Similar elements group together in adjacent positions.\",\"category\":\"🔐 Security Systems\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":11315,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"🎯\",\"📍\"],[\"📍\",\"🎯\"]],\"output\":[[\"🎯\",\"🎯\"],[\"📍\",\"📍\"]]},{\"input\":[[\"🦺\",\"🔥\"],[\"🔥\",\"🦺\"]],\"output\":[[\"🦺\",\"🦺\"],[\"🔥\",\"🔥\"]]}],\"testInput\":[[\"✅\",\"❌\"],[\"❌\",\"✅\"]],\"testOutput\":[[\"✅\",\"✅\"],[\"❌\",\"❌\"]],\"hints\":[\"Group identical elements together in the same row.\",\"Top row collects one type, bottom row collects the other.\",\"Maintain clustering by element type rather than position.\"]},{\"id\":\"SEC-100\",\"title\":\"Defense matrix Rotation Analysis\",\"description\":\"The waste management system tried to rotate disposal schedules by 270 degrees but applied three separate 90-degree transforms to the actual rotating waste compactor. The machine spun through three slow quarter-turns, taking 45 minutes to complete what should have been a 5-second data adjustment. 270-degree rotations are particularly challenging because they require understanding that three quarter-turns equal one three-quarter turn, not just applying 90-degree logic three times. This tests deeper spatial reasoning and transformation composition. Analyze the defense matrix by rotating the input grid 270 degrees clockwise 🔁🔁🔁.\",\"category\":\"🔒 Security Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":4125,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"🎯\",\"🔥\",\"🔥\",\"🎯\"],[\"❄️\",\"🎯\",\"📍\",\"🚨\"],[\"⚠️\",\"❄️\",\"⬛\",\"⬛\"],[\"📍\",\"⬛\",\"🔥\",\"⬛\"]],\"output\":[[\"🎯\",\"🚨\",\"⬛\",\"⬛\"],[\"🔥\",\"📍\",\"⬛\",\"🔥\"],[\"🔥\",\"🎯\",\"❄️\",\"⬛\"],[\"🎯\",\"❄️\",\"⚠️\",\"📍\"]]},{\"input\":[[\"❌\",\"🔥\",\"⚠️\",\"🎯\"],[\"📍\",\"⬛\",\"❌\",\"⚠️\"],[\"❄️\",\"❄️\",\"✅\",\"🦺\"],[\"🔥\",\"🚨\",\"🎯\",\"🚨\"]],\"output\":[[\"🎯\",\"⚠️\",\"🦺\",\"🚨\"],[\"⚠️\",\"❌\",\"✅\",\"🎯\"],[\"🔥\",\"⬛\",\"❄️\",\"🚨\"],[\"❌\",\"📍\",\"❄️\",\"🔥\"]]}],\"testInput\":[[\"⬛\",\"🚨\",\"🎯\",\"🚨\"],[\"📍\",\"⬛\",\"✅\",\"📍\"],[\"⚠️\",\"🎯\",\"❌\",\"🔥\"],[\"❌\",\"🎯\",\"📍\",\"❄️\"]],\"testOutput\":[[\"🚨\",\"📍\",\"🔥\",\"❄️\"],[\"🎯\",\"✅\",\"❌\",\"📍\"],[\"🚨\",\"⬛\",\"🎯\",\"🎯\"],[\"⬛\",\"📍\",\"⚠️\",\"❌\"]],\"hints\":[\"This is like spinning a toy three times to the right instead of once to the left to end up in the same place. You know they're the same, but computers have to think step-by-step through each turn.\",\"Imagine you're playing 'Simon Says' and Simon says 'turn around 3/4 of the way.' You'd just turn almost all the way around and stop. But a computer might think it has to turn a little bit, then turn again, then turn again, taking much longer to get to the same place.\",\"It's like when you're unscrewing a jar lid. You know you need to turn it mostly around to the left, but a computer might think it needs to turn it a little to the right three times instead of just turning left once. Both ways work, but one is much sillier.\",\"Rotate the entire grid 270 degrees clockwise 🔁🔁🔁 (¾ turn to the right). You can also think of this as 90 degrees counter-clockwise 🔄 (¼ turn to the left).\",\"The leftmost column becomes the top row, reading from left to right.\",\"Each row in the original becomes a column in the result, with order shifted accordingly.\"],\"transformationType\":\"rotation_270deg\",\"generated\":true},{\"id\":\"SEC-101\",\"title\":\"defense matrix Rotation Analysis\",\"description\":\"Airlock control systems got confused trying to rotate safety protocols 270 degrees. Instead of one smooth turn, it performed three separate 90-degree rotations of the actual airlock chamber, cycling through pressurization three times and trapping two astronauts in the middle. 270-degree rotations are particularly challenging because they require understanding that three quarter-turns equal one three-quarter turn, not just applying 90-degree logic three times. This tests deeper spatial reasoning and transformation composition. Analyze the defense matrix by rotating the input grid 270 degrees clockwise 🔁🔁🔁.\",\"category\":\"🔒 Security Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":4125,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"✅\",\"🎯\",\"📍\",\"📍\"],[\"📍\",\"⬛\",\"⬛\",\"❄️\"],[\"⬛\",\"🚨\",\"🎯\",\"🦺\"],[\"🎯\",\"🎯\",\"📍\",\"🔥\"]],\"output\":[[\"📍\",\"❄️\",\"🦺\",\"🔥\"],[\"📍\",\"⬛\",\"🎯\",\"📍\"],[\"🎯\",\"⬛\",\"🚨\",\"🎯\"],[\"✅\",\"📍\",\"⬛\",\"🎯\"]]},{\"input\":[[\"🚨\",\"🚨\",\"🎯\",\"❄️\"],[\"❌\",\"🚨\",\"🦺\",\"⬛\"],[\"✅\",\"🎯\",\"📍\",\"❌\"],[\"⚠️\",\"⬛\",\"⬛\",\"❌\"]],\"output\":[[\"❄️\",\"⬛\",\"❌\",\"❌\"],[\"🎯\",\"🦺\",\"📍\",\"⬛\"],[\"🚨\",\"🚨\",\"🎯\",\"⬛\"],[\"🚨\",\"❌\",\"✅\",\"⚠️\"]]}],\"testInput\":[[\"🦺\",\"❌\",\"❄️\",\"🚨\"],[\"⚠️\",\"🦺\",\"📍\",\"⬛\"],[\"🎯\",\"🦺\",\"🦺\",\"⬛\"],[\"🦺\",\"⚠️\",\"📍\",\"❌\"]],\"testOutput\":[[\"🚨\",\"⬛\",\"⬛\",\"❌\"],[\"❄️\",\"📍\",\"🦺\",\"📍\"],[\"❌\",\"🦺\",\"🦺\",\"⚠️\"],[\"🦺\",\"⚠️\",\"🎯\",\"🦺\"]],\"hints\":[\"This is like spinning a toy three times to the right instead of once to the left to end up in the same place. You know they're the same, but computers have to think step-by-step through each turn.\",\"Imagine you're playing 'Simon Says' and Simon says 'turn around 3/4 of the way.' You'd just turn almost all the way around and stop. But a computer might think it has to turn a little bit, then turn again, then turn again, taking much longer to get to the same place.\",\"It's like when you're unscrewing a jar lid. You know you need to turn it mostly around to the left, but a computer might think it needs to turn it a little to the right three times instead of just turning left once. Both ways work, but one is much sillier.\",\"Rotate the entire grid 270 degrees clockwise 🔁🔁🔁 (¾ turn to the right). You can also think of this as 90 degrees counter-clockwise 🔄 (¼ turn to the left).\",\"The leftmost column becomes the top row, reading from left to right.\",\"Each row in the original becomes a column in the result, with order shifted accordingly.\"],\"transformationType\":\"rotation_270deg\",\"generated\":true},{\"id\":\"SEC-102\",\"title\":\"perimeter sensors Rotation Analysis\",\"description\":\"Airlock control systems got confused trying to rotate safety protocols 270 degrees. Instead of one smooth turn, it performed three separate 90-degree rotations of the actual airlock chamber, cycling through pressurization three times and trapping two astronauts in the middle. 270-degree rotations are particularly challenging because they require understanding that three quarter-turns equal one three-quarter turn, not just applying 90-degree logic three times. This tests deeper spatial reasoning and transformation composition. Analyze the perimeter sensors by rotating the input grid 270 degrees clockwise 🔁🔁🔁.\",\"category\":\"🔒 Security Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":4125,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"🔥\",\"✅\",\"⬛\",\"🎯\"],[\"📍\",\"📍\",\"⬛\",\"❌\"],[\"⬛\",\"🔥\",\"🚨\",\"🦺\"],[\"🔥\",\"⬛\",\"🦺\",\"⬛\"]],\"output\":[[\"🎯\",\"❌\",\"🦺\",\"⬛\"],[\"⬛\",\"⬛\",\"🚨\",\"🦺\"],[\"✅\",\"📍\",\"🔥\",\"⬛\"],[\"🔥\",\"📍\",\"⬛\",\"🔥\"]]},{\"input\":[[\"🎯\",\"🔥\",\"⬛\",\"❌\"],[\"🎯\",\"🎯\",\"❌\",\"📍\"],[\"⬛\",\"📍\",\"✅\",\"🦺\"],[\"❄️\",\"⬛\",\"⬛\",\"❌\"]],\"output\":[[\"❌\",\"📍\",\"🦺\",\"❌\"],[\"⬛\",\"❌\",\"✅\",\"⬛\"],[\"🔥\",\"🎯\",\"📍\",\"⬛\"],[\"🎯\",\"🎯\",\"⬛\",\"❄️\"]]}],\"testInput\":[[\"❄️\",\"🚨\",\"🦺\",\"⬛\"],[\"🚨\",\"🦺\",\"❌\",\"✅\"],[\"⚠️\",\"⬛\",\"🔥\",\"⚠️\"],[\"📍\",\"🦺\",\"⚠️\",\"🦺\"]],\"testOutput\":[[\"⬛\",\"✅\",\"⚠️\",\"🦺\"],[\"🦺\",\"❌\",\"🔥\",\"⚠️\"],[\"🚨\",\"🦺\",\"⬛\",\"🦺\"],[\"❄️\",\"🚨\",\"⚠️\",\"📍\"]],\"hints\":[\"This is like spinning a toy three times to the right instead of once to the left to end up in the same place. You know they're the same, but computers have to think step-by-step through each turn.\",\"Imagine you're playing 'Simon Says' and Simon says 'turn around 3/4 of the way.' You'd just turn almost all the way around and stop. But a computer might think it has to turn a little bit, then turn again, then turn again, taking much longer to get to the same place.\",\"It's like when you're unscrewing a jar lid. You know you need to turn it mostly around to the left, but a computer might think it needs to turn it a little to the right three times instead of just turning left once. Both ways work, but one is much sillier.\",\"Rotate the entire grid 270 degrees clockwise 🔁🔁🔁 (¾ turn to the right). You can also think of this as 90 degrees counter-clockwise 🔄 (¼ turn to the left).\",\"The leftmost column becomes the top row, reading from left to right.\",\"Each row in the original becomes a column in the result, with order shifted accordingly.\"],\"transformationType\":\"rotation_270deg\",\"generated\":true},{\"id\":\"SEC-103\",\"title\":\"defense matrix Rotation Analysis\",\"description\":\"Airlock control systems got confused trying to rotate safety protocols 270 degrees. Instead of one smooth turn, it performed three separate 90-degree rotations of the actual airlock chamber, cycling through pressurization three times and trapping two astronauts in the middle. 270-degree rotations are particularly challenging because they require understanding that three quarter-turns equal one three-quarter turn, not just applying 90-degree logic three times. This tests deeper spatial reasoning and transformation composition. Analyze the defense matrix by rotating the input grid 270 degrees clockwise 🔁🔁🔁.\",\"category\":\"🔒 Security Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11425,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"❌\",\"❄️\",\"❄️\",\"⚠️\"],[\"⬛\",\"🔥\",\"⬛\",\"🦺\"],[\"❌\",\"🎯\",\"✅\",\"❌\"],[\"🔥\",\"⚠️\",\"🎯\",\"⚠️\"]],\"output\":[[\"⚠️\",\"🦺\",\"❌\",\"⚠️\"],[\"❄️\",\"⬛\",\"✅\",\"🎯\"],[\"❄️\",\"🔥\",\"🎯\",\"⚠️\"],[\"❌\",\"⬛\",\"❌\",\"🔥\"]]},{\"input\":[[\"🚨\",\"⚠️\",\"🔥\",\"🎯\"],[\"📍\",\"✅\",\"⚠️\",\"🚨\"],[\"⚠️\",\"🚨\",\"🦺\",\"🔥\"],[\"📍\",\"🔥\",\"🔥\",\"❌\"]],\"output\":[[\"🎯\",\"🚨\",\"🔥\",\"❌\"],[\"🔥\",\"⚠️\",\"🦺\",\"🔥\"],[\"⚠️\",\"✅\",\"🚨\",\"🔥\"],[\"🚨\",\"📍\",\"⚠️\",\"📍\"]]}],\"testInput\":[[\"🚨\",\"📍\",\"🎯\",\"❌\"],[\"🎯\",\"⬛\",\"📍\",\"🦺\"],[\"❌\",\"🎯\",\"🎯\",\"🦺\"],[\"⚠️\",\"🚨\",\"✅\",\"🦺\"]],\"testOutput\":[[\"❌\",\"🦺\",\"🦺\",\"🦺\"],[\"🎯\",\"📍\",\"🎯\",\"✅\"],[\"📍\",\"⬛\",\"🎯\",\"🚨\"],[\"🚨\",\"🎯\",\"❌\",\"⚠️\"]],\"hints\":[\"This is like spinning a toy three times to the right instead of once to the left to end up in the same place. You know they're the same, but computers have to think step-by-step through each turn.\",\"Imagine you're playing 'Simon Says' and Simon says 'turn around 3/4 of the way.' You'd just turn almost all the way around and stop. But a computer might think it has to turn a little bit, then turn again, then turn again, taking much longer to get to the same place.\",\"It's like when you're unscrewing a jar lid. You know you need to turn it mostly around to the left, but a computer might think it needs to turn it a little to the right three times instead of just turning left once. Both ways work, but one is much sillier.\",\"Rotate the entire grid 270 degrees clockwise 🔁🔁🔁 (¾ turn to the right). You can also think of this as 90 degrees counter-clockwise 🔄 (¼ turn to the left).\",\"The leftmost column becomes the top row, reading from left to right.\",\"Each row in the original becomes a column in the result, with order shifted accordingly.\"],\"transformationType\":\"rotation_270deg\",\"generated\":true},{\"id\":\"SEC-104\",\"title\":\"perimeter sensors Vertical Analysis\",\"description\":\"Navigation displays showed star charts flipped vertically, but the AI tried to fix this by commanding the ship to literally fly upside-down. The crew spent 20 minutes floating around the bridge before someone manually corrected the display orientation. Vertical mirroring requires spatial visualization skills that AI finds challenging. While humans intuitively understand up-down flips, AI struggles to maintain consistent spatial orientation across different grid configurations. Analyze the perimeter sensors by flipping the input grid vertically 🔼🔽 top-to-bottom.\",\"category\":\"🔒 Security Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11425,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"🦺\",\"🎯\",\"🦺\",\"⚠️\"],[\"🔥\",\"⬛\",\"❌\",\"✅\"],[\"❄️\",\"⚠️\",\"⬛\",\"❌\"],[\"❄️\",\"❄️\",\"📍\",\"❌\"]],\"output\":[[\"❄️\",\"❄️\",\"📍\",\"❌\"],[\"❄️\",\"⚠️\",\"⬛\",\"❌\"],[\"🔥\",\"⬛\",\"❌\",\"✅\"],[\"🦺\",\"🎯\",\"🦺\",\"⚠️\"]]},{\"input\":[[\"⬛\",\"🚨\",\"🔥\",\"✅\"],[\"🚨\",\"🚨\",\"⬛\",\"❄️\"],[\"🦺\",\"✅\",\"🦺\",\"🎯\"],[\"⬛\",\"🦺\",\"❌\",\"⚠️\"]],\"output\":[[\"⬛\",\"🦺\",\"❌\",\"⚠️\"],[\"🦺\",\"✅\",\"🦺\",\"🎯\"],[\"🚨\",\"🚨\",\"⬛\",\"❄️\"],[\"⬛\",\"🚨\",\"🔥\",\"✅\"]]}],\"testInput\":[[\"📍\",\"🦺\",\"⚠️\",\"❌\"],[\"⚠️\",\"🔥\",\"⬛\",\"❌\"],[\"✅\",\"🚨\",\"⚠️\",\"🎯\"],[\"📍\",\"🔥\",\"🦺\",\"🚨\"]],\"testOutput\":[[\"📍\",\"🔥\",\"🦺\",\"🚨\"],[\"✅\",\"🚨\",\"⚠️\",\"🎯\"],[\"⚠️\",\"🔥\",\"⬛\",\"❌\"],[\"📍\",\"🦺\",\"⚠️\",\"❌\"]],\"hints\":[\"Imagine trying to read a book upside-down. You can flip it in your head easily, but computers get confused about which way is 'up' when they're looking at patterns. They don't have eyes like you do.\",\"Think about when you do a handstand and see the world upside-down. You still know where everything is, just flipped. But a computer would get confused and think the ceiling became the floor and try to walk on it.\",\"It's like looking at a picture of your family and then flipping it so everyone's head is at the bottom. You'd still recognize everyone, but a computer might think it's looking at completely different people hanging from the ceiling.\",\"Flip the entire grid vertically (top ↔ bottom) 🔼🔽.\",\"The top row becomes the bottom row, the second row from the top becomes the second row from the bottom, and so on.\",\"Each row maintains its order from left to right, but rows swap positions vertically.\"],\"transformationType\":\"vertical_reflection\",\"generated\":true},{\"id\":\"SEC-105\",\"title\":\"perimeter sensors Rotation Analysis\",\"description\":\"The waste management system tried to rotate disposal schedules by 270 degrees but applied three separate 90-degree transforms to the actual rotating waste compactor. The machine spun through three slow quarter-turns, taking 45 minutes to complete what should have been a 5-second data adjustment. 270-degree rotations are particularly challenging because they require understanding that three quarter-turns equal one three-quarter turn, not just applying 90-degree logic three times. This tests deeper spatial reasoning and transformation composition. Analyze the perimeter sensors by rotating the input grid 270 degrees clockwise 🔁🔁🔁.\",\"category\":\"🔒 Security Systems\",\"difficulty\":\"Intermediate\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":11425,\"requiredRankLevel\":1,\"emojiSet\":\"status_alerts\",\"examples\":[{\"input\":[[\"⚠️\",\"⬛\",\"🎯\",\"⬛\"],[\"📍\",\"📍\",\"❄️\",\"🚨\"],[\"🎯\",\"⚠️\",\"❄️\",\"📍\"],[\"✅\",\"⬛\",\"❌\",\"❄️\"]],\"output\":[[\"⬛\",\"🚨\",\"📍\",\"❄️\"],[\"🎯\",\"❄️\",\"❄️\",\"❌\"],[\"⬛\",\"📍\",\"⚠️\",\"⬛\"],[\"⚠️\",\"📍\",\"🎯\",\"✅\"]]},{\"input\":[[\"❄️\",\"📍\",\"🚨\",\"🚨\"],[\"📍\",\"📍\",\"🔥\",\"📍\"],[\"📍\",\"🔥\",\"⚠️\",\"🎯\"],[\"❄️\",\"🦺\",\"✅\",\"⬛\"]],\"output\":[[\"🚨\",\"📍\",\"🎯\",\"⬛\"],[\"🚨\",\"🔥\",\"⚠️\",\"✅\"],[\"📍\",\"📍\",\"🔥\",\"🦺\"],[\"❄️\",\"📍\",\"📍\",\"❄️\"]]}],\"testInput\":[[\"⬛\",\"🦺\",\"⚠️\",\"🦺\"],[\"❌\",\"❄️\",\"📍\",\"🔥\"],[\"🔥\",\"⬛\",\"📍\",\"🚨\"],[\"🎯\",\"❌\",\"🚨\",\"❌\"]],\"testOutput\":[[\"🦺\",\"🔥\",\"🚨\",\"❌\"],[\"⚠️\",\"📍\",\"📍\",\"🚨\"],[\"🦺\",\"❄️\",\"⬛\",\"❌\"],[\"⬛\",\"❌\",\"🔥\",\"🎯\"]],\"hints\":[\"This is like spinning a toy three times to the right instead of once to the left to end up in the same place. You know they're the same, but computers have to think step-by-step through each turn.\",\"Imagine you're playing 'Simon Says' and Simon says 'turn around 3/4 of the way.' You'd just turn almost all the way around and stop. But a computer might think it has to turn a little bit, then turn again, then turn again, taking much longer to get to the same place.\",\"It's like when you're unscrewing a jar lid. You know you need to turn it mostly around to the left, but a computer might think it needs to turn it a little to the right three times instead of just turning left once. Both ways work, but one is much sillier.\",\"Rotate the entire grid 270 degrees clockwise 🔁🔁🔁 (¾ turn to the right). You can also think of this as 90 degrees counter-clockwise 🔄 (¼ turn to the left).\",\"The leftmost column becomes the top row, reading from left to right.\",\"Each row in the original becomes a column in the result, with order shifted accordingly.\"],\"transformationType\":\"rotation_270deg\",\"generated\":true},{\"id\":\"SEC-236\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🔒 Security\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set2\",\"examples\":[{\"input\":[[\"🌑\",\"⬛\"],[\"🌕\",\"🌒\"]],\"output\":[[\"🌒\",\"🌒\"],[\"🌓\",\"🌑\"]]},{\"input\":[[\"☀️\",\"🌔\"],[\"🌘\",\"🌖\"]],\"output\":[[\"🌗\",\"🌕\"],[\"⬛\",\"🌖\"]]}],\"testInput\":[[\"🌗\",\"🌗\"],[\"🌗\",\"🌕\"]],\"testOutput\":[[\"🌗\",\"🌗\"],[\"🌗\",\"🌕\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"SEC-237\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🔒 Security\",\"difficulty\":\"Basic\",\"gridSize\":2,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set2\",\"examples\":[{\"input\":[[\"🌕\",\"🌒\"],[\"🌘\",\"⬛\"]],\"output\":[[\"🌗\",\"⬛\"],[\"🌘\",\"🌒\"]]},{\"input\":[[\"⬛\",\"☀️\"],[\"🌖\",\"🌔\"]],\"output\":[[\"🌘\",\"🌕\"],[\"🌑\",\"🌕\"]]}],\"testInput\":[[\"☀️\",\"🌑\"],[\"🌔\",\"🌑\"]],\"testOutput\":[[\"🌑\",\"🌑\"],[\"🌔\",\"☀️\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"SEC-238\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🔒 Security\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set2\",\"examples\":[{\"input\":[[\"🌑\",\"🌒\",\"🌑\"],[\"🌖\",\"🌗\",\"☀️\"],[\"🌕\",\"☀️\",\"☀️\"]],\"output\":[[\"🌑\",\"🌓\",\"🌓\"],[\"🌑\",\"☀️\",\"🌔\"],[\"🌓\",\"🌕\",\"🌕\"]]},{\"input\":[[\"🌕\",\"🌑\",\"🌖\"],[\"🌓\",\"🌖\",\"☀️\"],[\"🌗\",\"🌓\",\"☀️\"]],\"output\":[[\"🌘\",\"🌘\",\"🌘\"],[\"🌘\",\"🌑\",\"⬛\"],[\"🌔\",\"🌗\",\"🌕\"]]}],\"testInput\":[[\"🌖\",\"🌕\",\"🌕\"],[\"🌗\",\"🌕\",\"⬛\"],[\"🌘\",\"🌕\",\"🌕\"]],\"testOutput\":[[\"🌖\",\"🌗\",\"🌘\"],[\"🌕\",\"🌕\",\"🌕\"],[\"🌕\",\"⬛\",\"🌕\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"SEC-239\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🔒 Security\",\"difficulty\":\"Intermediate\",\"gridSize\":3,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set2\",\"examples\":[{\"input\":[[\"🌑\",\"🌒\",\"🌕\"],[\"🌖\",\"🌑\",\"🌑\"],[\"🌑\",\"🌔\",\"🌒\"]],\"output\":[[\"🌗\",\"⬛\",\"🌖\"],[\"🌕\",\"⬛\",\"🌔\"],[\"⬛\",\"🌒\",\"☀️\"]]},{\"input\":[[\"🌓\",\"☀️\",\"🌕\"],[\"🌕\",\"🌕\",\"☀️\"],[\"🌗\",\"⬛\",\"🌗\"]],\"output\":[[\"⬛\",\"☀️\",\"🌑\"],[\"🌒\",\"🌘\",\"⬛\"],[\"🌖\",\"🌕\",\"🌘\"]]}],\"testInput\":[[\"🌓\",\"🌖\",\"🌒\"],[\"🌔\",\"🌔\",\"🌕\"],[\"⬛\",\"☀️\",\"🌕\"]],\"testOutput\":[[\"🌕\",\"🌕\",\"🌒\"],[\"☀️\",\"🌔\",\"🌖\"],[\"⬛\",\"🌔\",\"🌓\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true},{\"id\":\"SEC-240\",\"title\":\"Primary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the primary diagonal (top-left to bottom-right)\",\"category\":\"🔒 Security\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set2\",\"examples\":[{\"input\":[[\"🌑\",\"🌘\",\"🌓\",\"🌓\"],[\"⬛\",\"🌑\",\"🌖\",\"⬛\"],[\"🌒\",\"🌖\",\"🌗\",\"🌓\"],[\"⬛\",\"🌖\",\"🌑\",\"☀️\"]],\"output\":[[\"🌓\",\"🌕\",\"🌑\",\"🌑\"],[\"🌑\",\"☀️\",\"🌓\",\"🌖\"],[\"🌒\",\"🌑\",\"☀️\",\"🌗\"],[\"🌖\",\"🌖\",\"🌗\",\"🌔\"]]},{\"input\":[[\"🌒\",\"🌑\",\"🌕\",\"⬛\"],[\"🌓\",\"🌒\",\"⬛\",\"🌒\"],[\"🌓\",\"🌓\",\"☀️\",\"☀️\"],[\"🌘\",\"🌓\",\"🌘\",\"🌗\"]],\"output\":[[\"🌘\",\"🌓\",\"🌗\",\"🌓\"],[\"🌔\",\"☀️\",\"🌔\",\"🌑\"],[\"🌔\",\"🌖\",\"🌑\",\"☀️\"],[\"🌘\",\"🌘\",\"🌕\",\"🌒\"]]}],\"testInput\":[[\"🌓\",\"🌘\",\"☀️\",\"⬛\"],[\"🌓\",\"🌘\",\"🌕\",\"⬛\"],[\"🌘\",\"🌕\",\"🌔\",\"🌓\"],[\"🌒\",\"🌖\",\"🌓\",\"🌕\"]],\"testOutput\":[[\"🌓\",\"🌓\",\"🌘\",\"🌒\"],[\"🌘\",\"🌘\",\"🌕\",\"🌖\"],[\"☀️\",\"🌕\",\"🌔\",\"🌓\"],[\"⬛\",\"⬛\",\"🌓\",\"🌕\"]],\"hints\":[\"Imagine a line going from the top-left corner to the bottom-right corner of the grid ↘️. Flip the grid over this line.\",\"This is like swapping rows and columns - the first row becomes the first column, the second row becomes the second column, and so on.\",\"The number in the top-right corner will move to the bottom-left corner, like looking at the grid in a mirror along the diagonal.\"],\"transformationType\":\"primary_diagonal_reflection\",\"generated\":true},{\"id\":\"SEC-241\",\"title\":\"Secondary Diagonal Reflection Task\",\"description\":\"Reflect the grid across the secondary diagonal (top-right to bottom-left)\",\"category\":\"🔒 Security\",\"difficulty\":\"Advanced\",\"gridSize\":4,\"timeLimit\":null,\"basePoints\":100,\"requiredRankLevel\":1,\"emojiSet\":\"celestial_set2\",\"examples\":[{\"input\":[[\"☀️\",\"🌑\",\"🌑\",\"⬛\"],[\"🌗\",\"🌗\",\"☀️\",\"🌔\"],[\"🌑\",\"🌖\",\"🌘\",\"🌘\"],[\"🌘\",\"🌒\",\"🌔\",\"⬛\"]],\"output\":[[\"🌑\",\"🌗\",\"🌔\",\"🌑\"],[\"🌗\",\"⬛\",\"🌕\",\"🌓\"],[\"🌗\",\"🌓\",\"🌗\",\"🌗\"],[\"🌗\",\"🌗\",\"🌓\",\"🌕\"]]},{\"input\":[[\"☀️\",\"🌕\",\"🌔\",\"🌑\"],[\"🌒\",\"☀️\",\"⬛\",\"⬛\"],[\"⬛\",\"🌓\",\"🌘\",\"🌕\"],[\"🌗\",\"⬛\",\"🌖\",\"🌑\"]],\"output\":[[\"🌕\",\"🌓\",\"🌒\",\"🌘\"],[\"⬛\",\"☀️\",\"🌗\",\"🌕\"],[\"🌑\",\"🌔\",\"🌔\",\"🌓\"],[\"☀️\",\"🌑\",\"☀️\",\"🌗\"]]}],\"testInput\":[[\"🌑\",\"🌕\",\"🌖\",\"🌗\"],[\"🌘\",\"🌕\",\"☀️\",\"🌕\"],[\"🌖\",\"🌓\",\"🌓\",\"🌖\"],[\"🌘\",\"🌗\",\"🌑\",\"⬛\"]],\"testOutput\":[[\"⬛\",\"🌖\",\"🌕\",\"🌗\"],[\"🌑\",\"🌓\",\"☀️\",\"🌖\"],[\"🌗\",\"🌓\",\"🌕\",\"🌕\"],[\"🌘\",\"🌖\",\"🌘\",\"🌑\"]],\"hints\":[\"Imagine a line going from the top-right corner to the bottom-left corner of the grid ↙️. Flip the grid over this line.\",\"The top-left corner will swap with the bottom-right corner, like a different kind of mirror.\",\"Think of this as \\\"flipping the grid upside down\\\" and then \\\"flipping it left to right\\\" all at once.\"],\"transformationType\":\"secondary_diagonal_reflection\",\"generated\":true}]"
}